@article{brahma,
 author = {Gulwani, Sumit and Jha, Susmit and Tiwari, Ashish and Venkatesan, Ramarathnam},
 title = {Synthesis of loop-free programs},
 journal = {SIGPLAN Not.},
 issue_date = {June 2011},
 volume = {46},
 number = {6},
 month = jun,
 year = {2011},
 issn = {0362-1340},
 pages = {62--73},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1993316.1993506},
 doi = {10.1145/1993316.1993506},
 acmid = {1993506},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {component-based synthesis, program synthesis, smt},
} 

@article{church-synth,
  title={Logic, Arithmetic, Automata},
  author={Church, A},
  year={1962}
}

@book{beautiful-code,
 author = {Oram, Andy and Wilson, Greg},
 title = {Beautiful code},
 year = {2007},
 isbn = {9780596510046},
 edition = {First},
 publisher = {O'Reilly},
} 

@article{sketch,
  author    = {Armando Solar-Lezama},
  title     = {Program sketching},
  journal   = {STTT},
  volume    = {15},
  number    = {5-6},
  year      = {2013},
  pages     = {475-495},
  ee        = {http://dx.doi.org/10.1007/s10009-012-0249-7},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@phdthesis{lezama-thesis,
    Author = {Solar Lezama, Armando},
    Title = {Program Synthesis By Sketching},
    School = {EECS Department, University of California, Berkeley},
    Year = {2008},
    Month = {Dec},
    URL = {http://www.eecs.berkeley.edu/Pubs/TechRpts/2008/EECS-2008-177.html},
    Number = {UCB/EECS-2008-177},
    Abstract = {The goal of software synthesis is to generate programs automatically from high-level specifications. However, efficient implementations for challenging programs require a combination of high-level algorithmic insights and low-level implementation details. Deriving the low-level details is a natural job for a computer, but the synthesizer can not replace the human insight. Therefore, one of the central challenges for software synthesis is to establish a synergy between the programmer and the synthesizer, exploiting the programmer's expertise to reduce the burden on the synthesizer.

This thesis introduces \emph{sketching}, a new style of synthesis that offers a fresh approach to the synergy problem. Previous approaches have relied on meta-programming, or variations of interactive theorem proving to help the synthesizer deduce an efficient implementation. The resulting systems are very powerful, but they require the programmer to master new formalisms far removed from traditional programming models. To make synthesis accessible, programmers must be able to provide their insight effortlessly, using formalisms they already understand. 

In Sketching, insight is communicated through a partial program, a \emph{sketch} that expresses the high-level structure of an implementation but leaves holes in place of the low-level details. This form of synthesis is made possible by a new SAT-based inductive synthesis procedure that can efficiently synthesize an implementation from a small number of test cases. This algorithm forms the core of a new counterexample guided inductive synthesis procedure (\cegis{}) which combines the inductive synthesizer with a validation procedure to automatically generate test inputs and ensure that the generated program satisfies its specification. With a few extensions, \cegis{} can even use its sequential inductive synthesizer to generate concurrent programs; all the concurrency related reasoning is delegated to an off-the-shelf validation procedure.

The resulting synthesis system scales to real programming problems from a variety of domains ranging from bit-level ciphers to manipulations of linked datastructures. The system was even used to produce a complete optimized implementation of the AES cipher. The concurrency aware synthesizer was also used to synthesize, in a matter of minutes, the details of a fine-locking scheme for a concurrent set, a sense reversing barrier, and even a solution to the dining philosophers problem. 

The system was also extended with domain specific knowledge to better handle the problem of implementing stencil computations, an important domain in scientific computing. For this domain, we were able to encode domain specific insight as a problem reduction that converted stencil sketches into simplified sketch problems which \cegis{} resolved in a matter of minutes. This specialized synthesizer was used to quickly implement a MultiGrid solver for partial differential equations containing many difficult implementation strategies from the literature. 

In short, this thesis shows that sketching is a viable approach to making synthesis practical in a general programming context.}
}

@book{taocp2,
 author = {Knuth, Donald E.},
 title = {The art of computer programming, volume 2 (3rd ed.): seminumerical algorithms},
 year = {1997},
} 

@article{2sum,
author = {Peter Kornerup and Vincent Lefevre and Nicolas Louvet and Jean-Michel Muller},
title = {On the Computation of Correctly Rounded Sums},
journal ={IEEE Transactions on Computers},
volume = {61},
number = {3},
issn = {0018-9340},
year = {2012},
pages = {289-298},
doi = {http://doi.ieeecomputersociety.org/10.1109/TC.2011.27},
publisher = {IEEE},
}

@incollection{quality-synthesis,
year={2009},
isbn={978-3-642-02657-7},
booktitle={Computer Aided Verification},
volume={5643},
series={Lecture Notes in Computer Science},
editor={Bouajjani, Ahmed and Maler, Oded},
doi={10.1007/978-3-642-02658-4_14},
title={Better Quality in Synthesis through Quantitative Objectives},
url={http://dx.doi.org/10.1007/978-3-642-02658-4_14},
publisher={Springer Berlin Heidelberg},
author={Bloem, Roderick and Chatterjee, Krishnendu and Henzinger, ThomasA. and Jobstmann, Barbara},
pages={140-156}
}
@inproceedings{brahma-icse,
  author    = {Susmit Jha and
               Sumit Gulwani and
               Sanjit A. Seshia and
               Ashish Tiwari},
  title     = {Oracle-Guided Component-Based Program Synthesis},
  booktitle = {ICSE},
  year      = {2010},
  month = {May},
  pages     = {215-224},
  abstract = {
We present a novel approach to automatic synthesis of loop-free programs. The approach is based on a combination of oracle-guided learning from examples, and constraint-based synthesis from components using satisfiability modulo theories (SMT) solvers. Our approach is suitable for many applications, including as an aid to program understanding tasks such as deobfuscating malware. We demonstrate the efficiency and effectiveness of our approach by synthesizing bit-manipulating programs and deobfuscating programs.},
  wwwnote = {Extended tech report version available in <a href="http://www.eecs.berkeley.edu/~sseshia/pubdir/icse10-TR.pdf">PDF</a>}  
}

@article{fast2sum,
author = {Peter Kornerup and Vincent Lefevre and Nicolas Louvet and Jean-Michel Muller},
title = {On the Computation of Correctly Rounded Sums},
journal ={IEEE Transactions on Computers},
volume = {61},
number = {3},
issn = {0018-9340},
year = {2012},
pages = {289-298},
doi = {http://doi.ieeecomputersociety.org/10.1109/TC.2011.27},
publisher = {IEEE},
}

@inproceedings{glucose-paper,
 author = {Audemard, Gilles and Simon, Laurent},
 title = {Predicting learnt clauses quality in modern {SAT} solvers},
 series = {IJCAI'09},
 year = {2009},
 pages = {399--404},
 numpages = {6},
 url = {http://dl.acm.org/citation.cfm?id=1661445.1661509},
 acmid = {1661509},
 publisher = {Morgan Kaufmann},
} 

@inproceedings{gnu-superoptimiser,
 author = {Granlund, Torbj\"{o}rn and Kenner, Richard},
 title = {Eliminating branches using a superoptimizer and the {GNU C} compiler},
 booktitle = {PLDI},
 year = {1992},
 isbn = {0-89791-475-9},
 pages = {341--352},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/143095.143146},
 doi = {10.1145/143095.143146},
 acmid = {143146},
 publisher = {ACM},
} 

@Book{hackers-delight,
  author =       {Henry S. Warren},
  title =        {Hacker's Delight},
  publisher =    {Addison-Wesley},
  year =         2003
}


@inproceedings{aha-paper,
 author = {Massalin, Henry},
 title = {Superoptimizer: a look at the smallest program},
 booktitle = { ASPLOS 1987},
 year = {1987},
 isbn = {0-8186-0805-6},
 pages = {122--126},
 numpages = {5},
 url = {http://dx.doi.org/10.1145/36206.36194},
 doi = {10.1145/36206.36194},
 acmid = {36194},
 publisher = {IEEE},
} 

@Misc{aha-website,
 author = { Warren, Henry },
 title = {{AHA}: A Hacker's Assistant},
 howpublished = {\url{http://www.hackersdelight.org/aha/aha.pdf}}
}

@Misc{cbmc-website,
  author = { Daniel Kroening },
  title = {{CBMC}},
  howpublished = {\url{http://www.cprover.org/cbmc/}}
}

@incollection{proof-planning,
year={1993},
isbn={978-3-540-19806-2},
booktitle={Logic Program Synthesis and Transformation},
doi={10.1007/978-1-4471-3560-9_1},
title={Logic Program Synthesis via Proof Planning},
url={http://dx.doi.org/10.1007/978-1-4471-3560-9_1},
author={Kraan, Ina and Basin, David and Bundy, Alan},
pages={1-14},
language={English}
}

@article{manna-waldinger,
 author = {Manna, Zohar and Waldinger, Richard J.},
 title = {Toward automatic program synthesis},
 journal = {Commun. ACM},
 issue_date = {March 1971},
 volume = {14},
 number = {3},
 month = mar,
 year = {1971},
 issn = {0001-0782},
 pages = {151--165},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/362566.362568},
 doi = {10.1145/362566.362568},
 acmid = {362568},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {answer extraction, artificial intelligence, automatic program synthesis, mathematical induction principle, problem solving, theorem proving},
} 

@article{gulwani-excel,
 author = {Gulwani, Sumit and Harris, William R. and Singh, Rishabh},
 title = {Spreadsheet data manipulation using examples},
 journal = {Commun. ACM},
 issue_date = {August 2012},
 volume = {55},
 number = {8},
 month = aug,
 year = {2012},
 issn = {0001-0782},
 pages = {97--105},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/2240236.2240260},
 doi = {10.1145/2240236.2240260},
 acmid = {2240260},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@InProceedings{stanford-superoptimiser,
  author =       {Sorav Bansal and Alex Aiken},
  title =        {Automatic Generation of Peephole Superoptimizers},
  booktitle = {ASPLOS 2006},
  year =         2006,
  publisher = {ACM}
}

@TechReport{Denali-1,
  author =       {Rajeev Joshi and Greg Nelson and Yunhong Zhou},
  title =        {The Straight-Line Automatic Programming Problem},
  institution =  {HP Labs},
  year =         2003,
  url = {\url{http://www.hpl.hp.com/techreports/2003/HPL-2003-236.ps}}
}

@inproceedings{toast,
  author    = {Martin Brain and
               Tom Crick and
               Marina De Vos and
               John Fitch},
  title     = {{TOAST}: Applying Answer Set Programming to Superoptimisation},
  booktitle = {ICLP},
  year      = {2006},
  pages     = {270-284},
  ee        = {http://dx.doi.org/10.1007/11799573_21},
  crossref  = {DBLP:conf/iclp/2006},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@INPROCEEDINGS{ranking-synth,
    author = {Byron Cook and Daniel Kroening and Christoph M. Wintersteiger},
    title = {Ranking function synthesis for bit-vector relations},
    booktitle = {in Proc. of TACAS, ser. LNCS},
    year = {2010},
    publisher = {Springer}
}

@article{synth-interpolants,
  author    = {Georg Hofferek and
               Ashutosh Gupta and
               Bettina K{\"o}nighofer and
               Jie-Hong Roland Jiang and
               Roderick Bloem},
  title     = {Synthesizing Multiple Boolean Functions using Interpolation
               on a Single Proof},
  journal   = {CoRR},
  volume    = {abs/1308.4767},
  year      = {2013},
  ee        = {http://arxiv.org/abs/1308.4767},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}


@inproceedings{conficker,
 author = {Porras, Phillip and Sa\"{\i}di, Hassen and Yegneswaran, Vinod},
 title = {A Foray into Conficker's Logic and Rendezvous Points},
 booktitle = {Proceedings of the 2Nd USENIX Conference on Large-scale Exploits and Emergent Threats: Botnets, Spyware, Worms, and More},
 series = {LEET'09},
 year = {2009},
 location = {Boston, MA},
 pages = {7--7},
 numpages = {1},
 url = {http://dl.acm.org/citation.cfm?id=1855676.1855683},
 acmid = {1855683},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
} 

@inproceedings{eldib-wang,
  author    = {Hassan Eldib and
               Chao Wang},
  title     = {An SMT based method for optimizing arithmetic computations
               in embedded software code},
  booktitle = {FMCAD},
  year      = {2013},
  pages     = {129-136},
  ee        = {http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=6679401},
  crossref  = {DBLP:conf/fmcad/2013},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

