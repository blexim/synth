[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 1

Increasing sequence length to 1

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 0

Increasing sequence length to 2

[]
Fastest checker: cbmc
t1 = a1 >>> a2
t2 = a2 >>> t1
Fastest checker: cbmc
Fails for (4, 3)

[]
Fastest checker: cbmc
t1 = a1 ^ a2
t2 = t1 <= a2
Fastest checker: cbmc
Fails for (2, 8)

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 1

Increasing sequence length to 2

[]
Fastest checker: cbmc
t1 = a1 & 0xe
t2 = a2 / t1
Fastest checker: cbmc
Fails for (10, 9)

[]
Fastest checker: cbmc
t1 = 0xd & a1
t2 = t1 < a2
Fastest checker: cbmc
Fails for (14, 9)

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 2

Increasing sequence length to 2

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 0

Increasing sequence length to 3

[]
Fastest checker: cbmc
t1 = -a2
t2 = a1 & t1
t3 = a2 >>> t2
Fastest checker: cbmc
Fails for (0, 0)

[]
Fastest checker: cbmc
t1 = ~a2
t2 = a1 & t1
t3 = t2 <= a2
Fastest checker: cbmc
Correct for wordlen=4
Fastest checker: cbmc
Also correct for wordlen=32!







Finished in 38.23s

t1 = ~a2
t2 = a1 & t1
t3 = t2 <= a2

Perf counters:
{'cbmc': 18, 'iterations': 11}
Perf timers:
verify: 5.07s
checker: 38.19s
_: 38.23s
synth: 33.13s
