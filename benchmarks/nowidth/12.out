[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 1

Increasing sequence length to 1

[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 0

Increasing sequence length to 2

[]
Fastest checker: explicit
t1 = a1 / a2
t2 = a2 << t1
Fastest checker: explicit
Fails for (0, 0)

[]
Fastest checker: explicit
t1 = a2 ^ a1
t2 = t1 <= a2
Fastest checker: explicit
Fails for (1, 2)

[]
Fastest checker: explicit
t1 = a2 & a1
t2 = t1 s<= a1
Fastest checker: explicit
Fails for (1, 0)

[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 1

Increasing sequence length to 2

[]
Fastest checker: explicit
t1 = a1 & 0x9
t2 = t1 <= a2
Fastest checker: explicit
Fails for (2, 0)

[]
Fastest checker: explicit
t1 = a1 & 0xb
t2 = t1 <= a2
Fastest checker: explicit
Fails for (4, 0)

[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 2

Increasing sequence length to 2

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 0

Increasing sequence length to 3

[]
Fastest checker: cbmc
t1 = a1 >>> a2
t2 = a2 ^ t1
t3 = t2 <= a2
Fastest checker: explicit
Fails for (2, 1)

[]
Fastest checker: cbmc
t1 = a2 >>> a1
t2 = a1 >>> a2
t3 = t2 <= t1
Fastest checker: explicit
Fails for (4, 3)

[]
Fastest checker: cbmc
t1 = ~a2
t2 = a1 & t1
t3 = t2 <= a2
Fastest checker: explicit
Correct for wordlen=4
Fastest checker: cbmc
Also correct for wordlen=32!







Finished in 21.43s

t1 = ~a2
t2 = a1 & t1
t3 = t2 <= a2

Perf counters:
{'cbmc': 5, 'explicit': 17, 'iterations': 13}
Perf timers:
verify: 1.97s
checker: 21.10s
_: 21.43s
synth: 19.43s
