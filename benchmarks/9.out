[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 1

Increasing sequence length to 1

[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 0

Increasing sequence length to 2

[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 1

Increasing sequence length to 2

[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 2

Increasing sequence length to 2

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 0

Increasing sequence length to 3

[]
Fastest checker: explicit
t1 = a1 >>> a1
t2 = t1 ^ a1
t3 = t2 - t1
Fastest checker: explicit
Correct for wordlen=4
Fastest checker: explicit
Trying to generalize...
Fastest checker: explicit
Couldn't generalize :-(
Excluding current sequence
[]
Fastest checker: explicit
t1 = a1 >>> a1
t2 = t1 ^ a1
t3 = t2 - t1
Fastest checker: explicit
Correct for wordlen=4
Fastest checker: explicit
Trying to generalize...
Fastest checker: explicit
Couldn't generalize :-(
Increasing wordlen to 5
[]
Fastest checker: explicit
t1 = a1 >>> a1
t2 = t1 ^ a1
t3 = t2 - t1
Fastest checker: explicit
Correct for wordlen=5
Fastest checker: explicit
Trying to generalize...
Fastest checker: explicit
Couldn't generalize :-(
Excluding current sequence
[]
Fastest checker: explicit
t1 = a1 >>> a1
t2 = t1 ^ a1
t3 = t2 - t1
Fastest checker: explicit
Correct for wordlen=5
Fastest checker: explicit
Trying to generalize...
Fastest checker: explicit
Couldn't generalize :-(
Increasing wordlen to 6
[]
Fastest checker: explicit
t1 = a1 >>> a1
t2 = t1 ^ a1
t3 = t2 - t1
Fastest checker: explicit
Fails for (33,)

[]
Fastest checker: cbmc
t1 = a1 >>> a1
t2 = t1 + a1
t3 = t1 ^ t2
Fastest checker: explicit
Fails for (33,)

[]
Fastest checker: cbmc
t1 = a1 >>> a1
t2 = a1 ^ t1
t3 = t2 - t1
Fastest checker: explicit
Fails for (33,)

[]
Fastest checker: cbmc
t1 = a1 >>> a1
t2 = t1 ^ a1
t3 = t2 - t1
Fastest checker: explicit
Fails for (33,)

[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 1

Increasing sequence length to 3

[]
Fastest checker: cbmc
t1 = a1 >>> a1
t2 = t1 | 0x1
t3 = t2 * a1
Fastest checker: explicit
Fails for (33,)

[]
Fastest checker: cbmc
t1 = a1 >>> a1
t2 = t1 ^ a1
t3 = t2 - t1
Fastest checker: explicit
Fails for (33,)

[]
Fastest checker: cbmc
t1 = a1 >>> 0x5
t2 = a1 + t1
t3 = t1 ^ t2
Fastest checker: explicit
Correct for wordlen=6
Fastest checker: explicit
Trying to generalize...
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: cbmc







Finished in 35.09s

t1 = a1 >>> 0x1f
t2 = a1 + t1
t3 = t1 ^ t2

Perf counters:
{'cbmc': 8, 'explicit': 33, 'exclusions': 2, 'iterations': 17}
Perf timers:
verify: 4.43s
checker: 34.44s
generalize: 1.76s
_: 35.09s
synth: 30.62s
