Using seed: 1337
[]
Fastest checker: genetic
Evars: 14, 9, 7, 9, 14, 12, 1
Program 0:
t1 = i + i;
I = i - N;

Fastest checker: explicit
Fails for (0, 15, 0, 0, 0, 0, 0)

[]
Fastest checker: genetic
Evars: 3, 5, 11, 4, 13, 5, 6
Program 0:
t1 = M * b;
t2 = N < M;
t3 = t1 < t2;
t4 = b * i;
I = max(t4, t2);

Fastest checker: explicit
Fails for (0, 15, 1, 0, 0, 0, 0)

[]
Fastest checker: genetic
Evars: 12, 4, 11, 11, 7, 0, 4
Program 0:
t1 = ~i;
t2 = ((sword_t) 0x1) < ((sword_t) t1);
t3 = i >> M;
I = t1 >> t1;

Fastest checker: explicit
Fails for (0, 11, 0, 0, 0, 0, 0)

[]
Fastest checker: genetic
Evars: 15, 14, 8, 2, 11, 0, 7
Program 0:
t1 = i < c;
t2 = min(M, N);
t3 = max(M, M);
t4 = max(N, 0xd);
I = N - c;

Fastest checker: explicit
Fails for (0, 15, 0, 0, 1, 0, 0)

[]
Fastest checker: genetic
Evars: 15, 8, 1, 5, 14, 15, 1
Program 0:
t1 = !c || c;
t2 = a % t1;
I = !t1 || j;

Fastest checker: explicit
Fails for (0, 15, 0, 1, 0, 0, 0)

[]
Fastest checker: genetic
Evars: 14, 12, 5, 15, 2, 3, 15
Program 0:
t1 = c & i;
t2 = M + b;
t3 = j ^ a;
t4 = a - N;
I = t2 < t4;

Fastest checker: explicit
Fails for (1, 15, 0, 0, 0, 0, 0)

[]
Fastest checker: genetic
Evars: 3, 12, 9, 9, 11, 4, 1
Program 0:
t1 = ((sword_t) j) < ((sword_t) b);
t2 = a % i;
t3 = b << M;
I = M << j;

Fastest checker: explicit
Fails for (0, 0, 0, 8, 0, 0, 0)

[]
Fastest checker: genetic
Evars: 9, 6, 3, 10, 9, 2, 13
Program 0:
t1 = 0x3 == b;
t2 = M + t1;
t3 = ((sword_t) 0x3) >> ((sword_t) 0x3);
I = N & b;

Fastest checker: cbmc
Fails for (0, 8, 8, 8, 2, 9, 8)

[]
Fastest checker: genetic
Evars: 4, 2, 0, 9, 4, 10, 13
Program 0:
t1 = ((sword_t) i) < ((sword_t) c);
I = ((sword_t) t1) < ((sword_t) i);

Fastest checker: explicit
Fails for (0, 7, 0, 8, 0, 0, 0)

[]
Fastest checker: genetic
Evars: 6, 12, 6, 4, 5, 0, 12
Program 0:
I = M < N;

Fastest checker: cbmc
Fails for (0, 2, 0, 12, 3, 3, 12)

[]
Fastest checker: genetic
Evars: 8, 6, 7, 13, 8, 15, 14
Program 0:
t1 = M << c;
I = a * N;

Fastest checker: cbmc
Fails for (1, 12, 0, 8, 3, 13, 8)

[]
Fastest checker: genetic
Evars: 14, 10, 12, 3, 1, 11, 2
Program 0:
I = N * b;

Fastest checker: cbmc
Fails for (0, 4, 1, 8, 3, 5, 8)

[]
Fastest checker: genetic
Evars: 5, 8, 13, 0, 11, 6, 14
Program 0:
I = ((sword_t) a) >> ((sword_t) 0x2);

Fastest checker: explicit
Fails for (4, 15, 0, 0, 0, 0, 0)

[]
Fastest checker: genetic
Evars: 6, 15, 12, 3, 2, 1, 3
Program 0:
t1 = c | a;
I = a ? b : a;

Fastest checker: explicit
Fails for (1, 15, 1, 0, 0, 0, 0)

[]
Fastest checker: genetic
Evars: 14, 8, 5, 11, 14, 8, 12
Program 0:
I = ((sword_t) a) < ((sword_t) N);

Fastest checker: explicit
Fails for (8, 15, 0, 0, 0, 0, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;

Fastest checker: cbmc
Fails for (0, 0, 2, 0, 3, 1, 0)

[]
Fastest checker: genetic
Evars: 12, 10, 15, 11, 6, 15, 9
Program 0:
t1 = N <= b;
I = N << 0xa;








Timeout
Perf counters:
{'genetic': 68, 'cbmc': 56, 'explicit': 11, 'timeout': 1, 'iterations': 68}
Perf timers:
verify: 116.87s
checker: 118.42s
gcc: 0.85s
_: 120.00s
synth: 2.78s
