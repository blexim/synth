Using seed: 1337
[]
Fastest checker: genetic
Evars: 4, 1, 10, 12, 5, 15, 10
Program 0:
t1 = v + v;
t2 = t1 s<= y;
I = z >> c;

Fastest checker: explicit
Fails for (0, 9, 5, 9, 2, 13, 6)

[]
Fastest checker: genetic
Evars: 13, 1, 12, 9, 8, 14, 1
Program 0:
t1 = 0xc >>> y;
I = u * 0xc;

Fastest checker: explicit
Fails for (1, 9, 5, 9, 2, 13, 6)

[]
Fastest checker: genetic
Evars: 5, 7, 4, 2, 13, 6, 14
Program 0:
t1 = y >>> x;
I = c s< y;

Fastest checker: explicit
Fails for (0, 7, 0, 7, 3, 13, 6)

[]
Fastest checker: genetic
Evars: 2, 7, 10, 15, 13, 8, 0
Program 0:
t1 = z s< z;
I = v s< t1;

Fastest checker: explicit
Fails for (0, 8, 8, 8, 3, 13, 6)

[]
Fastest checker: genetic
Evars: 11, 6, 3, 3, 9, 12, 13
Program 0:
t1 = u == x;
I = w == z;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 13, 13, 6)

[]
Fastest checker: genetic
Evars: 6, 6, 13, 9, 8, 15, 6
Program 0:
t1 = z & u;
t2 = w == 0xa;
I = w & u;

Fastest checker: explicit
Fails for (1, 0, 0, 0, 13, 13, 6)

[]
Fastest checker: genetic
Evars: 4, 5, 10, 8, 14, 0, 15
Program 0:
t1 = u << z;
t2 = v <= w;
I = w <= t2;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 0, 14, 6)

[]
Fastest checker: genetic
Evars: 14, 2, 14, 10, 0, 15, 12
Program 0:
I = u & 0x6;

Fastest checker: explicit
Fails for (2, 0, 0, 0, 0, 14, 6)

[]
Fastest checker: genetic
Evars: 7, 4, 9, 3, 9, 14, 5
Program 0:
I = u >>> z;

Fastest checker: explicit
Fails for (4, 0, 0, 0, 0, 14, 6)

[]
Fastest checker: genetic
Evars: 9, 4, 11, 14, 1, 2, 7
Program 0:
t1 = 0x6 ^ c;
t2 = w & v;
I = t2 | t2;

Fastest checker: explicit
Fails for (0, 0, 1, 0, 1, 14, 6)

[]
Fastest checker: genetic
Evars: 13, 7, 1, 15, 7, 9, 12
Program 0:
I = x - y;

Fastest checker: explicit
Fails for (0, 1, 1, 0, 1, 14, 6)

[]
Fastest checker: genetic
Evars: 5, 2, 8, 1, 14, 5, 13
Program 0:
t1 = w ==> x;
I = t1 s<= z;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 0, 7)

[]
Fastest checker: genetic
Evars: 7, 0, 10, 14, 2, 12, 1
Program 0:
I = 0x1 >>> c;

Fastest checker: cbmc
Fails for (0, 4, 0, 0, 0, 2, 0)

[]
Fastest checker: genetic
Evars: 8, 1, 12, 0, 7, 12, 3
Program 0:
I = c s<= x;

Fastest checker: explicit
Fails for (0, 7, 0, 0, 0, 2, 0)

[]
Fastest checker: genetic
Evars: 0, 14, 15, 14, 7, 13, 10
Program 0:
t1 = -x;
I = c ? 0x0 : w;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 2, 0)

[]
Fastest checker: genetic
Evars: 5, 3, 13, 14, 3, 11, 11
Program 0:
I = w & x;

Fastest checker: explicit
Fails for (0, 1, 0, 0, 1, 2, 0)

[]
Fastest checker: genetic
Evars: 10, 11, 11, 9, 14, 3, 13
Program 0:
t1 = w < v;
I = t1 >> c;

Fastest checker: explicit
Fails for (0, 0, 2, 0, 1, 2, 0)

[]
Fastest checker: genetic
Evars: 6, 10, 11, 9, 5, 5, 3
Program 0:
t1 = u ==> z;
I = c < u;

Fastest checker: explicit
Fails for (1, 0, 2, 0, 1, 2, 0)

[]
Fastest checker: genetic
Evars: 8, 2, 11, 14, 2, 1, 13
Program 0:
t1 = w >>> c;
t2 = 0x7 >>> u;
I = t2 s<= z;

Fastest checker: explicit
Fails for (2, 7, 2, 0, 1, 2, 0)

[]
Fastest checker: genetic
Evars: 9, 5, 13, 8, 7, 0, 7
Program 0:
t1 = max(v, v);
t2 = v + t1;
I = z < y;

Fastest checker: explicit
Fails for (0, 7, 0, 3, 1, 2, 0)

[]
Fastest checker: genetic
Evars: 5, 14, 7, 11, 5, 12, 0
Program 0:
I = 0x9 < v;

Fastest checker: explicit
Fails for (0, 7, 10, 3, 1, 2, 0)

[]
Fastest checker: genetic
Evars: 14, 8, 10, 8, 14, 3, 8
Program 0:
t1 = v * y;
I = z < u;

Fastest checker: explicit
Fails for (3, 7, 10, 3, 1, 2, 0)

[]
Fastest checker: genetic
Evars: 8, 7, 3, 8, 0, 4, 7
Program 0:
I = 0x4 s<= z;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 0, 4, 0)

[]
Fastest checker: genetic
Evars: 8, 2, 11, 8, 0, 4, 7
Program 0:
I = 0x3 s<= z;

Fastest checker: explicit
Fails for (0, 5, 0, 0, 0, 4, 0)

[]
Fastest checker: genetic
Evars: 9, 4, 1, 15, 10, 13, 7
Program 0:
t1 = 0xb ==> u;
I = 0xb <= v;

Fastest checker: explicit
Fails for (0, 5, 11, 0, 0, 4, 0)

[]
Fastest checker: genetic
Evars: 4, 2, 11, 8, 11, 7, 13
Program 0:
t1 = min(w, z);
t2 = ~y;
I = 0x5 s<= t1;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 5, 5, 0)

[]
Fastest checker: genetic
Evars: 12, 6, 7, 15, 13, 8, 4
Program 0:
t1 = ~u;
t2 = 0x9 >> y;
I = w s<= 0x9;

Fastest checker: explicit
Fails for (0, 4, 0, 0, 8, 5, 0)

[]
Fastest checker: genetic
Evars: 7, 4, 1, 11, 8, 3, 5
Program 0:
t1 = w == y;
I = y / 0xa;

Fastest checker: explicit
Fails for (0, 4, 0, 10, 8, 5, 0)

[]
Fastest checker: genetic
Evars: 14, 13, 4, 8, 14, 9, 7
Program 0:
t1 = u ? v : c;
I = u >>> 0xf;

Fastest checker: explicit
Fails for (8, 4, 0, 10, 8, 5, 0)

[]
Fastest checker: genetic
Evars: 3, 6, 4, 14, 14, 10, 0
Program 0:
t1 = 0x5 + z;
t2 = y << t1;
t3 = w & v;
I = t3 >> t3;

Fastest checker: explicit
Fails for (0, 4, 8, 10, 8, 5, 0)

[]
Fastest checker: genetic
Evars: 3, 6, 4, 14, 14, 10, 5
Program 0:
I = 0x5 s< u;

Fastest checker: explicit
Fails for (6, 4, 8, 10, 8, 5, 0)

[]
Fastest checker: genetic
Evars: 3, 12, 5, 10, 9, 11, 1
Program 0:
t1 = y < w;
t2 = z - 0x8;
I = c s< t2;

Fastest checker: cbmc
Fails for (0, 7, 0, 8, 0, 3, 10)

[]
Fastest checker: genetic
Evars: 1, 3, 6, 12, 7, 7, 1
Program 0:
t1 = ~y;
I = 0x6 s<= z;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 0, 6, 10)

[]
Fastest checker: genetic
Evars: 14, 13, 14, 8, 4, 3, 0
Program 0:
t1 = w ^ x;
t2 = y != 0xb;
I = u / 0xb;

Fastest checker: explicit
Fails for (11, 3, 0, 0, 0, 6, 10)

[]
Fastest checker: genetic
Evars: 14, 13, 14, 8, 4, 3, 0
Program 0:
t1 = z s< z;
I = 0xb < x;

Fastest checker: explicit
Fails for (0, 12, 0, 8, 0, 6, 10)

[]
Fastest checker: genetic
Evars: 2, 13, 0, 13, 14, 10, 2
Program 0:
t1 = u - x;
t2 = min(u, y);
t3 = u + z;
t4 = w + x;
I = v / 0xc;

Fastest checker: explicit
Fails for (0, 3, 12, 9, 0, 6, 10)

[]
Fastest checker: genetic
Evars: 2, 13, 14, 13, 14, 0, 12
Program 0:
t1 = z * z;
I = 0xc < x;

Fastest checker: explicit
Fails for (0, 13, 12, 9, 0, 6, 10)

[]
Fastest checker: genetic
Evars: 14, 0, 15, 15, 10, 13, 11
Program 0:
t1 = 0xd ==> u;
I = 0xd <= v;

Fastest checker: explicit
Fails for (0, 3, 13, 9, 0, 6, 10)

[]
Fastest checker: genetic
Evars: 15, 13, 0, 13, 14, 0, 12
Program 0:
t1 = min(u, y);
I = z == c;

Fastest checker: cbmc
Fails for (1, 1, 0, 15, 0, 14, 14)

[]
Fastest checker: genetic
Evars: 13, 4, 15, 15, 10, 13, 11
Program 0:
t1 = max(x, v);
t2 = v + v;
I = 0xf <= v;

Fastest checker: explicit
Fails for (0, 15, 15, 15, 0, 14, 14)

[]
Fastest checker: genetic
Evars: 2, 13, 0, 13, 14, 0, 12
Program 0:
t1 = y != 0xc;
I = u / 0xc;

Fastest checker: explicit
Fails for (12, 15, 15, 15, 0, 14, 14)

[]
Fastest checker: genetic
Evars: 1, 4, 9, 11, 2, 8, 8
Program 0:
t1 = min(v, 0x9);
I = z s< 0x9;

Fastest checker: cbmc
Fails for (0, 8, 0, 8, 0, 8, 3)

[]
Fastest checker: genetic
Evars: 9, 4, 5, 13, 8, 1, 7
Program 0:
t1 = v & w;
t2 = min(t1, v);
I = u * t2;

Fastest checker: explicit
Fails for (1, 0, 1, 0, 1, 8, 3)

[]
Fastest checker: genetic
Evars: 7, 13, 0, 13, 14, 0, 12
Program 0:
t1 = v * c;
t2 = 0xc < u;
I = u * t2;

Fastest checker: explicit
Fails for (13, 0, 1, 0, 1, 8, 3)

[]
Fastest checker: genetic
Evars: 5, 6, 0, 5, 9, 7, 8
Program 0:
I = y == 0x5;

Fastest checker: explicit
Fails for (0, 5, 0, 5, 1, 8, 3)

[]
Fastest checker: genetic
Evars: 10, 10, 13, 9, 8, 2, 5
Program 0:
t1 = w == z;
t2 = t1 * v;
I = u * t2;

Fastest checker: explicit
Fails for (1, 0, 1, 0, 8, 8, 3)

[]
Fastest checker: genetic
Evars: 4, 14, 6, 10, 9, 10, 13
Program 0:
t1 = z == y;
I = u * t1;

Fastest checker: explicit
Fails for (1, 0, 0, 8, 8, 8, 3)

[]
Fastest checker: genetic
Evars: 4, 14, 6, 10, 9, 10, 13
Program 0:
t1 = z == y;
t2 = min(t1, v);
I = u * t2;

Fastest checker: explicit
Fails for (1, 0, 1, 8, 8, 8, 3)

[]
Fastest checker: genetic
Evars: 4, 14, 6, 10, 9, 10, 13
Program 0:
t1 = z == y;
t2 = t1 >> c;
I = u * t2;

Fastest checker: cbmc
Fails for (6, 12, 0, 8, 0, 8, 4)

[]
Fastest checker: genetic
Evars: 10, 12, 11, 11, 8, 11, 11
Program 0:
I = 0xb == y;

Fastest checker: explicit
Fails for (0, 0, 0, 11, 0, 8, 4)

[]
Fastest checker: genetic
Evars: 0, 6, 14, 4, 1, 6, 2
Program 0:
I = y == 0x4;

Fastest checker: explicit
Fails for (0, 4, 0, 4, 1, 8, 4)

[]
Fastest checker: genetic
Evars: 3, 6, 13, 4, 4, 5, 2
Program 0:
t1 = v * c;
t2 = 0x5 < u;
I = 0x5 s<= w;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 5, 8, 4)

[]
Fastest checker: genetic
Evars: 3, 4, 14, 9, 14, 4, 13
Program 0:
t1 = y | v;
t2 = v s< x;
t3 = t2 & v;
I = u * t3;

Fastest checker: explicit
Fails for (1, 0, 9, 0, 5, 8, 4)

[]
Fastest checker: genetic
Evars: 10, 1, 15, 13, 9, 10, 4
Program 0:
t1 = 0xa == w;
I = y & t1;

Fastest checker: explicit
Fails for (0, 1, 0, 1, 10, 8, 4)

[]
Fastest checker: genetic
Evars: 10, 1, 15, 13, 9, 6, 9
Program 0:
I = 0x6 == w;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 6, 9, 4)

[]
Fastest checker: genetic
Evars: 9, 6, 2, 12, 2, 14, 13
Program 0:
t1 = 0xb << x;
t2 = w + z;
I = v == t2;

Fastest checker: explicit
Fails for (0, 0, 15, 0, 6, 9, 4)

[]
Fastest checker: genetic
Evars: 4, 6, 3, 3, 11, 6, 12
Program 0:
t1 = u s< y;
t2 = x & w;
I = t2 >> w;

Fastest checker: explicit
Fails for (0, 4, 0, 4, 6, 9, 4)

[]
Fastest checker: genetic
Evars: 0, 7, 5, 12, 6, 14, 3
Program 0:
t1 = 0xc == x;
t2 = v == 0xc;
I = u * t2;

Fastest checker: explicit
Fails for (1, 4, 12, 4, 6, 9, 4)

[]
Fastest checker: genetic
Evars: 0, 15, 1, 9, 15, 12, 5
Program 0:
t1 = x s< v;
I = 0xf == u;

Fastest checker: explicit
Fails for (15, 4, 12, 4, 6, 9, 4)

[]
Fastest checker: genetic
Evars: 11, 4, 14, 9, 1, 14, 7
Program 0:
t1 = v s< z;
t2 = t1 & v;
I = u * t2;

Fastest checker: explicit
Fails for (1, 0, 9, 0, 0, 10, 4)

[]
Fastest checker: genetic
Evars: 10, 2, 5, 12, 7, 12, 0
Program 0:
I = y == 0xc;

Fastest checker: explicit
Fails for (0, 0, 0, 12, 0, 10, 4)

[]
Fastest checker: genetic
Evars: 5, 7, 3, 13, 12, 2, 2
Program 0:
t1 = 0x7 < u;
I = 0x7 s<= u;

Fastest checker: explicit
Fails for (7, 12, 0, 12, 0, 10, 4)

[]
Fastest checker: genetic
Evars: 0, 4, 2, 10, 12, 5, 0
Program 0:
t1 = w == z;
I = min(x, t1);

Fastest checker: explicit
Fails for (0, 1, 0, 1, 10, 10, 4)

[]
Fastest checker: genetic
Evars: 5, 6, 9, 9, 1, 1, 14
Program 0:
t1 = y s< w;
I = t1 == z;

Fastest checker: cbmc
Fails for (0, 5, 0, 3, 4, 1, 3)

[]
Fastest checker: genetic
Evars: 5, 6, 9, 9, 1, 1, 1
Program 0:
t1 = y s< w;
t2 = t1 == z;
I = min(v, t2);

Fastest checker: explicit
Fails for (0, 3, 1, 3, 4, 1, 3)

[]
Fastest checker: genetic
Evars: 12, 5, 3, 3, 12, 10, 1
Program 0:
t1 = 0xc != 0xc;
t2 = ~z;
t3 = w & z;
I = v & t3;

Fastest checker: explicit
Fails for (0, 0, 1, 0, 5, 1, 3)

[]
Fastest checker: genetic
Evars: 1, 4, 4, 1, 6, 14, 0
Program 0:
t1 = u == y;
t2 = x | t1;
I = u == t2;

Fastest checker: explicit
Fails for (1, 1, 0, 1, 5, 1, 3)

[]
Fastest checker: genetic
Evars: 1, 2, 11, 9, 7, 7, 11
Program 0:
I = 0x7 == w;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 7, 1, 3)

[]
Fastest checker: genetic
Evars: 0, 12, 2, 12, 12, 15, 1
Program 0:
t1 = x != y;
t2 = y + c;
t3 = min(w, x);
I = t3 s< 0xd;

Fastest checker: explicit
Fails for (0, 8, 0, 8, 8, 1, 3)

[]
Fastest checker: genetic
Evars: 0, 12, 2, 12, 12, 15, 1
Program 0:
t1 = x != y;
t2 = y + c;
t3 = t2 == v;
I = min(v, t3);

Fastest checker: explicit
Fails for (0, 0, 11, 8, 8, 1, 3)

[]
Fastest checker: genetic
Evars: 9, 3, 5, 2, 7, 4, 13
Program 0:
I = y == 0x2;

Fastest checker: explicit
Fails for (0, 2, 0, 2, 9, 1, 3)

[]
Fastest checker: genetic
Evars: 6, 14, 0, 12, 2, 14, 14
Program 0:
t1 = 0xd < w;
I = min(v, t1);

Fastest checker: explicit
Fails for (0, 0, 1, 0, 14, 1, 3)

[]
Fastest checker: genetic
Evars: 11, 3, 9, 11, 12, 12, 4
Program 0:
I = 0xc == w;

Fastest checker: explicit
Fails for (0, 7, 0, 0, 12, 2, 3)

[]
Fastest checker: genetic
Evars: 11, 3, 9, 11, 2, 12, 9
Program 0:
t1 = u << w;
t2 = 0xc + w;
t3 = x < v;
t4 = y ? x : t2;
I = z == 0xc;

Fastest checker: cbmc
Fails for (0, 8, 0, 8, 1, 12, 3)

[]
Fastest checker: genetic
Evars: 15, 7, 13, 0, 6, 2, 14
Program 0:
t1 = u != x;
t2 = min(t1, v);
I = t1 == c;

Fastest checker: cbmc
Fails for (5, 0, 3, 0, 0, 2, 1)

[]
Fastest checker: genetic
Evars: 9, 2, 1, 8, 5, 13, 8
Program 0:
t1 = z | c;
I = t1 == w;

Fastest checker: explicit
Fails for (0, 7, 0, 0, 3, 2, 1)

[]
Fastest checker: genetic
Evars: 2, 14, 7, 14, 6, 14, 2
Program 0:
t1 = ~v;
t2 = max(0x7, x);
I = u == t2;

Fastest checker: explicit
Fails for (7, 7, 0, 0, 3, 2, 1)

[]
Fastest checker: genetic
Evars: 2, 6, 15, 3, 6, 6, 2
Program 0:
t1 = v s< w;
t2 = z != t1;
I = v == 0x3;

Fastest checker: explicit
Fails for (0, 7, 3, 0, 3, 2, 1)

[]
Fastest checker: genetic
Evars: 10, 1, 14, 8, 10, 7, 6
Program 0:
t1 = 0x5 != y;
t2 = 0x5 << z;
I = v == t2;

Fastest checker: explicit
Fails for (0, 0, 4, 0, 3, 2, 1)

[]
Fastest checker: genetic
Evars: 1, 5, 8, 5, 7, 12, 12
Program 0:
t1 = u ==> c;
t2 = 0xc == z;
t3 = -w;
I = min(v, t2);

Fastest checker: cbmc
Fails for (1, 8, 3, 8, 12, 12, 2)

[]
Fastest checker: genetic
Evars: 4, 2, 11, 15, 12, 11, 9
Program 0:
t1 = min(w, z);
t2 = ~c;
I = v == t2;

Fastest checker: explicit
Fails for (0, 0, 13, 8, 12, 12, 2)

[]
Fastest checker: genetic
Evars: 2, 15, 0, 14, 0, 7, 10
Program 0:
t1 = u | c;
I = v == 0xe;

Fastest checker: explicit
Fails for (0, 8, 14, 8, 12, 12, 2)

[]
Fastest checker: genetic
Evars: 9, 2, 7, 13, 6, 2, 3
Program 0:
t1 = ~x;
t2 = z | z;
t3 = z == u;
I = v & t3;

Fastest checker: explicit
Fails for (12, 8, 15, 8, 12, 12, 2)

[]
Fastest checker: genetic
Evars: 10, 5, 2, 13, 7, 4, 15
Program 0:
t1 = w ? y : c;
t2 = y ? z : x;
I = 0x5 == u;

Fastest checker: explicit
Fails for (5, 9, 0, 9, 12, 12, 2)

[]
Fastest checker: genetic
Evars: 12, 9, 14, 8, 15, 11, 10
Program 0:
t1 = v == 0x8;
I = u & t1;

Fastest checker: explicit
Fails for (1, 9, 8, 9, 12, 12, 2)

[]
Fastest checker: genetic
Evars: 14, 13, 4, 9, 3, 15, 2
Program 0:
t1 = y + 0xf;
t2 = x ==> t1;
I = z / 0xf;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 0, 15, 2)

[]
Fastest checker: genetic
Evars: 7, 7, 15, 6, 3, 15, 8
Program 0:
t1 = c + 0x7;
I = u == t1;

Fastest checker: explicit
Fails for (9, 0, 0, 0, 0, 15, 2)

[]
Fastest checker: genetic
Evars: 6, 6, 9, 10, 5, 7, 10
Program 0:
t1 = x != z;
t2 = c | v;
I = x == 0x6;

Fastest checker: explicit
Fails for (0, 6, 0, 6, 0, 15, 2)

[]
Fastest checker: genetic
Evars: 6, 6, 9, 10, 5, 7, 10
Program 0:
t1 = x | y;
t2 = ~u;
I = 0x6 s< z;

Fastest checker: cbmc
Fails for (0, 4, 0, 0, 0, 7, 8)

[]
Fastest checker: genetic
Evars: 6, 3, 12, 8, 1, 11, 9
Program 0:
t1 = u s< x;
I = 0xb == z;

Fastest checker: cbmc
Fails for (0, 8, 0, 8, 0, 11, 3)

[]
Fastest checker: genetic
Evars: 9, 4, 14, 13, 15, 1, 14
Program 0:
t1 = v >> z;
t2 = u == x;
t3 = t2 & v;
I = u * t3;

Fastest checker: explicit
Fails for (8, 8, 1, 8, 0, 11, 3)

[]
Fastest checker: genetic
Evars: 7, 1, 1, 9, 14, 3, 11
Program 0:
t1 = u s<= z;
t2 = t1 & v;
I = u & t2;

Fastest checker: explicit
Fails for (9, 8, 1, 8, 0, 11, 3)

[]
Fastest checker: genetic
Evars: 1, 7, 10, 9, 1, 14, 7
Program 0:
t1 = -u;
t2 = t1 == v;
I = u & t2;

Fastest checker: explicit
Fails for (15, 8, 1, 8, 0, 11, 3)

[]
Fastest checker: genetic
Evars: 5, 4, 9, 4, 5, 10, 8
Program 0:
t1 = z + c;
t2 = -y;
t3 = t2 < t1;
I = 0x4 == v;

Fastest checker: explicit
Fails for (0, 8, 4, 8, 0, 11, 3)

[]
Fastest checker: genetic
Evars: 8, 3, 15, 1, 0, 3, 2
Program 0:
t1 = v s< z;
t2 = t1 & v;
I = w * t2;

Fastest checker: explicit
Fails for (0, 0, 9, 0, 1, 11, 3)

[]
Fastest checker: genetic
Evars: 5, 0, 0, 14, 9, 11, 12
Program 0:
I = y == 0xe;

Fastest checker: explicit
Fails for (0, 0, 0, 14, 1, 11, 3)

[]
Fastest checker: genetic
Evars: 15, 1, 13, 11, 1, 4, 1
Program 0:
t1 = y + x;
t2 = x s<= x;
t3 = y s< x;
t4 = t3 & v;
I = u & t4;

Fastest checker: explicit
Fails for (1, 15, 1, 14, 1, 11, 3)

[]
Fastest checker: genetic
Evars: 1, 5, 5, 10, 8, 15, 15
Program 0:
t1 = u + c;
t2 = u ==> w;
I = 0xf == w;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 15, 11, 3)

[]
Fastest checker: genetic
Evars: 10, 11, 10, 11, 9, 15, 5
Program 0:
t1 = 0xf == w;
t2 = min(u, y);
I = u & t1;

Fastest checker: explicit
Fails for (1, 0, 0, 0, 15, 11, 3)

[]
Fastest checker: genetic
Evars: 15, 7, 12, 9, 1, 14, 7
Program 0:
t1 = c ^ 0x9;
t2 = t1 == v;
I = u & t2;

Fastest checker: explicit
Fails for (1, 0, 10, 0, 15, 11, 3)

[]
Fastest checker: genetic
Evars: 4, 1, 12, 9, 1, 14, 5
Program 0:
t1 = c | y;
t2 = t1 == v;
I = u & t2;

Fastest checker: explicit
Fails for (1, 1, 3, 1, 15, 11, 3)

[]
Fastest checker: genetic
Evars: 7, 5, 12, 1, 1, 1, 3
Program 0:
t1 = z == x;
t2 = v ? c : x;
t3 = v >>> u;
t4 = v == z;
t5 = t4 & v;
I = u & t5;

Fastest checker: explicit
Fails for (1, 1, 11, 1, 15, 11, 3)

[]







Timeout
Perf counters:
{'genetic': 102, 'cbmc': 11, 'explicit': 91, 'timeout': 1, 'iterations': 103}
Perf timers:
verify: 35.35s
checker: 119.65s
gcc: 0.47s
_: 120.00s
synth: 84.58s
