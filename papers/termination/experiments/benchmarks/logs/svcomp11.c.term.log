Using seed: 1337
[]
Fastest checker: genetic
Program 0:
I = nondet_1 >>> y;
Program 1:
t1 = z s<= nondet_1;
t2 = min(x, 0x0);
I = y s<= y;

Fastest checker: explicit
Fails for (0, 0, 0, 10, 2, 13, 6)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_2 & nondet_0;
I = 0xa >> z;
Program 1:
I = nondet_1 s< z;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = min(nondet_1, nondet_2);
t2 = 0xf == z;
I = t2 ? y : 0xf;
Program 1:
t1 = x * y;
I = nondet_2 | x;

Fastest checker: explicit
Fails for (0, 1, 0, 0, 1, 1, 7)

[]
Fastest checker: genetic
Program 0:
I = -y;
Program 1:
t1 = nondet_2 == x;
I = z << nondet_1;

Fastest checker: explicit
Fails for (0, 0, 1, 0, 1, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_0 <= y;
I = z ^ t1;
Program 1:
t1 = nondet_0 ? nondet_3 : nondet_1;
I = y & z;

Fastest checker: explicit
Fails for (1, 0, 1, 0, 1, 1, 7)

[]
Fastest checker: genetic
Program 0:
I = x ==> x;
Program 1:
I = nondet_0 ? nondet_2 : z;

Fastest checker: explicit
Fails for (7, 0, 1, 0, 1, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = x <= nondet_2;
I = ~0x4;
Program 1:
t1 = y * z;
t2 = y < x;
I = t2 == nondet_0;

Fastest checker: explicit
Fails for (0, 0, 0, 1, 1, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = z - z;
I = ~nondet_2;
Program 1:
t1 = nondet_0 ==> nondet_2;
t2 = min(x, y);
I = z << 0x2;

Fastest checker: explicit
Fails for (0, 15, 0, 1, 1, 1, 7)

[]
Fastest checker: genetic
Program 0:
I = y s<= z;
Program 1:
t1 = z s<= nondet_1;
t2 = min(x, 0x0);
t3 = y s<= y;
t4 = nondet_1 + z;
t5 = x + y;
I = y + t5;

Fastest checker: explicit
Fails for (0, 3, 0, 0, 2, 1, 7)

[]
Fastest checker: genetic
Program 0:
I = nondet_2 - 0x6;
Program 1:
t1 = nondet_0 | y;
t2 = 0xd | nondet_1;
t3 = z + nondet_1;
t4 = x + 0xd;
I = y s<= y;

Fastest checker: explicit
Fails for (0, 6, 0, 0, 2, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_1 >>> y;
I = nondet_2 + 0x6;
Program 1:
t1 = nondet_0 | y;
t2 = 0xd | nondet_1;
t3 = nondet_1 | nondet_2;
t4 = z + nondet_1;
t5 = x + 0xd;
t6 = y + y;
I = nondet_2 s<= nondet_0;

Fastest checker: explicit
Fails for (0, 10, 0, 0, 2, 1, 7)

[]
Fastest checker: genetic
Program 0:
I = nondet_2 - 0x5;
Program 1:
t1 = nondet_0 | y;
t2 = 0xd | nondet_1;
t3 = x + 0xd;
t4 = nondet_3 + z;
t5 = min(nondet_0, nondet_1);
I = nondet_0 + nondet_2;

Fastest checker: explicit
Fails for (9, 10, 0, 0, 2, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_2 - 0x5;
I = 0x5 ==> t1;
Program 1:
t1 = nondet_0 | y;
t2 = 0xd | nondet_1;
t3 = z + nondet_1;
t4 = x + 0xd;
I = y s<= y;

Fastest checker: explicit
Fails for (8, 0, 1, 0, 2, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_2 - 0x5;
I = 0x5 ==> t1;
Program 1:
t1 = nondet_0 | y;
t2 = 0xd | nondet_1;
t3 = nondet_1 | nondet_2;
t4 = z + nondet_1;
t5 = x + 0xd;
t6 = y + y;
t7 = 0xd s<= nondet_1;
t8 = min(nondet_0, z);
I = x s<= x;

Fastest checker: explicit
Fails for (0, 5, 1, 0, 2, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_2 - 0x6;
t2 = 0x6 ==> t1;
t3 = nondet_2 + 0x6;
I = 0x6 + t3;
Program 1:
t1 = nondet_0 | y;
t2 = 0xd | nondet_1;
t3 = z + nondet_1;
t4 = x + 0xd;
I = y + y;

Fastest checker: explicit
Fails for (0, 4, 2, 0, 2, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_2 - 0x6;
t2 = 0x6 ==> t1;
I = 0x6 + t2;
Program 1:
t1 = nondet_0 | y;
t2 = nondet_0 + y;
t3 = z | nondet_1;
t4 = x + 0xd;
t5 = y s<= y;
I = min(y, nondet_3);

Fastest checker: explicit
Fails for (0, 0, 0, 0, 3, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_2 - 0x6;
I = nondet_3 + 0x6;
Program 1:
t1 = nondet_0 | y;
t2 = 0xd | nondet_1;
t3 = nondet_1 | nondet_2;
t4 = nondet_0 + y;
t5 = x + 0xd;
t6 = nondet_2 + nondet_3;
I = nondet_3 | z;

Fastest checker: explicit
Fails for (1, 0, 0, 0, 3, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = x - 0x6;
t2 = 0x6 ==> t1;
t3 = z != 0x6;
I = 0x6 + t3;
Program 1:
t1 = 0xd + nondet_1;
t2 = z | nondet_1;
t3 = x + 0xd;
t4 = y + y;
t5 = nondet_1 s<= z;
t6 = min(x, y);
I = y s<= t6;

Fastest checker: explicit
Fails for (0, 1, 0, 0, 3, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_2 - 0x6;
t2 = 0x6 ==> t1;
I = 0x6 + t2;
Program 1:
t1 = nondet_2 | y;
t2 = 0xd | nondet_1;
t3 = nondet_1 | nondet_2;
t4 = nondet_1 | nondet_2;
t5 = x + 0xd;
I = z + z;

Fastest checker: explicit
Fails for (7, 1, 1, 0, 3, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_2 - 0x6;
I = nondet_2 ==> 0x6;
Program 1:
t1 = nondet_0 | y;
t2 = 0xd | nondet_1;
t3 = nondet_1 | nondet_2;
t4 = x + 0xd;
I = z + z;

Fastest checker: explicit
Fails for (0, 0, 0, 1, 3, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = z != z;
I = 0x4 + t1;
Program 1:
t1 = nondet_1 ^ 0xf;
t2 = nondet_1 + nondet_2;
t3 = x | x;
t4 = nondet_0 + y;
t5 = 0xf + nondet_1;
t6 = nondet_1 + nondet_2;
t7 = y == nondet_1;
I = y + z;

Fastest checker: explicit
Fails for (9, 0, 1, 0, 4, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_2 - 0x6;
t2 = 0x6 ==> t1;
I = y + 0x6;
Program 1:
t1 = nondet_0 | y;
t2 = x + x;
t3 = z | nondet_3;
t4 = nondet_2 + z;
I = nondet_3 | z;

Fastest checker: explicit
Fails for (15, 0, 1, 0, 4, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = y - nondet_2;
I = nondet_2 ==> 0x7;
Program 1:
t1 = x == nondet_1;
t2 = nondet_2 | nondet_1;
t3 = nondet_1 + x;
t4 = nondet_0 + nondet_2;
t5 = nondet_0 << z;
t6 = nondet_0 - y;
t7 = 0x8 | nondet_1;
t8 = nondet_1 + nondet_2;
t9 = x + 0x8;
I = z + z;

Fastest checker: explicit
Fails for (7, 0, 1, 0, 1, 2, 7)

[]
Fastest checker: genetic
Program 0:
t1 = y - nondet_2;
t2 = 0x7 + y;
I = nondet_2 s< 0x7;
Program 1:
t1 = -nondet_0;
t2 = nondet_0 + y;
t3 = 0x8 + nondet_1;
t4 = nondet_1 + nondet_2;
t5 = 0x8 | nondet_1;
t6 = nondet_1 | nondet_2;
t7 = x | 0x8;
I = 0x8 + z;

Fastest checker: explicit
Fails for (0, 7, 1, 0, 1, 2, 7)

[]
Fastest checker: genetic
Program 0:
t1 = y - nondet_2;
I = nondet_2 + 0x7;
Program 1:
t1 = x == nondet_1;
t2 = nondet_2 | nondet_1;
t3 = 0x8 | nondet_1;
t4 = y + 0x8;
t5 = x + 0x8;
t6 = nondet_2 | nondet_3;
I = nondet_3 | z;

Fastest checker: explicit
Fails for (0, 9, 1, 0, 1, 2, 7)

[]
Fastest checker: genetic
Program 0:
I = ~0xa;
Program 1:
t1 = y & z;
t2 = 0xe + nondet_1;
t3 = nondet_1 | nondet_2;
t4 = x + 0xe;
I = z + z;

Fastest checker: explicit
Fails for (0, 0, 0, 1, 2, 2, 7)

[]
Fastest checker: genetic
Program 0:
I = nondet_0 + 0xa;
Program 1:
t1 = y & z;
t2 = nondet_2 + nondet_1;
t3 = nondet_1 | x;
t4 = nondet_0 | z;
t5 = nondet_0 + y;
t6 = 0xe << nondet_1;
I = nondet_1 - nondet_2;

Fastest checker: explicit
Fails for (0, 0, 2, 1, 2, 2, 7)

[]
Fastest checker: genetic
Program 0:
t1 = ~0xa;
t2 = x - x;
t3 = nondet_0 % t1;
I = nondet_3 + 0xa;
Program 1:
t1 = y & z;
t2 = x + nondet_1;
t3 = nondet_2 == nondet_1;
t4 = nondet_0 | z;
I = nondet_0 | y;

Fastest checker: explicit
Fails for (6, 0, 2, 1, 2, 2, 7)

[]
Fastest checker: genetic
Program 0:
I = z + 0x6;
Program 1:
t1 = nondet_0 | y;
t2 = 0xd | nondet_0;
t3 = nondet_1 + x;
t4 = nondet_0 + z;
I = nondet_0 | y;

Fastest checker: explicit
Fails for (0, 0, 14, 1, 2, 2, 7)

[]
Fastest checker: genetic
Program 0:
t1 = y & x;
I = z + 0x6;
Program 1:
t1 = nondet_1 | nondet_2;
t2 = x + y;
t3 = z + nondet_1;
t4 = x + 0x8;
I = z + z;

Fastest checker: explicit
Fails for (10, 0, 1, 0, 3, 2, 7)

[]
Fastest checker: genetic
Program 0:
I = nondet_2 ==> 0x6;
Program 1:
t1 = nondet_0 | y;
t2 = 0xd | nondet_1;
t3 = nondet_1 + x;
t4 = nondet_0 + nondet_2;
t5 = nondet_0 + z;
t6 = nondet_0 + y;
t7 = 0xd << nondet_1;
t8 = nondet_1 - nondet_2;
t9 = x | 0xd;
I = z + z;

Fastest checker: explicit
Fails for (0, 0, 13, 1, 3, 2, 7)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_2 - 0x6;
t2 = 0x6 ==> t1;
I = 0x6 + t2;
Program 1:
t1 = nondet_0 | y;
t2 = 0xd | nondet_1;
t3 = nondet_1 | nondet_2;
t4 = x + z;
I = z + z;

Fastest checker: cbmc
Fails for (7, 4, 2, 0, 4, 1, 6)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_2 - 0x6;
I = nondet_2 ==> 0x6;
Program 1:
t1 = nondet_0 | y;
t2 = 0xd | nondet_1;
t3 = nondet_1 | nondet_2;
t4 = x + x;
t5 = z + y;
t6 = nondet_0 + y;
I = 0xd + nondet_1;

Fastest checker: cbmc
Correct for wordlen=4
Fastest checker: cbmc
Also correct for wordlen=32!







Finished in 13.30s

Program 0:
t1 = nondet_2 - 0x6;
I = nondet_2 ==> 0x6;
Program 1:
t1 = nondet_0 | y;
t2 = 0xd | nondet_1;
t3 = nondet_1 | nondet_2;
t4 = x + x;
t5 = z + y;
t6 = nondet_0 + y;
I = 0xd + nondet_1;


Perf counters:
{'genetic': 33, 'cbmc': 3, 'explicit': 31, 'iterations': 33}
Perf timers:
verify: 10.01s
checker: 13.20s
gcc: 0.63s
_: 13.30s
synth: 3.27s
