ARMC3: Abstraction Refinement Model Checker, v. 3.20.05 (May-21-2008)
rybal@mpi-sws.mpg.de
cmd line: [live,/users/matlew/synth/papers/termination/experiments/benchmarks/svcomp3.c.main.pl,-straight]
reading input from /users/matlew/synth/papers/termination/experiments/benchmarks/svcomp3.c.main.pl...done.
creating straight line code between cutpoints...done.

transition(p(pc(main-0-15),data(A,B,C)), p(pc(main-ret-0),data(D,E,F)), {1=1,C=<0,1=1,1=1,1=1,F=C,E=B,D=A}, [1=1,C=<0,1=1,1=1,1=1], [F=C,E=B,D=A], tid([17,16,18,7,1])).
transition(p(pc(main-0-15),data(A,B,C)), p(pc(main-ret-0),data(D,E,F)), {1=1,C>=1+0,B=<0,1=1,1=1,1=1,F=C,E=B,D=A}, [1=1,C>=1+0,B=<0,1=1,1=1,1=1], [F=C,E=B,D=A], tid([17,16,19,6,2,1])).
transition(p(pc(main-0-15),data(A,B,C)), p(pc(main-ret-0),data(D,E,F)), {1=1,C>=1+0,B>=1+0,A=<0,1=1,1=1,1=1,F=C,E=B,D=A}, [1=1,C>=1+0,B>=1+0,A=<0,1=1,1=1,1=1], [F=C,E=B,D=A], tid([17,16,20,5,3,2,1])).
transition(p(pc(main-0-15),data(A,B,C)), p(pc(main-0-15),data(D,E,F)), {1=1,C>=1+0,B>=1+0,A>=1+0,B=<C,1=1,1=1,1=1,F=G,E=G-1,D=A-1}, [1=1,C>=1+0,B>=1+0,A>=1+0,B=<C,1=1,1=1,1=1], [F=G,E=G-1,D=A-1], tid([15,14,13,12,4,3,2,1])).
transition(p(pc(main-0-15),data(A,B,C)), p(pc(main-0-15),data(D,E,F)), {1=1,C>=1+0,B>=1+0,A>=1+0,B>=1+C,1=1,1=1,1=1,F=G,E=A,D=G-1}, [1=1,C>=1+0,B>=1+0,A>=1+0,B>=1+C,1=1,1=1,1=1], [F=G,E=A,D=G-1], tid([11,10,9,8,4,3,2,1])).
transition(p(pc(main-0-15),data(A,B,C)), p(pc(main-ret-0),data(D,E,F)), {1=1,C=<0,1=1,1=1,1=1,F=C,E=B,D=A}, [1=1,C=<0,1=1,1=1,1=1], [F=C,E=B,D=A], tid([17,16,18,7,1])).
transition(p(pc(main-0-15),data(A,B,C)), p(pc(main-ret-0),data(D,E,F)), {1=1,C>=1+0,B=<0,1=1,1=1,1=1,F=C,E=B,D=A}, [1=1,C>=1+0,B=<0,1=1,1=1,1=1], [F=C,E=B,D=A], tid([17,16,19,6,2,1])).
transition(p(pc(main-0-15),data(A,B,C)), p(pc(main-ret-0),data(D,E,F)), {1=1,C>=1+0,B>=1+0,A=<0,1=1,1=1,1=1,F=C,E=B,D=A}, [1=1,C>=1+0,B>=1+0,A=<0,1=1,1=1,1=1], [F=C,E=B,D=A], tid([17,16,20,5,3,2,1])).
transition(p(pc(main-0-15),data(A,B,C)), p(pc(main-0-15),data(D,E,F)), {1=1,C>=1+0,B>=1+0,A>=1+0,B=<C,1=1,1=1,1=1,F=G,E=G-1,D=A-1}, [1=1,C>=1+0,B>=1+0,A>=1+0,B=<C,1=1,1=1,1=1], [F=G,E=G-1,D=A-1], tid([15,14,13,12,4,3,2,1])).
transition(p(pc(main-0-15),data(A,B,C)), p(pc(main-0-15),data(D,E,F)), {1=1,C>=1+0,B>=1+0,A>=1+0,B>=1+C,1=1,1=1,1=1,F=G,E=A,D=G-1}, [1=1,C>=1+0,B>=1+0,A>=1+0,B>=1+C,1=1,1=1,1=1], [F=G,E=A,D=G-1], tid([11,10,9,8,4,3,2,1])).




--------------------------------------------------
abstraction refinement iteration 0:
lfp iteration 0 
abstract counterexample: stem [0], loop [tid([15,14,13,12,4,3,2,1])]
trans preds: _13216->_13219:	#0:	
z=<0
z-z'=<0
refining loop
cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): z-z'>=1

refining stem

cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): z-z'>=1

refining loop
cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): z>=1

refining stem

cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): z>=1




--------------------------------------------------
abstraction refinement iteration 1:
lfp iteration 0 
abstract counterexample: stem [0], loop [tid([11,10,9,8,4,3,2,1])]
trans preds: _100250->_100253:	#2:	z>=1, z-z'>=1
z+y-x=<1
z+y-x-z'-y'+x'=<1
refining loop
cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): z+y-x-z'-y'+x'>=2

refining stem

cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): z+y-x-z'-y'+x'>=2

refining loop
cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): z+y-x>=2

refining stem

cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): z+y-x>=2




--------------------------------------------------
abstraction refinement iteration 2:
lfp iteration 0 1 
abstract counterexample: stem [0], loop [tid([15,14,13,12,4,3,2,1]),tid([11,10,9,8,4,3,2,1])]
trans preds: _70731->_70734:	#4:	z+y-x>=2, z+y-x-z'-y'+x'>=2, z>=1, z-z'>=1
loop infeasible:
1=1
1=1
refining loop
cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): y'-x'=< -1

refining stem

cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): y'-x'=< -1

refining loop
cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): y'-x'=< -1

refining stem

cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): y'-x'=< -1




--------------------------------------------------
abstraction refinement iteration 3:
lfp iteration 0 1 
abstract counterexample: stem [0], loop [tid([11,10,9,8,4,3,2,1]),tid([15,14,13,12,4,3,2,1])]
trans preds: _49553->_49556:	#5:	y'-x'=< -1, z+y-x>=2, z+y-x-z'-y'+x'>=2, z>=1, z-z'>=1
y-x=<0
y'-x'-y+x>= -1
refining loop
cutting step 2 at pc(main-0-15)
LI at pc(main-0-15): y-x>=1
cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): y'-x'-y+x=< -2

refining stem

cutting step 2 at pc(main-0-15)
LI at pc(main-0-15): y-x>=1
cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): y'-x'-y+x=< -2

refining loop
cutting step 2 at pc(main-0-15)
LI at pc(main-0-15): y-x>=1
cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): y-x>=1

refining stem

cutting step 2 at pc(main-0-15)
LI at pc(main-0-15): y-x>=1
cutting step 1 at pc(main-0-15)
LI at pc(main-0-15): y-x>=1




--------------------------------------------------
abstraction refinement iteration 4:
lfp iteration 0 1 2 3 


==================================================
ARMC-LIVE: program is correct

abstract trans fixpoint
abstract_trans_state(0, pc(main-0-15), pc(main-0-15), [], stem, 1, (0,0)).
abstract_trans_state(1, pc(main-0-15), pc(main-ret-0), [], stem, 2, (1,tid([17,16,18,7,1]))).
abstract_trans_state(1, pc(main-0-15), pc(main-ret-0), [], loop, 3, (1,tid([17,16,18,7,1]))).
abstract_trans_state(1, pc(main-0-15), pc(main-0-15), [3,6,7], loop, 4, (1,tid([15,14,13,12,4,3,2,1]))).
abstract_trans_state(1, pc(main-0-15), pc(main-0-15), [2,4,5,6], loop, 5, (1,tid([11,10,9,8,4,3,2,1]))).
abstract_trans_state(2, pc(main-0-15), pc(main-0-15), [1,2,3,4,6], loop, 6, (5,tid([15,14,13,12,4,3,2,1]))).

frontier 0: stem 1 (pc(main-0-15)->pc(main-0-15)) from 0 by applying 0: 	T
frontier 1: stem 2 (pc(main-0-15)->pc(main-ret-0)) from 1 by applying tid([17,16,18,7,1]): 	T
frontier 1: loop 3 (pc(main-0-15)->pc(main-ret-0)) from 1 by applying tid([17,16,18,7,1]): 	T
frontier 1: loop 4 (pc(main-0-15)->pc(main-0-15)) from 1 by applying tid([15,14,13,12,4,3,2,1]): 	y'-x'=< -1, z>=1, z-z'>=1
frontier 1: loop 5 (pc(main-0-15)->pc(main-0-15)) from 1 by applying tid([11,10,9,8,4,3,2,1]): 	y-x>=1, z+y-x>=2, z+y-x-z'-y'+x'>=2, z>=1
frontier 2: loop 6 (pc(main-0-15)->pc(main-0-15)) from 5 by applying tid([15,14,13,12,4,3,2,1]): 	y'-x'-y+x=< -2, y-x>=1, y'-x'=< -1, z+y-x>=2, z>=1

_74942->_74945:	#7:	y'-x'-y+x=< -2, y-x>=1, y'-x'=< -1, z+y-x>=2, z+y-x-z'-y'+x'>=2, z>=1, z-z'>=1
---------------------------------------------+----run(s)----+---wall(s)----+
Time on instantiating uf axioms              |     0.00     |     0.00     |
Time on cli constraint solving               |     0.02     |     0.02     |
Time on cli constraint preparation           |     0.00     |     0.00     |
Time on cli matrix parsing                   |     0.00     |     0.00     |
Time on cli preprocessing                    |     0.00     |     0.00     |
Time on concretizing trans rel               |     0.00     |     0.00     |
Time on concretizing from state              |     0.00     |     0.00     |
Time on computing the subsumer subtree       |     0.00     |     0.00     |
Time on finding the location of subsumer in queue|     0.00     |     0.00     |
Time on path invariant generation            |     0.00     |     0.00     |
Time on new predicate selection              |     0.00     |     0.02     |
Time on refinement preprocessing cut         |     0.00     |     0.00     |
Time on refinement cutting trace             |     0.05     |     0.06     |
Time on refinement finding unsat subtrace    |     0.00     |     0.00     |
Time on refinement                           |     0.07     |     0.07     |
Time on fixpoint abstraction                 |     0.00     |     0.00     |
Time on fixpoint test                        |     0.00     |     0.00     |
Time on abstract check                       |     0.00     |     0.00     |
Time on total including result checking      |     0.00     |     0.00     |
Time on check result                         |     0.00     |     0.00     |
Time on total                                |     0.00     |     0.00     |
---------------------------------------------+--------------+--------------+



==================================================
ARMC-LIVE: program is correct

TERMINATES
