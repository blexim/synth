Using seed: 1337
[]
Fastest checker: genetic
Evars: 11, 13, 4, 10, 10, 6
Program 0:
t1 = 0x0 >>> y;
t2 = nondet_0 * 0x0;
I = min(x, nondet_2);

Fastest checker: cbmc
Fails for (0, 15, 0, 0, 10, 1)

[]
Fastest checker: genetic
Evars: 2, 0, 8, 5, 13, 2
Program 0:
I = y ==> nondet_1;

Fastest checker: explicit
Fails for (0, 0, 1, 0, 10, 1)

[]
Fastest checker: genetic
Evars: 11, 0, 0, 3, 14, 3
Program 0:
t1 = min(nondet_2, nondet_3);
t2 = 0x8 ==> 0x8;
t3 = t2 <= t2;
I = t2 s< nondet_0;

Fastest checker: explicit
Fails for (0, 0, 0, 2, 15, 1)

[]
Fastest checker: genetic
Evars: 9, 10, 8, 3, 2, 4
Program 0:
I = 0x1 < nondet_1;

Fastest checker: explicit
Fails for (0, 0, 2, 2, 15, 1)

[]
Fastest checker: genetic
Evars: 1, 5, 6, 7, 15, 2
Program 0:
t1 = nondet_1 >> 0x7;
t2 = min(nondet_1, t1);
t3 = t1 + 0x7;
I = nondet_1 >>> nondet_1;

Fastest checker: explicit
Fails for (0, 0, 4, 2, 15, 1)

[]
Fastest checker: genetic
Evars: 3, 2, 15, 6, 7, 1
Program 0:
t1 = max(nondet_1, nondet_2);
t2 = 0x8 * x;
t3 = y ==> nondet_3;
t4 = nondet_3 != t3;
I = 0x8 < nondet_1;

Fastest checker: explicit
Fails for (0, 0, 9, 2, 15, 1)

[]
Fastest checker: genetic
Evars: 13, 14, 1, 5, 5, 5
Program 0:
I = nondet_3 * x;

Fastest checker: explicit
Fails for (1, 0, 9, 2, 15, 1)

[]
Fastest checker: genetic
Evars: 12, 9, 1, 6, 5, 4
Program 0:
t1 = nondet_0 << y;
t2 = t1 == x;
I = t1 / x;

Fastest checker: explicit
Fails for (0, 1, 0, 1, 1, 2)

[]
Fastest checker: genetic
Evars: 10, 12, 0, 12, 15, 3
Program 0:
t1 = nondet_2 | nondet_1;
t2 = nondet_2 | t1;
I = nondet_3 >>> x;

Fastest checker: explicit
Fails for (2, 1, 0, 1, 1, 2)

[]
Fastest checker: genetic
Evars: 11, 2, 3, 6, 7, 5
Program 0:
t1 = y ? nondet_0 : nondet_3;
t2 = ~y;
t3 = t1 ==> nondet_0;
t4 = x ? nondet_2 : t1;
I = t1 s< x;

Fastest checker: explicit
Fails for (0, 1, 0, 8, 1, 2)

[]
Fastest checker: genetic
Evars: 4, 13, 5, 1, 4, 3
Program 0:
t1 = nondet_3 >> 0x8;
I = y s<= x;

Fastest checker: explicit
Fails for (0, 1, 0, 0, 2, 2)

[]
Fastest checker: genetic
Evars: 13, 2, 6, 1, 13, 3
Program 0:
t1 = nondet_3 % y;
t2 = -nondet_3;
t3 = nondet_0 ^ nondet_1;
I = y ==> t1;

Fastest checker: explicit
Fails for (1, 1, 0, 0, 2, 2)

[]
Fastest checker: genetic
Evars: 10, 7, 4, 7, 11, 2
Program 0:
t1 = nondet_3 >> nondet_3;
t2 = y ==> x;
t3 = y ? y : x;
t4 = y & t1;
I = nondet_3 >> t3;

Fastest checker: explicit
Fails for (7, 1, 0, 0, 2, 2)

[]
Fastest checker: genetic
Evars: 1, 11, 5, 9, 4, 2
Program 0:
t1 = nondet_3 + nondet_3;
I = nondet_1 % y;

Fastest checker: explicit
Fails for (0, 0, 1, 0, 2, 2)

[]
Fastest checker: genetic
Evars: 1, 7, 2, 3, 12, 4
Program 0:
I = nondet_3 & nondet_0;

Fastest checker: explicit
Fails for (9, 1, 0, 1, 2, 2)

[]
Fastest checker: genetic
Evars: 4, 12, 2, 9, 4, 2
Program 0:
t1 = nondet_0 ? nondet_2 : nondet_0;
t2 = t1 s<= nondet_0;
t3 = nondet_2 >> nondet_2;
t4 = nondet_3 < t1;
I = nondet_1 * t1;

Fastest checker: explicit
Fails for (0, 1, 1, 1, 2, 2)

[]
Fastest checker: genetic
Evars: 12, 5, 7, 9, 13, 4
Program 0:
t1 = nondet_2 < nondet_0;
I = 0x7 == nondet_1;

Fastest checker: explicit
Fails for (0, 1, 7, 1, 2, 2)

[]
Fastest checker: genetic
Evars: 6, 5, 9, 6, 13, 7
Program 0:
I = 0x8 % y;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 3)

[]
Fastest checker: genetic
Evars: 9, 10, 13, 13, 7, 2
Program 0:
t1 = nondet_2 + nondet_3;
I = 0x7 s<= x;

Fastest checker: explicit
Fails for (0, 1, 0, 0, 7, 3)

[]
Fastest checker: genetic
Evars: 6, 3, 10, 4, 7, 6
Program 0:
t1 = y <= 0x7;
t2 = y s< 0x7;
t3 = y % 0x7;
I = t3 >> t3;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 4)

[]
Fastest checker: genetic
Evars: 9, 10, 4, 14, 6, 4
Program 0:
t1 = y < nondet_3;
t2 = t1 << nondet_3;
t3 = nondet_1 ^ t2;
t4 = t1 >>> y;
I = t4 << nondet_1;

Fastest checker: explicit
Fails for (5, 0, 0, 0, 1, 4)

[]
Fastest checker: genetic
Evars: 8, 2, 15, 15, 6, 7
Program 0:
t1 = min(y, y);
t2 = ~nondet_0;
t3 = 0x7 + 0x7;
I = t1 >>> t2;

Fastest checker: explicit
Fails for (0, 0, 0, 1, 1, 4)

[]
Fastest checker: genetic
Evars: 12, 3, 1, 14, 4, 2
Program 0:
t1 = 0x1 <= nondet_0;
I = 0x1 s< nondet_2;

Fastest checker: explicit
Fails for (0, 2, 0, 1, 1, 4)

[]
Fastest checker: genetic
Evars: 13, 5, 9, 12, 15, 6
Program 0:
I = 0x8 < nondet_0;

Fastest checker: explicit
Fails for (0, 1, 0, 9, 1, 4)

[]
Fastest checker: genetic
Evars: 9, 5, 6, 1, 10, 5
Program 0:
t1 = y & nondet_1;
t2 = 0x7 + 0x7;
t3 = 0x7 + 0x7;
t4 = t1 >>> y;
I = t4 << nondet_1;

Fastest checker: explicit
Fails for (0, 0, 4, 9, 1, 4)

[]
Fastest checker: genetic
Evars: 8, 1, 9, 7, 7, 2
Program 0:
t1 = ~nondet_3;
t2 = y & x;
I = nondet_0 & y;

Fastest checker: explicit
Fails for (0, 0, 0, 12, 1, 4)

[]
Fastest checker: genetic
Evars: 14, 11, 10, 7, 3, 1
Program 0:
t1 = x <= nondet_0;
t2 = max(y, 0x7);
I = y & t1;

Fastest checker: explicit
Fails for (0, 0, 0, 1, 1, 5)

[]
Fastest checker: genetic
Evars: 10, 13, 14, 5, 14, 3
Program 0:
t1 = nondet_0 - nondet_2;
t2 = min(t1, nondet_0);
I = x == nondet_1;

Fastest checker: explicit
Fails for (0, 1, 1, 1, 1, 5)

[]
Fastest checker: genetic
Evars: 6, 6, 10, 7, 12, 2
Program 0:
t1 = nondet_0 << x;
t2 = ~nondet_3;
t3 = y & x;
I = nondet_0 & t1;

Fastest checker: explicit
Fails for (0, 1, 0, 3, 1, 5)

[]
Fastest checker: genetic
Evars: 15, 15, 2, 11, 12, 5
Program 0:
t1 = y < nondet_3;
I = min(t1, nondet_1);

Fastest checker: explicit
Fails for (6, 1, 1, 3, 1, 5)

[]
Fastest checker: genetic
Evars: 7, 5, 15, 1, 6, 7
Program 0:
I = nondet_1 / 0xf;

Fastest checker: explicit
Fails for (0, 1, 15, 3, 1, 5)

[]
Fastest checker: genetic
Evars: 4, 8, 5, 1, 4, 1
Program 0:
t1 = -nondet_1;
t2 = 0x1 * nondet_2;
t3 = y s< nondet_3;
I = t3 >>> x;

Fastest checker: explicit
Fails for (6, 1, 0, 0, 4, 5)

[]
Fastest checker: genetic
Evars: 15, 12, 15, 3, 13, 4
Program 0:
t1 = nondet_1 | x;
I = nondet_3 == t1;

Fastest checker: explicit
Fails for (4, 2, 0, 0, 4, 5)

[]
Fastest checker: genetic
Evars: 15, 13, 2, 11, 12, 5
Program 0:
t1 = y < nondet_3;
I = nondet_2 s< 0xf;

Fastest checker: explicit
Fails for (0, 8, 0, 0, 4, 5)

[]
Fastest checker: genetic
Evars: 10, 13, 14, 5, 14, 3
Program 0:
t1 = 0xf + 0xf;
t2 = nondet_1 % y;
t3 = y < nondet_2;
I = min(t3, nondet_1);

Fastest checker: explicit
Fails for (0, 6, 1, 0, 4, 5)

[]
Fastest checker: genetic
Evars: 14, 1, 15, 14, 5, 7
Program 0:
t1 = x != nondet_1;
t2 = ~0xf;
t3 = 0xf + 0xf;
I = nondet_3 == t3;

Fastest checker: explicit
Fails for (14, 6, 1, 0, 4, 5)

[]
Fastest checker: genetic
Evars: 5, 10, 14, 14, 9, 1
Program 0:
t1 = 0x7 + 0x7;
t2 = nondet_3 | nondet_3;
t3 = nondet_0 & nondet_2;
t4 = max(t2, y);
I = t3 >> t1;

Fastest checker: explicit
Fails for (0, 4, 0, 4, 4, 5)

[]
Fastest checker: genetic
Evars: 14, 11, 10, 7, 3, 1
Program 0:
t1 = x <= nondet_0;
t2 = min(nondet_0, nondet_0);
t3 = 0x7 + 0x7;
t4 = 0x7 + 0x7;
I = 0x7 == nondet_0;

Fastest checker: explicit
Fails for (0, 1, 0, 7, 4, 5)

[]
Fastest checker: genetic
Evars: 8, 9, 1, 2, 8, 5
Program 0:
t1 = nondet_0 ==> nondet_0;
t2 = t1 + 0x8;
t3 = 0x8 << x;
I = nondet_3 s< t2;

Fastest checker: explicit
Fails for (8, 1, 0, 7, 4, 5)

[]
Fastest checker: genetic
Evars: 11, 6, 7, 11, 5, 4
Program 0:
t1 = y | nondet_0;
t2 = nondet_3 ==> nondet_1;
t3 = x <= t2;
t4 = 0xf >> t2;
I = 0xf <= t1;

Fastest checker: explicit
Fails for (0, 0, 0, 10, 4, 5)

[]
Fastest checker: genetic
Evars: 4, 5, 2, 4, 9, 5
Program 0:
t1 = nondet_0 % y;
I = y == nondet_2;

Fastest checker: explicit
Fails for (0, 5, 0, 10, 4, 5)

[]
Fastest checker: genetic
Evars: 13, 10, 5, 6, 6, 6
Program 0:
I = nondet_0 == y;

Fastest checker: explicit
Fails for (0, 0, 0, 5, 5, 5)

[]
Fastest checker: genetic
Evars: 3, 6, 7, 0, 7, 1
Program 0:
t1 = max(nondet_2, nondet_2);
t2 = y < nondet_3;
I = y <= t2;

Fastest checker: cbmc
Fails for (9, 0, 0, 0, 4, 1)

[]
Fastest checker: genetic
Evars: 6, 12, 13, 9, 13, 1
Program 0:
t1 = nondet_1 + nondet_3;
t2 = nondet_3 << y;
t3 = t1 - nondet_0;
t4 = min(nondet_2, nondet_1);
I = y < t4;

Fastest checker: explicit
Fails for (0, 2, 2, 0, 4, 1)

[]
Fastest checker: genetic
Evars: 8, 7, 11, 6, 3, 4
Program 0:
t1 = nondet_3 >> nondet_0;
t2 = t1 < nondet_3;
t3 = nondet_2 & nondet_0;
I = y s<= t3;

Fastest checker: explicit
Fails for (0, 1, 0, 1, 4, 1)

[]
Fastest checker: genetic
Evars: 7, 12, 15, 14, 8, 6
Program 0:
I = 0x7 == nondet_3;

Fastest checker: explicit
Fails for (7, 0, 1, 1, 4, 1)

[]
Fastest checker: genetic
Evars: 11, 3, 13, 15, 1, 1
Program 0:
t1 = nondet_2 >> nondet_1;
t2 = 0x8 < nondet_1;
t3 = nondet_1 < y;
I = t1 * t2;

Fastest checker: explicit
Fails for (0, 2, 9, 1, 4, 1)

[]
Fastest checker: genetic
Evars: 5, 10, 14, 14, 9, 1
Program 0:
t1 = nondet_2 ^ nondet_0;
t2 = 0x7 + 0x7;
I = t2 == nondet_0;

Fastest checker: explicit
Fails for (0, 0, 0, 14, 4, 1)

[]
Fastest checker: genetic
Evars: 15, 15, 2, 11, 12, 5
Program 0:
t1 = x < nondet_2;
t2 = max(x, nondet_1);
I = 0xf <= nondet_3;

Fastest checker: explicit
Fails for (15, 0, 0, 14, 4, 1)

[]
Fastest checker: genetic
Evars: 10, 13, 14, 5, 14, 3
Program 0:
t1 = nondet_1 % y;
t2 = nondet_0 % y;
t3 = 0xf + 0xf;
t4 = ~nondet_1;
I = t4 < t1;

Fastest checker: explicit
Fails for (0, 0, 15, 0, 1, 2)

[]
Fastest checker: genetic
Evars: 9, 15, 7, 15, 8, 6
Program 0:
t1 = nondet_2 ? x : nondet_0;
t2 = 0xf & 0xf;
I = 0xf <= nondet_0;

Fastest checker: explicit
Fails for (0, 1, 0, 15, 1, 2)

[]
Fastest checker: genetic
Evars: 9, 15, 7, 15, 8, 6
Program 0:
t1 = nondet_1 >>> y;
t2 = 0xf s<= nondet_1;
t3 = x >> 0xf;
I = t3 >>> x;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 8, 2)

[]
Fastest checker: genetic
Evars: 3, 1, 4, 12, 3, 7
Program 0:
t1 = 0x7 + 0x7;
I = 0x7 <= y;

Fastest checker: cbmc
Fails for (0, 0, 0, 0, 4, 7)

[]
Fastest checker: genetic
Evars: 13, 7, 14, 14, 15, 4
Program 0:
t1 = max(0x8, nondet_0);
t2 = nondet_1 & y;
t3 = max(nondet_1, nondet_0);
t4 = x ^ nondet_0;
I = t2 & t1;

Fastest checker: explicit
Fails for (0, 0, 1, 9, 4, 7)

[]
Fastest checker: genetic
Evars: 15, 12, 3, 14, 3, 1
Program 0:
t1 = nondet_3 >>> y;
t2 = nondet_1 >>> y;
t3 = t1 != nondet_0;
I = t2 & nondet_3;

Fastest checker: explicit
Fails for (1, 0, 8, 9, 4, 7)

[]
Fastest checker: genetic
Evars: 9, 6, 14, 5, 6, 2
Program 0:
t1 = x < nondet_1;
I = t1 * nondet_3;

Fastest checker: explicit
Fails for (8, 1, 8, 9, 4, 7)

[]
Fastest checker: genetic
Evars: 11, 14, 12, 4, 1, 1
Program 0:
t1 = nondet_3 >> 0x7;
t2 = 0x7 s<= nondet_3;
t3 = nondet_1 != nondet_0;
t4 = min(nondet_2, nondet_3);
I = 0x7 <= t4;

Fastest checker: explicit
Fails for (8, 7, 8, 9, 4, 7)

[]
Fastest checker: genetic
Evars: 8, 12, 9, 7, 13, 4
Program 0:
t1 = y s< nondet_0;
t2 = t1 >> y;
I = t2 * nondet_1;

Fastest checker: cbmc
Fails for (0, 0, 1, 5, 15, 4)

[]
Fastest checker: genetic
Evars: 5, 5, 13, 13, 6, 4
Program 0:
t1 = min(nondet_2, nondet_1);
I = t1 & nondet_3;

Fastest checker: explicit
Fails for (1, 1, 1, 5, 15, 4)

[]
Fastest checker: genetic
Evars: 9, 15, 10, 8, 13, 6
Program 0:
t1 = nondet_0 - y;
t2 = nondet_0 - nondet_3;
t3 = nondet_2 >>> nondet_2;
I = nondet_3 & t3;

Fastest checker: explicit
Fails for (4, 4, 1, 5, 15, 4)

[]
Fastest checker: genetic
Evars: 13, 12, 9, 13, 3, 5
Program 0:
t1 = nondet_0 * nondet_3;
t2 = nondet_2 & nondet_0;
t3 = nondet_3 >> 0x8;
I = t2 & 0x8;

Fastest checker: explicit
Fails for (0, 8, 0, 8, 15, 4)

[]
Fastest checker: genetic
Evars: 8, 15, 14, 14, 9, 1
Program 0:
t1 = min(nondet_0, nondet_1);
t2 = nondet_0 & nondet_3;
t3 = 0x7 | t2;
t4 = min(nondet_2, nondet_3);
I = t4 >> 0x7;

Fastest checker: explicit
Fails for (8, 8, 0, 8, 15, 4)

[]
Fastest checker: genetic
Evars: 14, 11, 12, 5, 3, 1
Program 0:
t1 = 0x7 + 0x7;
t2 = nondet_3 >>> t1;
t3 = nondet_3 >>> 0x7;
t4 = min(nondet_2, nondet_1);
I = t4 >>> 0x7;

Fastest checker: explicit
Fails for (0, 8, 8, 8, 15, 4)

[]
Fastest checker: genetic
Evars: 15, 13, 10, 4, 6, 1
Program 0:
t1 = nondet_0 != nondet_1;
t2 = min(nondet_1, nondet_3);
t3 = nondet_1 >> nondet_1;
t4 = t3 * nondet_3;
I = 0x7 < t4;

Fastest checker: explicit
Fails for (1, 8, 8, 8, 15, 4)

[]
Fastest checker: genetic
Evars: 15, 14, 6, 1, 5, 3
Program 0:
t1 = nondet_3 & nondet_1;
t2 = nondet_3 * nondet_0;
I = 0x1 s< t1;

Fastest checker: explicit
Fails for (2, 0, 10, 8, 15, 4)

[]
Fastest checker: genetic
Evars: 13, 15, 9, 6, 11, 3
Program 0:
t1 = y * nondet_3;
t2 = min(nondet_0, nondet_3);
t3 = nondet_1 s<= nondet_3;
t4 = 0xf <= nondet_2;
I = nondet_3 * t4;

Fastest checker: explicit
Fails for (1, 15, 10, 8, 15, 4)

[]
Fastest checker: genetic
Evars: 14, 9, 3, 0, 15, 5
Program 0:
t1 = nondet_3 & nondet_1;
I = nondet_0 < t1;

Fastest checker: explicit
Fails for (10, 15, 10, 8, 15, 4)

[]
Fastest checker: genetic
Evars: 13, 10, 7, 13, 13, 1
Program 0:
t1 = nondet_2 & x;
t2 = 0x7 == nondet_1;
t3 = x >> t1;
t4 = t3 & t2;
I = t4 >>> t1;

Fastest checker: explicit
Fails for (0, 0, 7, 9, 15, 4)

[]
Fastest checker: genetic
Evars: 11, 7, 7, 12, 6, 3
Program 0:
t1 = nondet_3 & nondet_1;
t2 = nondet_2 & t1;
I = y s<= t2;

Fastest checker: explicit
Fails for (4, 4, 7, 9, 15, 4)

[]
Fastest checker: genetic
Evars: 15, 12, 9, 7, 15, 1
Program 0:
t1 = nondet_3 & nondet_1;
t2 = nondet_3 & nondet_2;
t3 = y < t2;
t4 = -t1;
I = t3 == y;

Fastest checker: cbmc
Fails for (2, 6, 0, 0, 4, 1)

[]
Fastest checker: genetic
Evars: 15, 13, 9, 12, 1, 1
Program 0:
t1 = nondet_3 & nondet_1;
t2 = x == y;
I = x <= t2;

Fastest checker: cbmc
Fails for (8, 1, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 15, 12, 9, 6, 7, 2
Program 0:
t1 = nondet_3 + nondet_1;
t2 = nondet_2 & nondet_3;
t3 = 0x8 <= t2;
I = t3 & nondet_3;

Fastest checker: explicit
Fails for (9, 8, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 6, 13, 12, 4, 4, 7
Program 0:
t1 = nondet_3 & nondet_1;
t2 = nondet_3 & nondet_1;
I = t1 == x;

Fastest checker: explicit
Fails for (1, 0, 1, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 7, 1, 5, 13, 10, 4
Program 0:
t1 = nondet_3 & nondet_1;
t2 = nondet_1 & nondet_3;
I = y s< t2;

Fastest checker: explicit
Fails for (2, 0, 2, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 1, 11, 13, 3, 4, 7
Program 0:
t1 = nondet_0 & nondet_3;
t2 = nondet_2 s< 0xf;
t3 = min(nondet_3, 0xf);
I = t2 & t1;

Fastest checker: explicit
Fails for (1, 8, 0, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 15, 14, 14, 1, 7, 1
Program 0:
t1 = nondet_3 & nondet_2;
t2 = 0xf + 0xf;
t3 = min(nondet_2, nondet_3);
I = t3 == t2;

Fastest checker: explicit
Fails for (14, 14, 0, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 15, 13, 12, 13, 5, 7
Program 0:
t1 = nondet_3 & nondet_1;
t2 = nondet_2 & nondet_3;
t3 = -y;
I = t3 <= t1;

Fastest checker: explicit
Fails for (15, 0, 15, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 9, 9, 7, 0, 6, 5
Program 0:
t1 = nondet_3 & nondet_2;
t2 = nondet_1 << 0xf;
I = nondet_2 & t2;

Fastest checker: explicit
Fails for (0, 8, 15, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 14, 11, 2, 7, 8, 6
Program 0:
t1 = nondet_3 & nondet_2;
t2 = t1 < nondet_2;
t3 = -y;
I = t3 <= t1;

Fastest checker: explicit
Fails for (15, 15, 15, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 1, 1, 14, 6, 1, 7
Program 0:
t1 = y & nondet_0;
t2 = nondet_2 & nondet_3;
I = t2 == x;

Fastest checker: explicit
Fails for (1, 1, 0, 2, 1, 1)

[]
Fastest checker: genetic
Evars: 13, 14, 5, 13, 14, 3
Program 0:
t1 = nondet_3 & nondet_2;
t2 = 0xf + 0xf;
t3 = nondet_3 != t2;
I = x == t2;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 14, 1)

[]
Fastest checker: genetic
Evars: 15, 13, 14, 1, 3, 7
Program 0:
t1 = 0x7 + 0x7;
I = t1 == nondet_1;

Fastest checker: explicit
Fails for (0, 0, 14, 0, 14, 1)

[]
Fastest checker: genetic
Evars: 7, 8, 13, 13, 7, 5
Program 0:
t1 = 0x8 >>> nondet_1;
t2 = x < nondet_1;
t3 = x < nondet_1;
I = t1 < nondet_1;

Fastest checker: explicit
Fails for (0, 0, 12, 0, 15, 1)

[]
Fastest checker: genetic
Evars: 7, 2, 15, 4, 1, 4
Program 0:
t1 = nondet_1 >> 0x7;
t2 = 0x7 == nondet_3;
I = t2 >> y;

Fastest checker: cbmc
Fails for (7, 0, 0, 0, 4, 4)

[]







Timeout
Perf counters:
{'genetic': 84, 'cbmc': 7, 'explicit': 77, 'timeout': 1, 'iterations': 85}
Perf timers:
verify: 10.97s
checker: 179.78s
gcc: 0.37s
_: 180.02s
synth: 169.00s
