Using seed: 1337
[]
Fastest checker: genetic
Program 0:
I = b >>> 0x5;
Program 1:
t1 = nondet_0 s<= y;
t2 = min(y, y);
I = a s<= a;

Fastest checker: explicit
Fails for (0, 0, 0, 10, 2)

[]
Fastest checker: genetic
Program 0:
t1 = x & 0xa;
I = 0xa >> y;
Program 1:
I = b s< b;

Fastest checker: explicit
Fails for (0, 0, 0, 1, 3)

[]
Fastest checker: genetic
Program 0:
I = a == x;
Program 1:
t1 = 0x5 ^ x;
I = 0x5 ? x : a;

Fastest checker: explicit
Fails for (0, 1, 0, 1, 3)

[]
Fastest checker: genetic
Program 0:
t1 = max(0x2, nondet_0);
t2 = a - t1;
I = t2 / t1;
Program 1:
I = min(0x4, y);

Fastest checker: explicit
Fails for (1, 1, 0, 1, 3)

[]
Fastest checker: genetic
Program 0:
t1 = ~a;
I = y s<= b;
Program 1:
t1 = nondet_0 < x;
t2 = b s< nondet_0;
I = t2 * a;

Fastest checker: explicit
Fails for (0, 0, 3, 1, 3)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_0 != y;
t2 = 0x2 - 0x2;
I = ~t1;
Program 1:
t1 = 0x1 != x;
t2 = y & x;
I = a * t2;

Fastest checker: explicit
Fails for (0, 0, 0, 2, 3)

[]
Fastest checker: genetic
Program 0:
t1 = max(y, b);
t2 = ~t1;
I = t1 == b;
Program 1:
I = a + y;

Fastest checker: explicit
Fails for (1, 0, 3, 2, 3)

[]
Fastest checker: genetic
Program 0:
t1 = b - a;
t2 = -a;
I = y ==> b;
Program 1:
t1 = a ? 0x1 : b;
t2 = y << x;
I = x ? x : a;

Fastest checker: explicit
Fails for (1, 2, 1, 1, 4)

[]
Fastest checker: genetic
Program 0:
t1 = b | b;
I = 0xc + t1;
Program 1:
t1 = 0x2 - y;
t2 = a >>> nondet_0;
I = t1 | y;

Fastest checker: explicit
Fails for (2, 2, 1, 1, 4)

[]
Fastest checker: genetic
Program 0:
t1 = a s< b;
I = ~y;
Program 1:
t1 = nondet_0 s<= y;
t2 = min(y, y);
I = a + x;

Fastest checker: explicit
Fails for (1, 15, 1, 1, 4)

[]
Fastest checker: genetic
Program 0:
t1 = b >>> 0x5;
t2 = 0x5 + y;
I = a ^ t2;
Program 1:
t1 = nondet_0 s<= y;
t2 = min(y, y);
t3 = t1 s<= a;
I = x + t3;

Fastest checker: explicit
Fails for (4, 0, 2, 1, 4)

[]
Fastest checker: genetic
Program 0:
I = 0x5 - nondet_0;
Program 1:
t1 = nondet_0 s<= y;
t2 = min(y, y);
t3 = y + x;
t4 = 0x0 + x;
I = x >>> t4;

Fastest checker: explicit
Fails for (5, 0, 2, 1, 4)

[]
Fastest checker: genetic
Program 0:
t1 = ~a;
I = 0x5 << a;
Program 1:
t1 = nondet_0 s<= y;
t2 = min(y, y);
t3 = a s<= a;
t4 = x + x;
I = a + a;

Fastest checker: explicit
Correct for wordlen=4
Fastest checker: cbmc
Also correct for wordlen=32!







Finished in 3.93s

Program 0:
t1 = ~a;
I = 0x5 << a;
Program 1:
t1 = nondet_0 s<= y;
t2 = min(y, y);
t3 = a s<= a;
t4 = x + x;
I = a + a;


Perf counters:
{'genetic': 13, 'cbmc': 1, 'explicit': 13, 'iterations': 13}
Perf timers:
verify: 3.15s
checker: 3.90s
gcc: 0.65s
_: 3.93s
synth: 0.77s
