Using seed: 1337
[]
Fastest checker: genetic
Evars: 6, 15
Program 0:
res[0] = args[0] - args[1];

Fastest checker: explicit
Fails for (2, 1)

[]
Fastest checker: genetic
Evars: 6, 10
Program 0:
res[3] = args[1] ^ 0xa;
res[2] = ~args[1];
res[1] = args[0] & args[1];
res[0] = res[2] - 0xa;

Fastest checker: explicit
Fails for (1, 1)

[]
Fastest checker: genetic
Evars: 8, 7
Program 0:
res[3] = !args[1] || args[1];
res[2] = ((sword_t) res[3]) <= ((sword_t) res[3]);
res[1] = -args[1];
res[0] = 0x2 << res[1];

Fastest checker: explicit
Fails for (2, 2)

[]
Fastest checker: genetic
Evars: 5, 0
Program 0:
res[1] = min(args[0], 0x1);
res[0] = ((sword_t) 0x1) >> ((sword_t) args[1]);

Fastest checker: explicit
Fails for (4, 4)

[]
Fastest checker: genetic
Evars: 12, 6
Program 0:
res[0] = args[1] == 0x6;

Fastest checker: explicit
Fails for (6, 6)

[]
Fastest checker: genetic
Evars: 13, 15
Program 0:
res[4] = ~args[1];
res[3] = args[0] ? args[1] : args[0];
res[2] = res[4] + args[1];
res[1] = res[4] + args[0];
res[0] = args[1] >> 0xb;

Fastest checker: explicit
Fails for (8, 8)

[]
Fastest checker: genetic
Evars: 15, 1
Program 0:
res[3] = args[1] == args[1];
res[2] = ~0x0;
res[1] = args[0] | res[3];
res[0] = args[0] / res[2];

Fastest checker: explicit
Fails for (15, 1)

[]
Fastest checker: genetic
Evars: 8, 6
Program 0:
res[1] = 0xf | 0xf;
res[0] = args[0] % args[1];

Fastest checker: explicit
Fails for (1, 0)

[]
Fastest checker: genetic
Evars: 5, 0
Program 0:
res[4] = ((sword_t) 0x0) >> ((sword_t) args[1]);
res[3] = !0x0 || 0x0;
res[2] = min(args[1], res[3]);
res[1] = !res[3] || res[4];
res[0] = args[1] == res[4];

Fastest checker: explicit
Correct for wordlen=4
Fastest checker: cbmc
Also correct for wordlen=32!







Finished in 2.91s

Evars: 5, 0
Program 0:
res[4] = ((sword_t) 0x0) >> ((sword_t) args[1]);
res[3] = !0x0 || 0x0;
res[2] = min(args[1], res[3]);
res[1] = !res[3] || res[4];
res[0] = args[1] == res[4];


Perf counters:
{'genetic': 9, 'cbmc': 1, 'explicit': 9, 'iterations': 9}
Perf timers:
verify: 2.20s
checker: 2.81s
gcc: 0.62s
_: 2.91s
synth: 0.66s
