Using seed: 1337
[]
Fastest checker: genetic
Evars: 4, 8
Program 0:
I = 0x5 >>> 0x5;

Fastest checker: explicit
Fails for (6, 11)

[]
Fastest checker: genetic
Evars: 15, 2
Program 0:
I = y1 s< y2;

Fastest checker: explicit
Fails for (0, 1)

[]
Fastest checker: genetic
Evars: 13, 2
Program 0:
t1 = ~y1;
t2 = 0x4 - 0x4;
I = y2 s<= t1;

Fastest checker: explicit
Fails for (0, 8)

[]
Fastest checker: genetic
Evars: 8, 11
Program 0:
I = y1 s<= 0xa;

Fastest checker: explicit
Fails for (9, 8)

[]
Fastest checker: genetic
Evars: 1, 3
Program 0:
t1 = y2 * y1;
t2 = t1 <= y1;
I = 0x1 == y1;

Fastest checker: explicit
Fails for (1, 9)

[]
Fastest checker: genetic
Evars: 5, 6
Program 0:
I = 0x5 s< y2;

Fastest checker: explicit
Fails for (0, 6)

[]
Fastest checker: genetic
Evars: 13, 14
Program 0:
t1 = 0xc | 0xc;
t2 = max(t1, y1);
I = 0xc < y2;

Fastest checker: explicit
Fails for (8, 13)

[]
Fastest checker: genetic
Evars: 1, 13
Program 0:
t1 = ~0xe;
t2 = y1 + y1;
I = y1 s< t2;

Fastest checker: explicit
Fails for (2, 14)

[]
Fastest checker: genetic
Evars: 13, 14
Program 0:
t1 = ~0xe;
t2 = 0xe + 0xe;
I = 0xe <= y2;

Fastest checker: explicit
Fails for (8, 14)

[]
Fastest checker: genetic
Evars: 13, 14
Program 0:
t1 = y2 * 0xc;
t2 = y2 & y1;
t3 = y2 + y1;
t4 = 0xc + 0xc;
I = t3 & y1;

Fastest checker: explicit
Fails for (3, 15)

[]
Fastest checker: genetic
Evars: 2, 6
Program 0:
t1 = -y1;
t2 = y1 <= y1;
t3 = y2 <= 0x6;
t4 = y2 + 0x6;
t5 = ~y2;
I = y1 % 0x6;

Fastest checker: explicit
Fails for (5, 15)

[]
Fastest checker: genetic
Evars: 2, 6
Program 0:
t1 = y2 == y1;
t2 = y1 | y1;
t3 = y2 <= 0x8;
I = y1 * t3;

Fastest checker: explicit
Fails for (2, 1)

[]
Fastest checker: genetic
Evars: 13, 14
Program 0:
t1 = y2 * 0xc;
t2 = y2 & y1;
t3 = 0xc <= 0xc;
t4 = 0xc <= y1;
I = t4 & y1;

Fastest checker: explicit
Fails for (13, 8)

[]
Fastest checker: genetic
Evars: 14, 8
Program 0:
t1 = 0xf ==> y1;
t2 = t1 | y2;
I = t2 ^ y2;

Fastest checker: explicit
Fails for (4, 10)

[]
Fastest checker: genetic
Evars: 8, 5
Program 0:
I = y1 s<= 0x8;

Fastest checker: explicit
Correct for wordlen=4
Fastest checker: cbmc
Trying to generalize...
Fastest checker: cbmc
Fastest checker: explicit
Fastest checker: explicit
Couldn't generalize :-(
Increasing wordlen to 8
[]
Fastest checker: genetic
Evars: 15, 11
Program 0:
t1 = 0x7 <= y2;
t2 = t1 s< 0x7;
I = y1 == y1;

Fastest checker: explicit
Fails for (54, 27)

[]
Fastest checker: genetic
Evars: 7, 2
Program 0:
I = 0x7 / y2;

Fastest checker: explicit
Fails for (1, 0)

[]
Fastest checker: genetic
Evars: 7, 11
Program 0:
I = y1 < y2;

Fastest checker: explicit
Fails for (0, 1)

[]
Fastest checker: genetic
Evars: 14, 8
Program 0:
t1 = 0xf ==> y1;
t2 = t1 | y2;
I = t2 ^ y2;

Fastest checker: explicit
Fails for (4, 2)

[]
Fastest checker: genetic
Evars: 243, 177
Program 0:
t1 = y2 << y2;
t2 = max(0xaa, y2);
I = t2 != 0xaa;

Fastest checker: explicit
Fails for (86, 171)

[]
Fastest checker: genetic
Evars: 36, 152
Program 0:
t1 = -y2;
I = y2 s<= 0xa2;

Fastest checker: explicit
Fails for (0, 128)

[]
Fastest checker: genetic
Evars: 109, 206
Program 0:
I = y2 / 0xac;

Fastest checker: explicit
Fails for (88, 172)

[]
Fastest checker: genetic
Evars: 109, 205
Program 0:
t1 = 0xac < y2;
t2 = y1 << y2;
I = t1 * t1;

Fastest checker: explicit
Fails for (90, 173)

[]
Fastest checker: genetic
Evars: 52, 235
Program 0:
t1 = 0xda == y1;
t2 = t1 - y2;
I = 0xda <= y2;

Fastest checker: explicit
Fails for (128, 218)

[]
Fastest checker: genetic
Evars: 52, 235
Program 0:
t1 = 0xda == y1;
t2 = y1 & y2;
t3 = y2 == y1;
I = 0xda < y2;

Fastest checker: explicit
Fails for (128, 219)

[]
Fastest checker: genetic
Evars: 136, 36
Program 0:
t1 = 0xc0 & y2;
t2 = 0xc0 ? y1 : t1;
I = t2 s< t1;

Fastest checker: explicit
Fails for (0, 64)

[]
Fastest checker: genetic
Evars: 127, 202
Program 0:
t1 = 0x73 | y2;
t2 = y1 << 0x73;
I = 0x73 s< y1;

Fastest checker: explicit
Fails for (116, 64)

[]
Fastest checker: genetic
Evars: 195, 126
Program 0:
t1 = min(0xe0, 0xe0);
t2 = y2 + y2;
t3 = y2 + 0xe0;
I = y1 s<= 0xe0;

Fastest checker: explicit
Fails for (129, 128)

[]
Fastest checker: genetic
Evars: 195, 126
Program 0:
t1 = y2 * 0xe0;
t2 = y2 & y1;
t3 = y1 s<= y2;
I = y1 & t3;

Fastest checker: explicit
Fails for (1, 2)

[]
Fastest checker: genetic
Evars: 12, 233
Program 0:
t1 = 0xc7 >>> y2;
I = y2 / t1;

Fastest checker: explicit
Fails for (128, 200)

[]
Fastest checker: genetic
Evars: 217, 94
Program 0:
t1 = y2 s<= 0x4f;
I = 0x4f s<= y2;

Fastest checker: explicit
Fails for (0, 79)

[]
Fastest checker: genetic
Evars: 156, 163
Program 0:
t1 = y1 <= y2;
t2 = 0xee s< 0xee;
t3 = -y2;
t4 = y1 + y2;
I = y1 s<= t3;

Fastest checker: explicit
Fails for (2, 129)

[]
Fastest checker: genetic
Evars: 112, 235
Program 0:
t1 = y1 & y2;
t2 = y2 == y1;
I = 0xdc < y2;

Fastest checker: explicit
Fails for (128, 221)

[]
Fastest checker: genetic
Evars: 240, 44
Program 0:
t1 = min(y1, 0x78);
t2 = 0x78 + 0x78;
I = y1 == t2;

Fastest checker: explicit
Fails for (240, 221)

[]
Fastest checker: genetic
Evars: 89, 111
Program 0:
I = 0x6b s<= y2;

Fastest checker: explicit
Fails for (0, 107)

[]
Fastest checker: genetic
Evars: 73, 203
Program 0:
t1 = y2 <= 0x8d;
t2 = y1 <= 0x8d;
I = t2 & y1;

Fastest checker: explicit
Fails for (109, 107)

[]
Fastest checker: genetic
Evars: 154, 120
Program 0:
t1 = min(y2, 0xa6);
t2 = min(y2, y2);
t3 = t2 >> y1;
t4 = max(y2, y1);
I = t4 s< y2;

Fastest checker: explicit
Correct for wordlen=8
Fastest checker: explicit
Trying to generalize...
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Couldn't generalize :-(
Increasing wordlen to 16
[]
Fastest checker: genetic
Evars: 210, 19
Program 0:
t1 = ~y2;
t2 = y1 <= y1;
I = y1 << t2;

Fastest checker: explicit
Fails for (10732, 43500)

[]
Fastest checker: genetic
Evars: 113, 164
Program 0:
t1 = y1 >> 0x49;
t2 = 0x49 & y1;
I = t2 < y1;

Fastest checker: explicit
Fails for (21464, 43500)

[]
Fastest checker: genetic
Evars: 165, 79
Program 0:
t1 = y1 & y1;
I = 0xc1 / y2;

Fastest checker: cbmc
Fails for (68, 34)

[]
Fastest checker: genetic
Evars: 40, 8
Program 0:
t1 = 0x2e / y1;
t2 = t1 ? 0x2e : t1;
I = t1 < t2;

Fastest checker: explicit
Fails for (0, 35)

[]
Fastest checker: genetic
Evars: 73, 203
Program 0:
t1 = y2 <= 0x8d;
t2 = y1 <= 0x8d;
I = t2 & y1;

Fastest checker: explicit
Fails for (37, 35)

[]
Fastest checker: genetic
Evars: 2, 6
Program 0:
t1 = y2 == y1;
t2 = y1 | y1;
t3 = y2 <= 0x8;
I = y1 * t3;

Fastest checker: cbmc
Fails for (16, 8)

[]
Fastest checker: genetic
Evars: 240, 44
Program 0:
t1 = min(y1, 0x78);
t2 = 0x78 + 0x78;
I = y1 == t2;

Fastest checker: explicit
Fails for (240, 8)

[]
Fastest checker: genetic
Evars: 31, 3
Program 0:
t1 = 0xc8 / y2;
t2 = y1 >> y2;
I = t2 == y2;

Fastest checker: explicit
Fails for (2048, 8)

[]
Fastest checker: genetic
Evars: 55944, 36
Program 0:
t1 = 0x1fc0 & y2;
t2 = 0x1fc0 ? y1 : t1;
I = t2 s< t1;

Fastest checker: cbmc
Fails for (1, 127)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: explicit
Fails for (12720, 127)

[]
Fastest checker: genetic
Evars: 31853, 57978
Program 0:
t1 = y2 * 0xdcac;
t2 = y2 & y1;
I = 0xdcac <= y2;

Fastest checker: cbmc
Fails for (32768, 57344)

[]
Fastest checker: genetic
Evars: 54133, 14118
Program 0:
I = 0xb5f6 < y1;

Fastest checker: explicit
Fails for (57345, 57344)

[]
Fastest checker: genetic
Evars: 16048, 47679
Program 0:
t1 = y2 * 0xa4c2;
t2 = y1 / 0xa4c2;
I = t1 <= y2;

Fastest checker: cbmc
Fails for (5008, 35272)

[]
Fastest checker: genetic
Evars: 50058, 62540
Program 0:
I = 0xe47c <= y2;

Fastest checker: cbmc
Fails for (32768, 61440)

[]
Fastest checker: genetic
Evars: 31410, 64323
Program 0:
t1 = y2 * y2;
I = 0xfb18 <= y2;

Fastest checker: cbmc
Fails for (63488, 64512)

[]
Fastest checker: genetic
Evars: 64949, 47648
Program 0:
t1 = y1 < 0xfb18;
t2 = y2 != y2;
I = 0xfb18 <= y1;

Fastest checker: explicit
Fails for (64513, 64512)

[]
Fastest checker: genetic
Evars: 39140, 17471
Program 0:
t1 = y1 s<= 0xacc6;
I = -t1;

Fastest checker: cbmc
Fails for (42307, 36030)

[]
Fastest checker: genetic
Evars: 31853, 53454
Program 0:
t1 = y2 * 0xdcac;
t2 = y2 + y1;
t3 = y2 + t1;
t4 = y2 + y2;
I = t4 s<= y2;

Fastest checker: cbmc
Fails for (0, 28674)

[]
Fastest checker: genetic
Evars: 47770, 10181
Program 0:
t1 = max(y2, 0x5602);
t2 = t1 | 0x5602;
I = t2 <= y1;

Fastest checker: explicit
Fails for (30210, 28674)

[]
Fastest checker: genetic
Evars: 33146, 31232
Program 0:
t1 = 0x3656 << y2;
t2 = min(t1, t1);
I = 0x3656 == t2;

Fastest checker: explicit
Fails for (0, 28688)

[]
Fastest checker: genetic
Evars: 32915, 10837
Program 0:
I = y1 s<= 0xa462;

Fastest checker: cbmc
Fails for (34291, 32768)

[]
Fastest checker: genetic
Evars: 32598, 64779
Program 0:
t1 = y2 - y2;
t2 = t1 / 0x54be;
t3 = 0x54be != y2;
t4 = 0x54be + y2;
I = 0x54be / t4;

Fastest checker: cbmc
Fails for (20320, 43842)

[]
Fastest checker: genetic
Evars: 61912, 14413
Program 0:
t1 = y2 & y1;
I = y1 s< t1;

Fastest checker: cbmc
Correct for wordlen=16
Fastest checker: explicit
Trying to generalize...
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Couldn't generalize :-(
Increasing wordlen to 32
[]
Fastest checker: genetic
Evars: 1896, 58738
Program 0:
t1 = y2 != 0x3cb3;
I = max(t1, 0x3cb3);

Fastest checker: explicit
Fails for (6, 3)

[]
Fastest checker: genetic
Evars: 13071, 25537
Program 0:
I = y2 >> y2;

Fastest checker: cbmc
Fails for (204, 102)

[]
Fastest checker: genetic
Evars: 54695, 53848
Program 0:
t1 = y2 & 0xac77;
t2 = t1 | 0xac77;
I = y2 - t1;

Fastest checker: cbmc
Fails for (1, 1048576)

[]
Fastest checker: genetic
Evars: 58021, 38250
Program 0:
t1 = y2 ^ y2;
t2 = y2 == y1;
I = y1 / 0x10ea;

Fastest checker: explicit
Fails for (1048577, 1048576)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;

Fastest checker: cbmc
Fails for (2430877680L, 2430875616L)

[]
Fastest checker: genetic
Evars: 31734, 41763
Program 0:
t1 = y2 s< y2;
t2 = 0x31b0 & y1;
I = t2 / 0x31b0;








Timeout
Perf counters:
{'genetic': 98, 'cbmc': 49, 'explicit': 60, 'timeout': 1, 'iterations': 98}
Perf timers:
gcc: 1.83s
verify: 106.89s
checker: 119.62s
generalize: 1.99s
synth: 12.91s
_: 120.00s
