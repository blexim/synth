Using seed: 1337
[]
Fastest checker: genetic
Evars: 4, 8, 3, 7, 11, 12
Program 0:
I = 0x5 >>> tmp;

Fastest checker: explicit
Fails for (1, 0, 0, 14, 2, 13)

[]
Fastest checker: genetic
Evars: 10, 5, 6, 10, 11, 7
Program 0:
t1 = nondet_0 <= 0x3;
I = nondet_2 s< tmp;

Fastest checker: explicit
Fails for (8, 0, 0, 14, 2, 13)

[]
Fastest checker: genetic
Evars: 1, 12, 9, 8, 14, 1
Program 0:
I = nondet_2 <= nondet_1;

Fastest checker: explicit
Fails for (1, 1, 0, 14, 2, 13)

[]
Fastest checker: genetic
Evars: 5, 2, 1, 5, 11, 10
Program 0:
t1 = nondet_1 <= nondet_1;
t2 = maxId <= 0xa;
I = t2 s< t1;

Fastest checker: explicit
Fails for (1, 0, 0, 0, 11, 13)

[]
Fastest checker: genetic
Evars: 11, 12, 5, 1, 4, 9
Program 0:
I = 0x2 * nondet_0;

Fastest checker: explicit
Fails for (1, 0, 1, 0, 11, 13)

[]
Fastest checker: genetic
Evars: 3, 2, 15, 6, 7, 1
Program 0:
t1 = maxId ==> nondet_1;
t2 = maxId != t1;
I = 0x5 < nondet_0;

Fastest checker: explicit
Fails for (1, 0, 6, 0, 11, 13)

[]
Fastest checker: genetic
Evars: 14, 14, 13, 1, 10, 5
Program 0:
t1 = id != nondet_1;
t2 = maxId << 0xb;
I = id < nondet_1;

Fastest checker: explicit
Fails for (1, 1, 6, 0, 11, 13)

[]
Fastest checker: genetic
Evars: 9, 7, 14, 4, 14, 10
Program 0:
t1 = nondet_1 - maxId;
I = nondet_0 == maxId;

Fastest checker: explicit
Fails for (1, 0, 11, 0, 11, 13)

[]
Fastest checker: genetic
Evars: 8, 9, 13, 8, 14, 0
Program 0:
t1 = tmp != nondet_2;
I = t1 < nondet_1;

Fastest checker: explicit
Fails for (13, 1, 11, 0, 11, 13)

[]
Fastest checker: genetic
Evars: 3, 15, 10, 9, 15, 1
Program 0:
t1 = nondet_1 >>> maxId;
I = nondet_1 & id;

Fastest checker: explicit
Fails for (1, 2, 0, 14, 13, 13)

[]
Fastest checker: genetic
Evars: 14, 1, 9, 2, 14, 12
Program 0:
I = min(nondet_0, id);

Fastest checker: explicit
Fails for (1, 0, 1, 14, 13, 13)

[]
Fastest checker: genetic
Evars: 1, 8, 14, 7, 13, 4
Program 0:
I = tmp < nondet_1;

Fastest checker: explicit
Fails for (1, 14, 1, 14, 13, 13)

[]
Fastest checker: genetic
Evars: 5, 5, 13, 1, 12, 7
Program 0:
I = tmp <= 0x9;

Fastest checker: explicit
Fails for (1, 0, 0, 1, 0, 0)

[]
Fastest checker: genetic
Evars: 12, 15, 7, 1, 11, 5
Program 0:
t1 = id >>> maxId;
I = nondet_0 & id;

Fastest checker: explicit
Fails for (1, 0, 1, 1, 0, 0)

[]
Fastest checker: genetic
Evars: 9, 9, 9, 0, 13, 14
Program 0:
t1 = min(nondet_1, nondet_0);
I = t1 >>> nondet_2;

Fastest checker: explicit
Fails for (4, 1, 1, 1, 0, 0)

[]
Fastest checker: genetic
Evars: 4, 8, 3, 7, 11, 11
Program 0:
I = 0x5 s<= id;

Fastest checker: cbmc
Fails for (1, 0, 0, 6, 7, 5)

[]
Fastest checker: genetic
Evars: 5, 12, 5, 3, 4, 1
Program 0:
I = 0x5 s<= nondet_2;

Fastest checker: explicit
Fails for (5, 0, 0, 6, 7, 5)

[]
Fastest checker: genetic
Evars: 6, 2, 10, 3, 7, 6
Program 0:
t1 = nondet_0 * tmp;
t2 = nondet_2 + nondet_1;
t3 = nondet_0 ? 0x6 : nondet_2;
I = 0x6 == tmp;

Fastest checker: explicit
Fails for (1, 0, 0, 0, 0, 6)

[]
Fastest checker: genetic
Evars: 6, 2, 10, 7, 15, 8
Program 0:
t1 = 0x6 * tmp;
t2 = id + nondet_0;
I = 0x6 == nondet_2;

Fastest checker: explicit
Fails for (6, 0, 0, 0, 0, 6)

[]
Fastest checker: genetic
Evars: 5, 9, 0, 7, 12, 4
Program 0:
t1 = id - nondet_1;
I = nondet_1 s< 0xc;

Fastest checker: explicit
Fails for (1, 8, 0, 0, 0, 6)

[]
Fastest checker: genetic
Evars: 12, 0, 0, 13, 15, 8
Program 0:
t1 = tmp >>> 0xc;
t2 = min(nondet_0, nondet_0);
I = 0xc == nondet_2;

Fastest checker: explicit
Fails for (12, 8, 0, 0, 0, 6)

[]
Fastest checker: genetic
Evars: 13, 7, 11, 4, 12, 12
Program 0:
t1 = maxId & nondet_2;
t2 = id ==> maxId;
t3 = -t2;
I = t2 >>> tmp;

Fastest checker: explicit
Fails for (1, 0, 0, 0, 0, 8)

[]
Fastest checker: genetic
Evars: 13, 7, 11, 4, 12, 12
Program 0:
I = 0x5 s<= nondet_1;

Fastest checker: explicit
Fails for (1, 5, 0, 9, 0, 8)

[]
Fastest checker: genetic
Evars: 3, 12, 5, 3, 4, 11
Program 0:
t1 = 0x3 * tmp;
t2 = nondet_0 >>> nondet_0;
I = 0x3 == nondet_2;

Fastest checker: explicit
Fails for (3, 5, 0, 9, 0, 8)

[]
Fastest checker: genetic
Evars: 8, 14, 8, 4, 11, 15
Program 0:
t1 = nondet_0 s< nondet_0;
I = 0xe < tmp;

Fastest checker: cbmc
Fails for (8, 0, 0, 2, 7, 15)

[]
Fastest checker: genetic
Evars: 7, 3, 2, 7, 15, 6
Program 0:
I = 0x7 s<= nondet_2;

Fastest checker: explicit
Fails for (7, 0, 0, 0, 8, 15)

[]
Fastest checker: genetic
Evars: 7, 8, 7, 11, 13, 1
Program 0:
t1 = 0x1 & id;
t2 = min(t1, t1);
t3 = -nondet_0;
I = 0x1 == tmp;

Fastest checker: explicit
Fails for (1, 0, 0, 0, 0, 1)

[]
Fastest checker: genetic
Evars: 15, 2, 10, 3, 7, 6
Program 0:
t1 = max(0xd, 0xd);
I = 0xd < nondet_2;

Fastest checker: explicit
Fails for (14, 0, 0, 0, 0, 1)

[]
Fastest checker: genetic
Evars: 3, 8, 10, 3, 7, 6
Program 0:
t1 = min(nondet_1, nondet_0);
I = t1 >>> nondet_1;

Fastest checker: explicit
Fails for (1, 4, 1, 0, 0, 1)

[]
Fastest checker: genetic
Evars: 13, 2, 15, 0, 7, 9
Program 0:
t1 = id - nondet_2;
t2 = nondet_2 | 0xd;
I = 0xd < nondet_0;

Fastest checker: explicit
Fails for (1, 0, 14, 0, 0, 1)

[]
Fastest checker: genetic
Evars: 12, 10, 6, 0, 13, 13
Program 0:
t1 = min(nondet_1, nondet_0);
I = t1 >>> t1;

Fastest checker: explicit
Fails for (1, 4, 14, 0, 0, 1)

[]
Fastest checker: genetic
Evars: 12, 9, 9, 11, 15, 5
Program 0:
t1 = 0x6 * tmp;
t2 = nondet_0 >>> nondet_0;
t3 = nondet_1 & id;
I = t2 & t3;

Fastest checker: explicit
Fails for (1, 2, 5, 2, 1, 1)

[]
Fastest checker: genetic
Evars: 15, 2, 12, 5, 8, 6
Program 0:
I = 0xe < nondet_2;

Fastest checker: explicit
Fails for (15, 2, 5, 2, 1, 1)

[]
Fastest checker: genetic
Evars: 13, 14, 0, 11, 12, 0
Program 0:
t1 = maxId + maxId;
I = 0xb == id;

Fastest checker: cbmc
Fails for (1, 0, 0, 11, 10, 10)

[]
Fastest checker: genetic
Evars: 15, 7, 9, 7, 15, 9
Program 0:
t1 = id >> tmp;
t2 = nondet_0 << tmp;
I = nondet_1 == 0x7;

Fastest checker: explicit
Fails for (1, 7, 0, 11, 10, 10)

[]
Fastest checker: genetic
Evars: 2, 7, 10, 3, 7, 6
Program 0:
I = 0x2 == nondet_2;

Fastest checker: explicit
Fails for (2, 7, 0, 11, 10, 10)

[]
Fastest checker: genetic
Evars: 7, 9, 8, 1, 9, 10
Program 0:
t1 = nondet_0 ? tmp : maxId;
I = nondet_0 s<= 0x9;

Fastest checker: explicit
Fails for (1, 0, 8, 11, 10, 10)

[]
Fastest checker: genetic
Evars: 7, 11, 8, 9, 13, 13
Program 0:
t1 = tmp < 0xb;
t2 = maxId + nondet_2;
I = nondet_1 == 0xb;

Fastest checker: explicit
Fails for (1, 11, 8, 11, 10, 10)

[]
Fastest checker: genetic
Evars: 7, 15, 12, 1, 12, 12
Program 0:
I = 0xc == maxId;

Fastest checker: explicit
Fails for (1, 0, 0, 11, 12, 10)

[]
Fastest checker: genetic
Evars: 6, 14, 0, 9, 13, 7
Program 0:
t1 = 0x6 * tmp;
I = 0x6 s< tmp;

Fastest checker: cbmc
Fails for (1, 0, 0, 2, 3, 7)

[]
Fastest checker: genetic
Evars: 10, 5, 0, 7, 15, 3
Program 0:
t1 = maxId ^ 0xa;
t2 = tmp < 0xa;
t3 = nondet_0 & id;
I = 0xa == nondet_2;

Fastest checker: explicit
Fails for (10, 0, 0, 0, 4, 7)

[]
Fastest checker: genetic
Evars: 5, 8, 13, 9, 15, 13
Program 0:
t1 = nondet_0 << nondet_0;
t2 = nondet_2 * nondet_0;
t3 = nondet_2 >>> 0x8;
I = t2 < nondet_0;

Fastest checker: explicit
Fails for (8, 0, 2, 0, 4, 7)

[]
Fastest checker: genetic
Evars: 7, 3, 2, 7, 15, 8
Program 0:
I = 0xf == maxId;

Fastest checker: explicit
Fails for (1, 0, 0, 0, 15, 7)

[]
Fastest checker: genetic
Evars: 2, 13, 10, 6, 8, 8
Program 0:
t1 = id >>> tmp;
t2 = nondet_0 s< nondet_0;
t3 = t2 & tmp;
I = 0xa == nondet_0;

Fastest checker: explicit
Fails for (1, 0, 10, 0, 15, 7)

[]
Fastest checker: genetic
Evars: 11, 2, 10, 3, 7, 6
Program 0:
t1 = nondet_0 ^ nondet_0;
I = 0xb == nondet_2;

Fastest checker: explicit
Fails for (11, 0, 10, 0, 15, 7)

[]
Fastest checker: genetic
Evars: 14, 5, 1, 3, 13, 11
Program 0:
t1 = nondet_2 <= id;
t2 = id s< t1;
t3 = t2 + nondet_0;
t4 = ~nondet_2;
t5 = id != maxId;
I = t5 == t4;

Fastest checker: explicit
Fails for (14, 0, 10, 0, 15, 7)

[]
Fastest checker: genetic
Evars: 3, 6, 13, 2, 7, 6
Program 0:
t1 = tmp ? 0xd : nondet_2;
I = nondet_0 == 0xd;

Fastest checker: explicit
Fails for (1, 0, 13, 0, 15, 7)

[]
Fastest checker: genetic
Evars: 14, 3, 6, 3, 12, 15
Program 0:
t1 = nondet_0 ==> 0x3;
I = 0x3 == id;

Fastest checker: cbmc
Fails for (1, 0, 0, 3, 3, 2)

[]
Fastest checker: genetic
Evars: 12, 7, 1, 5, 8, 14
Program 0:
t1 = nondet_0 - 0xe;
t2 = nondet_2 + 0xe;
I = tmp == 0xe;

Fastest checker: cbmc
Fails for (2, 0, 4, 7, 2, 14)

[]
Fastest checker: genetic
Evars: 9, 13, 7, 1, 12, 6
Program 0:
t1 = maxId + 0xa;
I = tmp == t1;

Fastest checker: explicit
Fails for (1, 0, 0, 0, 4, 14)

[]
Fastest checker: genetic
Evars: 6, 9, 10, 3, 7, 6
Program 0:
t1 = 0x6 * tmp;
t2 = nondet_2 == 0x6;
t3 = maxId << tmp;
I = min(nondet_1, t2);

Fastest checker: explicit
Fails for (6, 1, 0, 15, 4, 14)

[]
Fastest checker: genetic
Evars: 8, 2, 14, 7, 15, 6
Program 0:
I = 0x7 s<= id;

Fastest checker: cbmc
Fails for (1, 0, 0, 7, 6, 6)

[]
Fastest checker: genetic
Evars: 6, 13, 10, 1, 7, 4
Program 0:
t1 = min(nondet_0, maxId);
t2 = ~nondet_2;
I = 0x4 == tmp;

Fastest checker: cbmc
Fails for (1, 0, 1, 5, 5, 4)

[]
Fastest checker: genetic
Evars: 9, 0, 6, 3, 7, 6
Program 0:
t1 = maxId & id;
I = 0x9 == nondet_2;

Fastest checker: explicit
Fails for (9, 0, 1, 5, 5, 4)

[]
Fastest checker: genetic
Evars: 9, 2, 10, 3, 7, 6
Program 0:
t1 = 0x9 * tmp;
t2 = nondet_2 == 0x9;
t3 = maxId << tmp;
I = min(nondet_1, t2);

Fastest checker: explicit
Fails for (9, 1, 1, 5, 5, 4)

[]
Fastest checker: genetic
Evars: 15, 8, 7, 9, 15, 7
Program 0:
I = nondet_0 == 0x7;

Fastest checker: explicit
Fails for (1, 0, 7, 5, 5, 4)

[]
Fastest checker: genetic
Evars: 7, 14, 11, 1, 14, 12
Program 0:
t1 = nondet_2 - maxId;
t2 = 0xb <= maxId;
I = t2 >> tmp;

Fastest checker: explicit
Fails for (1, 0, 0, 0, 11, 4)

[]
Fastest checker: genetic
Evars: 11, 3, 7, 3, 7, 6
Program 0:
t1 = nondet_2 == 0xb;
t2 = maxId << tmp;
I = min(nondet_1, t1);

Fastest checker: explicit
Fails for (11, 1, 0, 0, 11, 4)

[]
Fastest checker: genetic
Evars: 1, 7, 5, 1, 4, 12
Program 0:
t1 = nondet_0 + nondet_1;
I = tmp == 0xc;

Fastest checker: cbmc
Fails for (4, 0, 0, 5, 4, 12)

[]
Fastest checker: genetic
Evars: 6, 1, 12, 4, 5, 11
Program 0:
t1 = nondet_0 + nondet_1;
I = tmp == 0xb;

Fastest checker: cbmc
Fails for (4, 0, 0, 2, 10, 11)

[]
Fastest checker: genetic
Evars: 5, 2, 8, 4, 9, 3
Program 0:
t1 = nondet_0 == 0x9;
t2 = 0x9 == maxId;
I = t2 >> id;

Fastest checker: explicit
Fails for (1, 0, 0, 0, 9, 12)

[]
Fastest checker: genetic
Evars: 1, 3, 2, 7, 15, 8
Program 0:
t1 = 0x3 - tmp;
t2 = min(nondet_0, tmp);
I = nondet_1 == 0x3;

Fastest checker: explicit
Fails for (1, 3, 0, 0, 9, 12)

[]
Fastest checker: genetic
Evars: 6, 14, 8, 8, 9, 7
Program 0:
t1 = maxId != nondet_0;
I = id == 0x8;

Fastest checker: cbmc
Fails for (8, 0, 5, 8, 7, 7)

[]
Fastest checker: genetic
Evars: 6, 15, 14, 12, 14, 13
Program 0:
t1 = id == id;
I = nondet_1 / 0xf;

Fastest checker: explicit
Fails for (1, 15, 5, 8, 7, 7)

[]
Fastest checker: genetic
Evars: 14, 3, 1, 7, 15, 6
Program 0:
t1 = nondet_2 == 0xe;
t2 = maxId << tmp;
I = min(nondet_1, t1);

Fastest checker: explicit
Fails for (14, 15, 5, 8, 7, 7)

[]
Fastest checker: genetic
Evars: 7, 1, 13, 1, 12, 2
Program 0:
t1 = 0x7 * tmp;
t2 = nondet_2 == 0x7;
t3 = maxId << tmp;
I = min(nondet_1, t2);

Fastest checker: explicit
Fails for (7, 1, 6, 8, 7, 7)

[]
Fastest checker: genetic
Evars: 8, 1, 13, 1, 12, 2
Program 0:
t1 = nondet_2 == 0x8;
t2 = maxId << tmp;
I = min(nondet_1, t1);

Fastest checker: explicit
Fails for (8, 1, 6, 8, 7, 7)

[]
Fastest checker: genetic
Evars: 4, 12, 4, 2, 13, 3
Program 0:
I = nondet_0 == 0x4;

Fastest checker: explicit
Fails for (1, 0, 4, 0, 8, 7)

[]
Fastest checker: genetic
Evars: 12, 0, 12, 1, 2, 15
Program 0:
t1 = id & tmp;
t2 = nondet_1 >> maxId;
t3 = max(t2, id);
t4 = nondet_1 + nondet_2;
I = nondet_0 == 0xc;

Fastest checker: explicit
Fails for (1, 0, 12, 0, 8, 7)

[]
Fastest checker: genetic
Evars: 5, 12, 4, 2, 13, 3
Program 0:
t1 = nondet_2 == 0x5;
t2 = 0x5 << tmp;
I = min(nondet_1, t1);

Fastest checker: explicit
Fails for (5, 1, 12, 0, 8, 7)

[]
Fastest checker: genetic
Evars: 6, 10, 7, 7, 14, 3
Program 0:
t1 = tmp & maxId;
t2 = id == 0xe;
t3 = -0xe;
I = 0xe == maxId;

Fastest checker: explicit
Fails for (1, 0, 0, 0, 14, 7)

[]
Fastest checker: genetic
Evars: 8, 2, 13, 1, 2, 2
Program 0:
t1 = nondet_1 ^ nondet_1;
t2 = 0x2 == tmp;
t3 = maxId + tmp;
I = nondet_1 * t2;

Fastest checker: cbmc
Fails for (1, 10, 0, 3, 3, 2)

[]
Fastest checker: genetic
Evars: 4, 12, 4, 2, 13, 3
Program 0:
t1 = nondet_2 == 0x4;
t2 = maxId << tmp;
I = min(t2, t1);

Fastest checker: explicit
Fails for (4, 10, 0, 3, 3, 2)

[]
Fastest checker: genetic
Evars: 8, 7, 15, 2, 7, 6
Program 0:
t1 = tmp ? 0xf : nondet_2;
I = nondet_0 == 0xf;

Fastest checker: explicit
Fails for (1, 0, 15, 3, 3, 2)

[]
Fastest checker: genetic
Evars: 6, 2, 10, 3, 15, 6
Program 0:
t1 = nondet_2 == 0x6;
t2 = maxId << tmp;
I = min(t2, t1);

Fastest checker: explicit
Fails for (6, 0, 15, 3, 3, 2)

[]
Fastest checker: genetic
Evars: 15, 6, 8, 0, 9, 15
Program 0:
t1 = min(nondet_0, tmp);
I = nondet_1 == 0x6;

Fastest checker: explicit
Fails for (1, 6, 15, 3, 3, 2)

[]
Fastest checker: genetic
Evars: 15, 3, 14, 11, 15, 15
Program 0:
t1 = nondet_2 & nondet_1;
I = 0x3 == t1;

Fastest checker: explicit
Fails for (3, 7, 15, 3, 3, 2)

[]
Fastest checker: genetic
Evars: 6, 13, 3, 1, 7, 6
Program 0:
t1 = tmp - nondet_2;
t2 = tmp / nondet_2;
t3 = ~0x2;
t4 = maxId >>> tmp;
I = nondet_1 == t3;

Fastest checker: explicit
Fails for (1, 13, 15, 3, 3, 2)

[]
Fastest checker: genetic
Evars: 1, 14, 3, 6, 14, 8
Program 0:
t1 = maxId == nondet_1;
t2 = min(id, nondet_2);
t3 = nondet_1 << maxId;
I = min(t1, maxId);

Fastest checker: explicit
Fails for (1, 4, 0, 3, 4, 2)

[]
Fastest checker: genetic
Evars: 13, 9, 3, 9, 14, 3
Program 0:
t1 = tmp | 0x3;
t2 = tmp ^ nondet_2;
t3 = maxId >> id;
I = 0x3 == tmp;

Fastest checker: explicit
Fails for (1, 0, 0, 0, 0, 3)

[]
Fastest checker: genetic
Evars: 4, 4, 3, 1, 14, 6
Program 0:
I = nondet_0 == 0x3;

Fastest checker: explicit
Fails for (1, 0, 3, 0, 0, 3)

[]
Fastest checker: genetic
Evars: 10, 12, 3, 2, 15, 6
Program 0:
t1 = nondet_0 <= maxId;
t2 = min(nondet_1, nondet_1);
t3 = 0xc - tmp;
t4 = nondet_2 ? 0xc : nondet_0;
t5 = maxId * tmp;
I = nondet_1 == t4;

Fastest checker: explicit
Fails for (1, 12, 3, 0, 0, 3)

[]
Fastest checker: genetic
Evars: 10, 2, 10, 3, 10, 8
Program 0:
t1 = nondet_2 == 0xa;
t2 = maxId << tmp;
I = min(nondet_1, t1);

Fastest checker: explicit
Fails for (10, 12, 3, 0, 0, 3)

[]
Fastest checker: genetic
Evars: 13, 6, 9, 12, 14, 1
Program 0:
t1 = -nondet_1;
I = 0xc == id;

Fastest checker: cbmc
Fails for (4, 14, 0, 12, 11, 11)

[]
Fastest checker: genetic
Evars: 7, 6, 15, 4, 12, 3
Program 0:
t1 = nondet_2 + maxId;
t2 = nondet_1 s< nondet_2;
t3 = nondet_0 != tmp;
I = 0x4 == id;

Fastest checker: cbmc
Fails for (2, 3, 0, 4, 7, 3)

[]
Fastest checker: genetic
Evars: 13, 11, 13, 4, 13, 8
Program 0:
t1 = nondet_2 == nondet_0;
t2 = maxId s<= tmp;
I = nondet_1 & t1;

Fastest checker: explicit
Fails for (1, 1, 1, 4, 7, 3)

[]
Fastest checker: genetic
Evars: 11, 9, 6, 1, 12, 2
Program 0:
t1 = nondet_2 | tmp;
t2 = nondet_0 | id;
t3 = nondet_2 ? 0x9 : nondet_0;
t4 = maxId ? tmp : nondet_0;
I = nondet_1 == t3;

Fastest checker: explicit
Fails for (1, 9, 1, 4, 7, 3)

[]
Fastest checker: genetic
Evars: 10, 1, 11, 5, 10, 8
Program 0:
t1 = nondet_2 >>> tmp;
t2 = max(maxId, tmp);
I = 0xa == t1;

Fastest checker: explicit
Fails for (10, 0, 0, 0, 0, 4)

[]
Fastest checker: genetic
Evars: 10, 1, 11, 5, 10, 6
Program 0:
t1 = nondet_2 == 0xa;
t2 = maxId << tmp;
I = min(t2, t1);

Fastest checker: explicit
Fails for (10, 0, 0, 0, 1, 4)

[]
Fastest checker: genetic
Evars: 2, 15, 9, 10, 13, 9
Program 0:
t1 = tmp >> tmp;
t2 = nondet_2 >>> maxId;
I = tmp == 0x9;

Fastest checker: cbmc
Fails for (2, 0, 0, 0, 8, 9)

[]
Fastest checker: genetic
Evars: 4, 3, 8, 8, 10, 1
Program 0:
t1 = -nondet_0;
t2 = t1 == id;
t3 = maxId << maxId;
I = min(t2, nondet_0);

Fastest checker: explicit
Fails for (1, 0, 6, 10, 9, 9)

[]
Fastest checker: genetic
Evars: 14, 14, 9, 3, 13, 0
Program 0:
I = nondet_0 == 0x9;

Fastest checker: explicit
Fails for (1, 0, 9, 10, 9, 9)

[]







Timeout
Perf counters:
{'genetic': 92, 'cbmc': 15, 'explicit': 77, 'timeout': 1, 'iterations': 93}
Perf timers:
verify: 39.39s
checker: 119.71s
gcc: 0.44s
_: 120.00s
synth: 80.55s
