Using seed: 1337
[]
Fastest checker: genetic
Program 0:
I = nondet_1 - x;
Program 1:
t1 = 0x5 == x;
t2 = x - y;
I = x - x;

Fastest checker: explicit
Fails for (5, 4, 5, 5)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_1 + x;
I = y + y;
Program 1:
t1 = -x;
t2 = -nondet_1;
I = y % y;

Fastest checker: explicit
Fails for (0, 0, 0, 0)

[]
Fastest checker: genetic
Program 0:
I = x ==> 0x2;
Program 1:
I = x ? 0x7 : nondet_1;

Fastest checker: explicit
Fails for (1, 0, 1, 1)

[]
Fastest checker: genetic
Program 0:
t1 = y ? 0x2 : y;
t2 = y ? y : 0x2;
I = t1 + 0x2;
Program 1:
t1 = -nondet_0;
t2 = x + 0x2;
I = -y;

Fastest checker: explicit
Fails for (0, 0, 1, 2)

[]
Fastest checker: genetic
Program 0:
I = nondet_0 s<= nondet_0;
Program 1:
t1 = max(nondet_0, 0x4);
t2 = x != nondet_0;
I = y * x;

Fastest checker: explicit
Fails for (2, 0, 1, 2)

[]
Fastest checker: genetic
Program 0:
t1 = x >>> y;
t2 = nondet_1 + nondet_1;
t3 = 0x5 s<= x;
I = x | 0x5;
Program 1:
t1 = nondet_0 s<= 0x0;
t2 = min(nondet_0, x);
I = y + t1;

Fastest checker: explicit
Fails for (0, 1, 2, 2)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_0 s< y;
I = x + 0x5;
Program 1:
t1 = ~nondet_0;
t2 = min(x, x);
t3 = y s<= nondet_1;
t4 = 0x0 + y;
I = nondet_1 + t1;

Fastest checker: explicit
Fails for (0, 0, 3, 2)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_1 | x;
t2 = t1 >>> 0x1;
I = 0x1 + nondet_0;
Program 1:
t1 = min(y, x);
I = y >>> nondet_0;

Fastest checker: explicit
Fails for (0, 1, 3, 2)

[]
Fastest checker: genetic
Program 0:
t1 = x s< nondet_1;
t2 = x ^ x;
t3 = nondet_1 == nondet_0;
I = nondet_0 s<= nondet_0;
Program 1:
t1 = nondet_0 >>> x;
t2 = x + nondet_1;
I = y + y;

Fastest checker: explicit
Fails for (5, 1, 3, 2)

[]
Fastest checker: genetic
Program 0:
I = 0x5 >>> x;
Program 1:
t1 = nondet_1 >> y;
t2 = 0x5 & x;
I = y + x;

Fastest checker: explicit
Fails for (3, 0, 1, 3)

[]
Fastest checker: genetic
Program 0:
t1 = ~y;
I = 0x7 + 0x7;
Program 1:
t1 = 0x0 s< 0x0;
t2 = x + 0x0;
t3 = t1 + t1;
t4 = t3 | y;
I = 0x0 + y;

Fastest checker: explicit
Correct for wordlen=3
Fastest checker: cbmc
Also correct for wordlen=32!







Finished in 2.86s

Program 0:
t1 = ~y;
I = 0x7 + 0x7;
Program 1:
t1 = 0x0 s< 0x0;
t2 = x + 0x0;
t3 = t1 + t1;
t4 = t3 | y;
I = 0x0 + y;


Perf counters:
{'genetic': 11, 'cbmc': 1, 'explicit': 11, 'iterations': 11}
Perf timers:
verify: 2.33s
checker: 2.83s
gcc: 0.65s
_: 2.86s
synth: 0.52s
