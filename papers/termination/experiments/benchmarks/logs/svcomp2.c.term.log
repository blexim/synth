Using seed: 1337
[]
Fastest checker: genetic
Program 0:
I = -tmp;
Program 1:
t1 = tmp == a;
I = tmp << tmp;

Fastest checker: explicit
Fails for (2, 9, 12)

[]
Fastest checker: genetic
Program 0:
I = count - tmp;
Program 1:
t1 = a == tmp;
t2 = a - a;
I = a - 0x5;

Fastest checker: explicit
Fails for (5, 9, 12)

[]
Fastest checker: genetic
Program 0:
I = a ==> a;
Program 1:
I = 0xf ? tmp : count;

Fastest checker: explicit
Fails for (2, 0, 13)

[]
Fastest checker: genetic
Program 0:
I = max(a, a);
Program 1:
t1 = max(tmp, tmp);
t2 = count < a;
I = t1 | a;

Fastest checker: explicit
Fails for (3, 0, 13)

[]
Fastest checker: genetic
Program 0:
t1 = count != count;
I = count + a;
Program 1:
t1 = a >>> count;
t2 = 0xf | 0xf;
I = -count;

Fastest checker: explicit
Fails for (4, 0, 13)

[]
Fastest checker: genetic
Program 0:
t1 = a ^ a;
t2 = a >> 0x6;
I = max(tmp, 0x6);
Program 1:
t1 = 0xb >>> a;
t2 = a + count;
I = t1 <= a;

Fastest checker: explicit
Fails for (6, 0, 10)

[]
Fastest checker: genetic
Program 0:
t1 = count * a;
I = max(tmp, a);
Program 1:
I = a >> count;

Fastest checker: explicit
Fails for (2, 1, 10)

[]
Fastest checker: genetic
Program 0:
t1 = tmp & count;
I = ~a;
Program 1:
t1 = count == a;
t2 = count ? t1 : 0x9;
I = max(t2, a);

Fastest checker: explicit
Fails for (15, 1, 10)

[]
Fastest checker: genetic
Program 0:
I = count == count;
Program 1:
t1 = 0x7 >> tmp;
t2 = count + a;
I = 0x7 ^ count;

Fastest checker: explicit
Fails for (2, 0, 7)

[]
Fastest checker: genetic
Program 0:
I = a << 0x8;
Program 1:
I = count ? a : count;

Fastest checker: explicit
Fails for (0, 1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = a ==> a;
t2 = -tmp;
I = count | t1;
Program 1:
t1 = count >>> a;
I = -count;

Fastest checker: explicit
Fails for (2, 0, 0)

[]
Fastest checker: genetic
Program 0:
I = -0xb;
Program 1:
t1 = -a;
t2 = 0x0 | a;
I = t2 s<= a;

Fastest checker: explicit
Correct for wordlen=4
Fastest checker: cbmc
Also correct for wordlen=32!







Finished in 3.11s

Program 0:
I = -0xb;
Program 1:
t1 = -a;
t2 = 0x0 | a;
I = t2 s<= a;


Perf counters:
{'genetic': 12, 'cbmc': 1, 'explicit': 12, 'iterations': 12}
Perf timers:
verify: 2.37s
checker: 3.06s
gcc: 0.66s
_: 3.11s
synth: 0.74s
