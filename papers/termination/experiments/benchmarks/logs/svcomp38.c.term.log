Using seed: 1337
[]
Fastest checker: genetic
Program 0:
I = 0x5 >>> n;
Program 1:
t1 = m s<= nondet_0;
t2 = min(z, y);
I = 0x0 s<= 0x0;

Fastest checker: explicit
Fails for (0, 10, 5, 9, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = y ? m : nondet_0;
I = n >>> nondet_0;
Program 1:
I = y < n;

Fastest checker: explicit
Fails for (0, 11, 5, 9, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_0 / x;
I = max(z, y);
Program 1:
t1 = z s< n;
I = nondet_0 == z;

Fastest checker: explicit
Fails for (14, 11, 5, 9, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = max(z, nondet_0);
t2 = min(t1, x);
I = z * z;
Program 1:
I = m - y;

Fastest checker: explicit
Fails for (0, 13, 5, 9, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = max(z, n);
t2 = ~n;
I = x - 0x0;
Program 1:
t1 = m - y;
I = t1 == x;

Fastest checker: explicit
Fails for (0, 14, 5, 9, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = m >>> 0x2;
t2 = nondet_0 / n;
I = n >> 0x2;
Program 1:
t1 = y + n;
t2 = x == m;
I = z ^ 0x6;

Fastest checker: explicit
Fails for (0, 0, 6, 9, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = m / m;
t2 = nondet_0 * 0xc;
I = m ? x : t2;
Program 1:
t1 = z ? y : z;
t2 = t1 * m;
I = t1 <= x;

Fastest checker: explicit
Fails for (0, 1, 6, 9, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = n s<= x;
t2 = x <= x;
I = x & t1;
Program 1:
t1 = x ^ z;
t2 = z >> y;
I = m | n;

Fastest checker: explicit
Fails for (0, 3, 6, 9, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = y >>> x;
t2 = 0xc + n;
I = x | x;
Program 1:
t1 = n / 0x5;
t2 = x + nondet_0;
t3 = nondet_0 - y;
t4 = x == x;
t5 = 0x5 + 0x5;
I = z + 0x5;

Fastest checker: explicit
Fails for (0, 15, 6, 9, 2, 13)

[]
Fastest checker: genetic
Program 0:
I = nondet_0 + x;
Program 1:
I = y + 0x9;

Fastest checker: explicit
Fails for (15, 15, 6, 9, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_0 ^ 0x1;
I = n ==> x;
Program 1:
t1 = x | x;
t2 = y | nondet_0;
t3 = t1 | nondet_0;
t4 = x + nondet_0;
I = y + 0x9;

Fastest checker: explicit
Fails for (0, 1, 7, 9, 2, 13)

[]
Fastest checker: genetic
Program 0:
I = min(x, x);
Program 1:
I = z * 0x7;

Fastest checker: explicit
Fails for (0, 1, 0, 10, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = m ==> m;
I = nondet_0 - x;
Program 1:
t1 = nondet_0 & 0x9;
I = y ^ 0x9;

Fastest checker: explicit
Fails for (1, 1, 0, 10, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = m & m;
t2 = nondet_0 ^ t1;
t3 = m <= x;
I = n ==> x;
Program 1:
t1 = max(0x9, m);
I = y ^ 0x9;

Fastest checker: explicit
Fails for (0, 2, 0, 10, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = n % 0x1;
t2 = 0x1 * z;
t3 = x <= y;
I = x << 0x1;
Program 1:
t1 = ~y;
t2 = m ? m : 0x4;
I = y % x;

Fastest checker: explicit
Fails for (0, 9, 9, 10, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_0 ==> m;
t2 = x * x;
t3 = t2 ==> t2;
I = x % 0x9;
Program 1:
t1 = m + z;
t2 = ~m;
I = y % x;

Fastest checker: explicit
Fails for (0, 10, 10, 10, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = y & y;
I = x >> 0x4;
Program 1:
t1 = x >> 0x1;
t2 = z ^ t1;
I = t2 < 0x1;

Fastest checker: explicit
Fails for (0, 7, 11, 10, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = n < x;
t2 = n * n;
I = t1 ? x : nondet_0;
Program 1:
t1 = y - x;
I = 0x7 s<= t1;

Fastest checker: explicit
Fails for (1, 7, 11, 10, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = m * y;
t2 = n <= x;
t3 = 0x4 <= nondet_0;
I = t2 != nondet_0;
Program 1:
I = y - nondet_0;

Fastest checker: explicit
Fails for (3, 7, 11, 10, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_0 ==> n;
t2 = ~y;
I = x % m;
Program 1:
t1 = m * 0x2;
t2 = m + z;
t3 = m | y;
t4 = z | x;
t5 = m * z;
I = t5 * t4;

Fastest checker: explicit
Fails for (0, 1, 0, 11, 2, 13)

[]
Fastest checker: genetic
Program 0:
I = x & n;
Program 1:
t1 = x >> 0xd;
t2 = ~x;
I = t1 ^ z;

Fastest checker: explicit
Fails for (0, 1, 0, 0, 3, 13)

[]
Fastest checker: genetic
Program 0:
t1 = x + n;
t2 = m ==> y;
I = x % 0xd;
Program 1:
t1 = z % x;
t2 = m + z;
I = t2 >> t1;

Fastest checker: explicit
Fails for (0, 4, 0, 0, 3, 13)

[]







Timeout
Perf counters:
{'genetic': 22, 'explicit': 22, 'timeout': 1, 'iterations': 23}
Perf timers:
verify: 0.32s
checker: 119.70s
gcc: 0.44s
_: 120.00s
synth: 119.42s
