Using seed: 1337
[]
Fastest checker: genetic
Evars: 11, 13, 4, 10, 10, 6
Program 0:
t1 = 0xc >>> y
t2 = b * 0xc
I = x MIN nondet_0

Fastest checker: explicit
Fails for (0, 1, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 15, 1, 4, 4, 7, 15
Program 0:
t1 = 0x2 >>> 0x2
t2 = y = nondet_1
t3 = 0x2 >> nondet_0
t4 = ITE(b, nondet_1, t2)
I = nondet_1 >>> t4

Fastest checker: explicit
Fails for (2, 0, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 10, 6, 12, 14, 8, 0
Program 0:
t1 = nondet_1 % x
t2 = x s< x
t3 = nondet_0 <= 0x4
t4 = ITE(b, nondet_0, x)
I = b * b

Fastest checker: explicit
Fails for (0, 0, 0, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 3, 6, 7, 2, 8, 11
Program 0:
t1 = nondet_0 ==> nondet_0
t2 = 0x2 ==> t1
t3 = 0x2 * y
t4 = b + b
I = t3 & nondet_0

Fastest checker: explicit
Fails for (0, 2, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 2, 0, 8, 5, 13, 2
Program 0:
I = y ==> a

Fastest checker: explicit
Fails for (0, 0, 1, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 9, 3, 11, 12, 0, 5
Program 0:
t1 = ~y
t2 = x ^ nondet_0
t3 = t2 <= t1
I = nondet_1 >> 0x2

Fastest checker: explicit
Fails for (4, 0, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 9, 10, 8, 3, 2, 4
Program 0:
I = 0x3 < a

Fastest checker: explicit
Fails for (0, 0, 4, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 0, 5, 2, 10, 13, 5
Program 0:
t1 = b MAX 0x9
t2 = 0x9 - t1
t3 = nondet_0 != y
t4 = b < a
I = b * a

Fastest checker: explicit
Fails for (0, 0, 1, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 1, 4, 13, 6, 2, 5
Program 0:
t1 = 0x5 < 0x5
t2 = y = x
t3 = 0x5 / x
I = t3 s<= nondet_1

Fastest checker: explicit
Fails for (5, 0, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 11, 6, 15, 7, 2, 8
Program 0:
t1 = a MIN x
I = nondet_1 MIN t1

Fastest checker: explicit
Fails for (1, 0, 1, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 3, 2, 15, 6, 7, 1
Program 0:
t1 = a MAX nondet_0
t2 = 0x5 * x
t3 = y ==> nondet_1
t4 = nondet_1 != t3
I = 0x5 < a

Fastest checker: explicit
Fails for (0, 0, 6, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 15, 14, 11, 4, 10, 9
Program 0:
t1 = x | 0x9
t2 = 0x9 MAX t1
t3 = ITE(t1, t2, nondet_0)
I = nondet_1 * b

Fastest checker: explicit
Fails for (1, 0, 0, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 14, 6, 4, 9, 10, 14
Program 0:
t1 = a s<= b
I = y >> x

Fastest checker: explicit
Fails for (0, 0, 0, 0, 4, 1)

[]
Fastest checker: genetic
Evars: 10, 15, 7, 1, 15, 2
Program 0:
t1 = x >> 0x1
t2 = nondet_0 <= y
t3 = nondet_0 | b
t4 = 0x1 != b
I = nondet_1 & t1

Fastest checker: explicit
Fails for (1, 0, 0, 0, 2, 1)

[]
Fastest checker: genetic
Evars: 15, 8, 5, 13, 4, 10
Program 0:
t1 = nondet_1 = x
t2 = a ==> nondet_0
t3 = a >>> a
I = b >>> b

Fastest checker: explicit
Fails for (0, 0, 0, 4, 1, 1)

[]
Fastest checker: genetic
Evars: 4, 1, 15, 7, 13, 10
Program 0:
I = a * nondet_0

Fastest checker: explicit
Fails for (0, 1, 1, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 14, 14, 14, 5, 12, 15
Program 0:
t1 = a ==> y
t2 = x MAX nondet_0
t3 = nondet_1 | t2
t4 = x ^ 0x0
I = x s< y

Fastest checker: explicit
Fails for (0, 0, 0, 0, 8, 1)

[]
Fastest checker: genetic
Evars: 12, 8, 14, 15, 15, 9
Program 0:
t1 = y & nondet_1
I = 0xf + y

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 2)

[]
Fastest checker: genetic
Evars: 10, 1, 14, 12, 2, 13
Program 0:
t1 = a < nondet_0
t2 = x = nondet_0
t3 = x >>> t2
I = 0x8 <= y

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 8)

[]
Fastest checker: genetic
Evars: 9, 13, 5, 8, 8, 15
Program 0:
t1 = y s<= y
t2 = a <= a
I = b % x

Fastest checker: explicit
Fails for (0, 0, 0, 1, 2, 1)

[]
Fastest checker: genetic
Evars: 1, 11, 5, 9, 4, 2
Program 0:
t1 = nondet_1 + nondet_1
I = a % y

Fastest checker: explicit
Fails for (0, 0, 1, 0, 1, 2)

[]
Fastest checker: genetic
Evars: 3, 8, 15, 14, 1, 10
Program 0:
t1 = x s<= y
t2 = x <= y
I = nondet_0 % y

Fastest checker: explicit
Fails for (0, 1, 0, 0, 1, 2)

[]
Fastest checker: genetic
Evars: 4, 6, 2, 5, 6, 2
Program 0:
t1 = b MIN 0x5
I = 0x5 <= b

Fastest checker: explicit
Fails for (0, 0, 0, 5, 1, 1)

[]
Fastest checker: genetic
Evars: 13, 10, 7, 6, 1, 6
Program 0:
t1 = -x
t2 = y = x
t3 = b ^ a
I = nondet_0 / t1

Fastest checker: explicit
Fails for (0, 15, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 15, 0, 15, 5, 2, 11
Program 0:
t1 = 0x3 ==> a
t2 = nondet_1 < b
t3 = y >>> 0x3
I = a s< t3

Fastest checker: explicit
Fails for (0, 0, 8, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 4, 7, 14, 7, 7, 9
Program 0:
t1 = x != y
I = nondet_0 MIN b

Fastest checker: explicit
Fails for (0, 1, 0, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 12, 6, 14, 14, 8, 11
Program 0:
I = 0xa <= x

Fastest checker: explicit
Fails for (0, 0, 0, 0, 10, 1)

[]
Fastest checker: genetic
Evars: 4, 12, 2, 9, 4, 2
Program 0:
t1 = ITE(b, nondet_0, b)
t2 = t1 s<= b
t3 = nondet_0 >> nondet_0
t4 = nondet_1 < t1
I = a * t1

Fastest checker: explicit
Fails for (0, 1, 1, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 12, 15, 10, 4, 11, 6
Program 0:
t1 = y s<= a
t2 = a s<= 0x6
t3 = b % y
I = 0x6 % y

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 4)

[]
Fastest checker: genetic
Evars: 7, 6, 15, 1, 9, 10
Program 0:
t1 = a <= b
t2 = 0x0 >> 0x0
t3 = a * nondet_0
I = t3 >>> x

Fastest checker: explicit
Fails for (0, 2, 1, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 6, 8, 14, 12, 8, 15
Program 0:
t1 = 0xd * 0xd
I = b >>> 0xd

Fastest checker: explicit
Fails for (0, 0, 0, 8, 1, 1)

[]
Fastest checker: genetic
Evars: 4, 8, 8, 14, 13, 4
Program 0:
t1 = nondet_1 >> x
t2 = -t1
I = b & t1

Fastest checker: explicit
Fails for (2, 0, 0, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 1, 1, 11, 13, 5, 13
Program 0:
I = nondet_1 MIN nondet_0

Fastest checker: explicit
Fails for (1, 1, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 10, 11, 7, 2, 2, 0
Program 0:
t1 = ~nondet_0
t2 = x s<= 0x5
I = nondet_1 >>> t1

Fastest checker: explicit
Fails for (8, 0, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 7, 8, 1, 3, 1, 2
Program 0:
t1 = ITE(a, nondet_1, b)
t2 = a & t1
t3 = ITE(b, 0xe, b)
t4 = x < y
I = t2 * t3

Fastest checker: explicit
Fails for (1, 0, 1, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 8, 15, 5, 1, 8, 2
Program 0:
t1 = y - 0x5
t2 = x s<= t1
t3 = y ==> b
I = a = 0x5

Fastest checker: explicit
Fails for (0, 0, 5, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 2, 13, 15, 14, 2, 5
Program 0:
t1 = 0xc <= nondet_0
t2 = nondet_0 = 0xc
t3 = y - 0xc
I = t3 < y

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 12)

[]
Fastest checker: genetic
Evars: 7, 9, 1, 11, 4, 12
Program 0:
I = nondet_0 s< 0xd

Fastest checker: explicit
Fails for (0, 8, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 6, 6, 5, 4, 6, 9
Program 0:
I = nondet_1 % y

Fastest checker: explicit
Fails for (1, 0, 0, 0, 1, 2)

[]
Fastest checker: genetic
Evars: 2, 5, 7, 12, 11, 3
Program 0:
t1 = x << b
t2 = a ^ nondet_1
t3 = nondet_0 >>> y
I = y / 0x5

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 5)

[]
Fastest checker: genetic
Evars: 11, 14, 15, 11, 6, 9
Program 0:
I = x = 0xf

Fastest checker: explicit
Fails for (0, 0, 0, 0, 15, 1)

[]
Fastest checker: genetic
Evars: 12, 10, 9, 10, 6, 4
Program 0:
t1 = x >>> x
t2 = t1 / x
t3 = y != x
I = 0x9 <= nondet_1

Fastest checker: explicit
Fails for (9, 0, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 3, 14, 9, 10, 5, 12
Program 0:
t1 = nondet_1 ==> 0xb
I = nondet_0 % x

Fastest checker: explicit
Fails for (0, 1, 0, 0, 2, 1)

[]
Fastest checker: genetic
Evars: 13, 0, 1, 10, 15, 11
Program 0:
t1 = x s< nondet_0
t2 = 0x8 + b
t3 = 0x8 MAX t2
I = nondet_1 s< t2

Fastest checker: explicit
Fails for (8, 0, 0, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 5, 14, 13, 15, 2, 10
Program 0:
t1 = y << a
t2 = x s< a
I = 0xf <= y

Fastest checker: cbmc
Fails for (5, 1, 0, 4, 1, 15)

[]
Fastest checker: genetic
Evars: 12, 5, 10, 4, 7, 15
Program 0:
t1 = y ^ x
t2 = nondet_0 != b
t3 = 0x9 - x
I = a / 0x9

Fastest checker: explicit
Fails for (0, 0, 9, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 11, 13, 4, 10, 10, 6
Program 0:
t1 = 0xc >>> y
t2 = b * 0xc
t3 = t2 + 0xc
t4 = nondet_0 + x
t5 = -y
I = y & t2

Fastest checker: explicit
Fails for (0, 0, 0, 1, 1, 4)

[]
Fastest checker: genetic
Evars: 11, 13, 4, 10, 10, 6
Program 0:
t1 = 0x2 >>> y
t2 = b * 0x2
t3 = x MIN nondet_0
t4 = b + nondet_0
t5 = t4 + x
t6 = a + t3
I = t3 >> 0x2

Fastest checker: explicit
Fails for (0, 4, 0, 0, 4, 1)

[]
Fastest checker: genetic
Evars: 11, 14, 1, 9, 10, 15
Program 0:
t1 = 0xc >>> y
t2 = nondet_1 + x
t3 = 0xc MAX y
t4 = 0xc MIN t2
t5 = nondet_1 - t4
I = t2 = t3

Fastest checker: explicit
Fails for (11, 0, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 11, 13, 4, 13, 3, 4
Program 0:
t1 = 0xc >>> y
t2 = b * 0xc
t3 = x MIN nondet_0
t4 = x + y
t5 = nondet_1 + y
t6 = y + 0xc
I = 0xc <= b

Fastest checker: explicit
Fails for (0, 0, 0, 12, 1, 1)

[]
Fastest checker: genetic
Evars: 12, 0, 8, 14, 10, 12
Program 0:
t1 = b + nondet_1
t2 = 0x6 + y
t3 = b >>> 0x6
I = a * t3

Fastest checker: explicit
Fails for (0, 0, 1, 4, 1, 1)

[]
Fastest checker: genetic
Evars: 12, 0, 8, 14, 10, 12
Program 0:
t1 = x ==> a
I = t1 % x

Fastest checker: explicit
Fails for (0, 0, 1, 0, 2, 1)

[]
Fastest checker: genetic
Evars: 12, 0, 8, 14, 10, 12
Program 0:
t1 = b + nondet_1
t2 = x + t1
I = t2 < x

Fastest checker: explicit
Fails for (15, 0, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 10, 13, 6, 6, 7, 10
Program 0:
t1 = nondet_1 << nondet_1
t2 = -0xc
t3 = -nondet_0
I = nondet_0 & t1

Fastest checker: explicit
Fails for (1, 2, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 2, 9, 1, 5, 4, 14
Program 0:
t1 = nondet_1 >>> nondet_1
t2 = x + y
t3 = 0x4 s< b
I = t3 MIN nondet_0

Fastest checker: explicit
Fails for (0, 1, 0, 5, 1, 1)

[]
Fastest checker: genetic
Evars: 1, 15, 12, 1, 10, 4
Program 0:
t1 = nondet_1 | nondet_1
t2 = x << b
t3 = a >> y
I = t3 % t2

Fastest checker: explicit
Fails for (0, 0, 2, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 0, 11, 11, 11, 8, 7
Program 0:
t1 = 0x3 < a
t2 = nondet_1 & x
I = t1 & b

Fastest checker: explicit
Fails for (0, 0, 4, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 9, 8, 7, 4, 5, 3
Program 0:
t1 = b >> x
t2 = a + y
t3 = x % y
t4 = nondet_0 % t2
I = t4 s< 0x0

Fastest checker: explicit
Fails for (0, 8, 8, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 12, 0, 8, 14, 15, 1
Program 0:
t1 = b + nondet_1
t2 = b + x
t3 = x >> x
I = t2 <= b

Fastest checker: explicit
Fails for (0, 0, 0, 15, 1, 1)

[]
Fastest checker: genetic
Evars: 13, 14, 9, 4, 0, 14
Program 0:
t1 = y MIN nondet_1
I = 0x2 s< y

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 3)

[]
Fastest checker: genetic
Evars: 13, 14, 9, 4, 0, 12
Program 0:
t1 = nondet_1 + y
t2 = nondet_1 >>> y
I = a * t2

Fastest checker: explicit
Fails for (2, 0, 1, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 13, 4, 14, 9, 11, 12
Program 0:
t1 = nondet_1 + y
t2 = a MAX b
t3 = t2 + 0x2
t4 = 0x2 + a
t5 = b | nondet_1
t6 = nondet_0 * a
I = t6 >>> nondet_0

Fastest checker: explicit
Fails for (0, 4, 1, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 0, 6, 13, 11, 0, 12
Program 0:
t1 = nondet_1 + y
t2 = a MAX b
t3 = t2 = 0x3
t4 = b & x
I = t4 >>> 0x3

Fastest checker: explicit
Fails for (0, 0, 0, 8, 8, 1)

[]
Fastest checker: genetic
Evars: 13, 10, 10, 11, 10, 11
Program 0:
t1 = nondet_0 MIN b
t2 = x + t1
t3 = b >> b
t4 = b << x
I = t1 >>> t2

Fastest checker: explicit
Fails for (0, 3, 0, 3, 1, 1)

[]
Fastest checker: genetic
Evars: 9, 1, 11, 1, 7, 14
Program 0:
t1 = x >> 0x7
t2 = 0x7 < a
t3 = t1 s<= b
I = t2 MIN t1

Fastest checker: explicit
Fails for (0, 0, 8, 0, 8, 1)

[]
Fastest checker: genetic
Evars: 13, 15, 6, 14, 10, 12
Program 0:
t1 = b & nondet_0
t2 = nondet_0 << nondet_0
I = nondet_1 MIN t1

Fastest checker: explicit
Fails for (1, 1, 0, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 5, 13, 9, 7, 8, 8
Program 0:
t1 = b = x
t2 = b ==> 0x8
t3 = t2 = 0x8
t4 = nondet_1 + nondet_1
t5 = nondet_0 + nondet_1
t6 = nondet_1 + y
t7 = b MIN nondet_1
t8 = -0x8
t9 = nondet_0 % x
I = nondet_1 MIN t9

Fastest checker: explicit
Fails for (1, 1, 0, 0, 2, 1)

[]
Fastest checker: genetic
Evars: 12, 0, 8, 14, 10, 12
Program 0:
t1 = b + nondet_1
t2 = 0x6 >>> nondet_1
t3 = t2 + 0x6
t4 = nondet_1 + y
I = nondet_1 = t3

Fastest checker: explicit
Fails for (12, 0, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 13, 14, 1, 7, 9, 3
Program 0:
t1 = b % x
t2 = y ^ 0xb
t3 = t2 < nondet_1
t4 = b >>> x
I = t3 & b

Fastest checker: explicit
Fails for (11, 0, 0, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 12, 8, 14, 15, 11, 8
Program 0:
t1 = nondet_1 >> nondet_0
t2 = -nondet_1
t3 = t2 | 0xb
I = t3 = y

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 11)

[]
Fastest checker: genetic
Evars: 3, 12, 14, 11, 3, 15
Program 0:
t1 = nondet_1 s< nondet_1
t2 = t1 MAX x
I = 0xc = nondet_0

Fastest checker: explicit
Fails for (0, 12, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 1, 1, 10, 9, 4, 0
Program 0:
t1 = a >> b
t2 = t1 s<= x
t3 = t1 s<= a
t4 = b | t3
I = nondet_1 % t4

Fastest checker: explicit
Fails for (1, 0, 0, 2, 1, 1)

[]
Fastest checker: genetic
Evars: 11, 15, 15, 1, 6, 2
Program 0:
I = 0xf = a

Fastest checker: explicit
Fails for (0, 0, 15, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 10, 15, 13, 12, 9, 10
Program 0:
t1 = nondet_1 < nondet_0
I = t1 >> y

Fastest checker: explicit
Fails for (0, 1, 0, 0, 1, 4)

[]
Fastest checker: genetic
Evars: 0, 6, 5, 15, 13, 13
Program 0:
t1 = a % y
t2 = b s< 0x7
I = b MIN t1

Fastest checker: explicit
Fails for (0, 0, 1, 1, 1, 2)

[]
Fastest checker: genetic
Evars: 2, 4, 2, 12, 12, 0
Program 0:
t1 = nondet_1 & a
t2 = 0x6 << nondet_0
t3 = y / y
I = nondet_0 MIN t1

Fastest checker: explicit
Fails for (1, 1, 1, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 7, 7, 4, 15, 4, 4
Program 0:
t1 = y >> x
t2 = a ==> a
t3 = ~0xe
t4 = nondet_1 | t3
I = 0xe < t1

Fastest checker: cbmc
Fails for (10, 1, 0, 14, 4, 15)

[]
Fastest checker: genetic
Evars: 12, 0, 8, 14, 10, 12
Program 0:
t1 = b + nondet_1
t2 = 0x6 >>> nondet_1
t3 = ITE(t1, t1, nondet_0)
I = t1 < nondet_1

Fastest checker: explicit
Fails for (15, 0, 0, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 12, 0, 13, 3, 15, 12
Program 0:
t1 = b + nondet_1
t2 = 0x6 + 0x6
t3 = nondet_1 MIN a
I = t2 <= t3

Fastest checker: explicit
Fails for (12, 0, 12, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 10, 15, 9, 15, 14, 13
Program 0:
t1 = y & x
I = t1 s<= 0xc

Fastest checker: explicit
Fails for (0, 0, 0, 0, 8, 8)

[]
Fastest checker: genetic
Evars: 1, 2, 12, 6, 10, 8
Program 0:
t1 = nondet_0 >>> nondet_1
t2 = y < a
t3 = a ==> b
t4 = nondet_1 s< t2
I = t2 & t1

Fastest checker: explicit
Fails for (0, 1, 2, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 9, 3, 7, 5, 0, 12
Program 0:
t1 = 0x7 + x
t2 = nondet_1 = x
t3 = 0x7 + t1
t4 = a % y
t5 = t1 * t4
I = t5 + t5

Fastest checker: explicit
Fails for (0, 0, 1, 0, 2, 2)

[]
Fastest checker: genetic
Evars: 9, 8, 7, 5, 6, 14
Program 0:
t1 = 0x7 + x
t2 = nondet_1 = x
t3 = 0x7 + t1
t4 = a % y
t5 = t1 * t4
I = t5 & nondet_0

Fastest checker: explicit
Fails for (0, 8, 1, 0, 1, 2)

[]
Fastest checker: genetic
Evars: 14, 8, 3, 5, 6, 14
Program 0:
t1 = 0x5 + x
t2 = nondet_1 = x
t3 = 0x5 + t1
t4 = a % y
t5 = t1 * t4
I = t5 & nondet_0

Fastest checker: explicit
Fails for (0, 2, 1, 0, 1, 2)

[]
Fastest checker: genetic
Evars: 14, 8, 3, 8, 6, 15
Program 0:
t1 = x >> nondet_0
t2 = nondet_1 | nondet_0
t3 = 0x5 + x
t4 = nondet_1 + x
t5 = y + 0x5
I = t3 = nondet_0

Fastest checker: explicit
Fails for (0, 6, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 8, 5, 3, 3, 4, 14
Program 0:
t1 = nondet_1 | y
t2 = x MAX b
I = 0x5 = nondet_0

Fastest checker: explicit
Fails for (0, 5, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 10, 2, 11, 6, 0, 7
Program 0:
t1 = ITE(y, a, nondet_1)
t2 = y MAX y
I = 0x6 = b

Fastest checker: explicit
Fails for (0, 0, 0, 6, 1, 1)

[]
Fastest checker: genetic
Evars: 10, 3, 6, 10, 8, 2
Program 0:
t1 = nondet_1 & b
t2 = ~nondet_1
t3 = nondet_0 MIN b
I = t3 >> t2

Fastest checker: explicit
Fails for (3, 1, 0, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 8, 12, 5, 3, 7, 12
Program 0:
t1 = nondet_0 * a
t2 = t1 = a
I = t1 % x

Fastest checker: explicit
Fails for (0, 1, 1, 0, 2, 1)

[]
Fastest checker: genetic
Evars: 12, 0, 8, 14, 10, 12
Program 0:
t1 = b + nondet_1
t2 = a MIN y
I = t2 >>> 0xb

Fastest checker: explicit
Fails for (0, 0, 8, 0, 1, 8)

[]
Fastest checker: genetic
Evars: 6, 11, 13, 5, 10, 9
Program 0:
t1 = 0x5 / 0x5
t2 = nondet_1 + nondet_1
t3 = nondet_0 ==> y
I = 0x5 s< nondet_1

Fastest checker: explicit
Fails for (6, 0, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 7, 13, 9, 7, 8, 8
Program 0:
t1 = ~b
I = 0x7 s<= b

Fastest checker: explicit
Fails for (0, 0, 0, 7, 1, 1)

[]
Fastest checker: genetic
Evars: 4, 8, 3, 5, 12, 5
Program 0:
t1 = x MIN nondet_1
I = t1 & 0x6

Fastest checker: explicit
Fails for (2, 0, 0, 0, 2, 1)

[]
Fastest checker: genetic
Evars: 4, 8, 3, 5, 12, 5
Program 0:
t1 = x MIN nondet_1
t2 = a & 0x6
I = nondet_1 * t2

Fastest checker: explicit
Fails for (1, 0, 2, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 12, 0, 8, 7, 4, 6
Program 0:
t1 = b + nondet_1
I = 0x6 s<= y

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 6)

[]
Fastest checker: genetic
Evars: 12, 7, 14, 12, 5, 10
Program 0:
t1 = nondet_1 < nondet_0
t2 = a & b
I = 0xc = t2

Fastest checker: explicit
Fails for (0, 0, 12, 12, 1, 1)

[]
Fastest checker: genetic
Evars: 5, 14, 5, 6, 5, 12
Program 0:
t1 = y s< 0xc
t2 = x >>> b
t3 = b MIN t2
t4 = t3 MIN a
I = t4 * nondet_0

Fastest checker: explicit
Fails for (0, 1, 1, 4, 1, 1)

[]
Fastest checker: genetic
Evars: 13, 1, 14, 12, 6, 0
Program 0:
I = 0xe = a

Fastest checker: explicit
Fails for (0, 0, 14, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 8, 0, 8, 14, 10, 12
Program 0:
t1 = y <= x
t2 = b + 0xe
t3 = b << t2
I = t3 = y

Fastest checker: explicit
Fails for (0, 0, 0, 2, 1, 2)

[]
Fastest checker: genetic
Evars: 0, 12, 8, 6, 3, 8
Program 0:
t1 = 0xe + a
I = y = t1

Fastest checker: explicit
Fails for (0, 0, 3, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 1, 5, 8, 7, 8, 14
Program 0:
t1 = -b
t2 = b >> 0x3
t3 = x s< t2
I = t3 & nondet_1

Fastest checker: explicit
Fails for (1, 0, 0, 0, 8, 1)

[]
Fastest checker: genetic
Evars: 12, 13, 12, 10, 14, 6
Program 0:
t1 = nondet_0 % y
t2 = nondet_0 * t1
t3 = b | b
t4 = a s< t2
I = a * t1

Fastest checker: explicit
Fails for (0, 1, 1, 0, 1, 2)

[]
Fastest checker: genetic
Evars: 4, 6, 8, 11, 10, 12
Program 0:
t1 = 0xb & y
t2 = nondet_1 + y
t3 = ~a
I = b = 0xb

Fastest checker: explicit
Fails for (0, 0, 0, 11, 1, 1)

[]
Fastest checker: genetic
Evars: 0, 1, 15, 15, 3, 13
Program 0:
t1 = x + x
t2 = y MAX 0x5
t3 = x + a
t4 = 0x5 >>> y
t5 = a MIN b
t6 = y * x
I = t6 % x

Fastest checker: explicit
Fails for (0, 0, 0, 0, 9, 2)

[]
Fastest checker: genetic
Evars: 12, 12, 4, 13, 2, 11
Program 0:
t1 = nondet_0 != nondet_0
t2 = a MIN b
t3 = ITE(t2, nondet_1, t2)
I = t3 >>> t2

Fastest checker: explicit
Fails for (2, 0, 1, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 8, 13, 2, 15, 13, 5
Program 0:
t1 = -nondet_0
t2 = y >>> nondet_1
t3 = b ==> a
t4 = 0xe < t2
I = a * t4

Fastest checker: explicit
Fails for (3, 0, 1, 0, 1, 8)

[]
Fastest checker: genetic
Evars: 2, 8, 9, 8, 14, 2
Program 0:
t1 = y >> b
t2 = nondet_0 + x
t3 = -y
t4 = b >>> a
t5 = nondet_1 ==> y
I = t3 < a

Fastest checker: explicit
Fails for (0, 0, 15, 0, 1, 2)

[]
Fastest checker: genetic
Evars: 5, 11, 6, 14, 5, 0
Program 0:
I = 0x6 s<= x

Fastest checker: explicit
Fails for (0, 0, 0, 0, 6, 1)

[]
Fastest checker: genetic
Evars: 5, 14, 8, 2, 11, 11
Program 0:
t1 = nondet_0 s< nondet_1
t2 = nondet_0 MAX x
t3 = b | nondet_1
t4 = 0x0 + nondet_1
t5 = t4 + nondet_0
I = t5 < nondet_0

Fastest checker: explicit
Fails for (15, 1, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 7, 9, 10, 11, 9, 13
Program 0:
t1 = b < nondet_0
t2 = nondet_1 >> a
t3 = nondet_0 + x
t4 = nondet_0 + t3
t5 = a MAX t3
I = 0x7 = nondet_1

Fastest checker: explicit
Fails for (7, 0, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 7, 5, 14, 15, 11, 9
Program 0:
t1 = x >> x
I = a * t1

Fastest checker: explicit
Fails for (0, 0, 1, 0, 4, 1)

[]
Fastest checker: genetic
Evars: 13, 8, 4, 10, 15, 13
Program 0:
t1 = b >>> nondet_1
t2 = ITE(nondet_0, b, y)
t3 = t1 MIN a
t4 = b + a
t5 = x + nondet_0
t6 = nondet_0 + b
t7 = y MIN nondet_0
I = t7 >> 0xf

Fastest checker: explicit
Fails for (0, 8, 0, 0, 1, 8)

[]
Fastest checker: genetic
Evars: 3, 11, 15, 14, 13, 13
Program 0:
t1 = 0x5 MAX 0x5
t2 = y / y
t3 = x <= a
t4 = t3 + nondet_0
t5 = b + a
t6 = x + 0x5
I = t3 >>> t6

Fastest checker: explicit
Fails for (0, 0, 3, 0, 3, 1)

[]
Fastest checker: genetic
Evars: 2, 7, 11, 4, 5, 13
Program 0:
t1 = nondet_0 * y
t2 = 0xb ==> a
I = 0xb = x

Fastest checker: explicit
Fails for (0, 0, 0, 0, 11, 1)

[]
Fastest checker: genetic
Evars: 14, 6, 7, 12, 9, 7
Program 0:
t1 = 0xd << nondet_1
t2 = y * nondet_1
t3 = a s<= t1
t4 = x + 0xd
I = t4 = t1

Fastest checker: explicit
Fails for (2, 0, 0, 0, 7, 1)

[]
Fastest checker: genetic
Evars: 10, 12, 13, 5, 12, 0
Program 0:
t1 = b | 0xc
t2 = x < t1
t3 = 0xc & y
I = t1 = x

Fastest checker: explicit
Fails for (0, 0, 0, 0, 12, 1)

[]
Fastest checker: genetic
Evars: 12, 0, 5, 7, 7, 12
Program 0:
t1 = b + nondet_1
t2 = b * y
I = 0x6 s< y

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 7)

[]
Fastest checker: genetic
Evars: 7, 7, 4, 9, 3, 8
Program 0:
t1 = a ==> nondet_1
t2 = y * nondet_0
t3 = 0xa s<= 0xa
t4 = nondet_1 >>> x
t5 = b >>> y
t6 = nondet_1 >>> nondet_0
I = t5 * t4

Fastest checker: explicit
Fails for (2, 0, 0, 2, 1, 1)

[]
Fastest checker: genetic
Evars: 4, 10, 10, 7, 4, 6
Program 0:
t1 = ITE(y, y, a)
t2 = ITE(nondet_1, b, x)
t3 = t2 ==> nondet_1
t4 = t3 % x
I = a MIN t4

Fastest checker: explicit
Fails for (1, 0, 1, 0, 2, 1)

[]
Fastest checker: genetic
Evars: 4, 7, 11, 13, 3, 1
Program 0:
t1 = ITE(y, y, a)
t2 = ITE(b, nondet_0, b)
I = t2 % x

Fastest checker: explicit
Fails for (0, 1, 0, 1, 2, 1)

[]
Fastest checker: genetic
Evars: 11, 0, 12, 4, 9, 15
Program 0:
t1 = x MIN nondet_1
t2 = y >>> 0xc
I = t1 s< 0xc

Fastest checker: explicit
Fails for (8, 0, 0, 0, 8, 1)

[]
Fastest checker: genetic
Evars: 11, 4, 15, 4, 9, 15
Program 0:
t1 = x MIN nondet_1
t2 = y >>> 0xc
t3 = t1 s< 0xc
I = t3 % t2

Fastest checker: explicit
Fails for (8, 0, 0, 0, 8, 2)

[]
Fastest checker: genetic
Evars: 11, 0, 12, 14, 10, 9
Program 0:
t1 = y MIN nondet_1
t2 = y >>> 0xc
I = t1 s< 0xc

Fastest checker: explicit
Fails for (8, 0, 0, 0, 1, 8)

[]
Fastest checker: genetic
Evars: 6, 8, 14, 12, 9, 15
Program 0:
t1 = -nondet_0
t2 = a & t1
t3 = t1 / y
t4 = nondet_1 s< 0xe
t5 = a >> t3
t6 = x + nondet_1
t7 = y + 0xe
t8 = t6 + 0xe
t9 = a + y
t10 = y + y
t11 = 0xe MIN t9
t12 = b >>> nondet_1
t13 = b s< nondet_1
I = b < t12

Fastest checker: explicit
Fails for (1, 0, 0, 8, 1, 1)

[]
Fastest checker: genetic
Evars: 11, 11, 14, 12, 5, 3
Program 0:
t1 = b MIN nondet_1
t2 = y >>> 0xe
I = t1 s< 0xe

Fastest checker: explicit
Fails for (8, 0, 0, 8, 1, 1)

[]
Fastest checker: genetic
Evars: 5, 8, 2, 14, 9, 13
Program 0:
t1 = 0xb >>> x
I = t1 = b

Fastest checker: explicit
Fails for (0, 0, 0, 13, 1, 1)

[]
Fastest checker: genetic
Evars: 5, 4, 3, 4, 2, 10
Program 0:
t1 = ITE(nondet_1, nondet_0, 0x3)
t2 = ITE(nondet_1, 0x3, nondet_1)
t3 = t2 - nondet_0
I = t1 >>> t1

Fastest checker: explicit
Fails for (1, 4, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 7, 3, 4, 6, 2, 1
Program 0:
t1 = 0x5 s< y
I = t1 % x

Fastest checker: explicit
Fails for (0, 0, 0, 0, 2, 6)

[]
Fastest checker: genetic
Evars: 5, 6, 2, 7, 9, 9
Program 0:
t1 = ~nondet_1
t2 = nondet_1 >>> x
t3 = a + a
t4 = a + x
t5 = y + nondet_0
t6 = 0x9 < nondet_1
t7 = ITE(b, nondet_1, b)
t8 = 0x9 + nondet_1
t9 = a MAX nondet_0
I = t7 % x

Fastest checker: explicit
Fails for (1, 0, 0, 1, 2, 1)

[]
Fastest checker: genetic
Evars: 13, 6, 5, 9, 9, 6
Program 0:
t1 = x + nondet_0
t2 = a ^ t1
t3 = -b
I = nondet_1 = 0xd

Fastest checker: explicit
Fails for (13, 0, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 15, 6, 2, 12, 11, 15
Program 0:
t1 = nondet_1 % y
t2 = a MIN t1
t3 = t2 % y
I = t2 << t2

Fastest checker: explicit
Fails for (1, 0, 1, 0, 1, 2)

[]
Fastest checker: genetic
Evars: 11, 14, 11, 12, 1, 1
Program 0:
t1 = nondet_1 << a
t2 = y MAX 0x1
t3 = b + nondet_1
I = t1 s< nondet_1

Fastest checker: explicit
Fails for (4, 0, 1, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 12, 3, 3, 3, 13, 14
Program 0:
t1 = a <= a
t2 = a * x
t3 = ITE(nondet_0, 0xc, a)
t4 = y - t2
t5 = a - t2
I = b * t5

Fastest checker: explicit
Fails for (0, 0, 1, 1, 2, 1)

[]
Fastest checker: genetic
Evars: 1, 7, 14, 15, 5, 7
Program 0:
t1 = x * a
t2 = ~nondet_1
t3 = ITE(nondet_0, nondet_0, nondet_0)
I = t1 % x

Fastest checker: explicit
Fails for (0, 0, 6, 0, 3, 1)

[]
Fastest checker: genetic
Evars: 10, 7, 11, 14, 15, 3
Program 0:
t1 = a | nondet_0
t2 = a ^ 0x7
t3 = t2 + a
t4 = y + nondet_1
I = nondet_0 = 0x7

Fastest checker: explicit
Fails for (0, 7, 0, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 12, 7, 11, 14, 15, 3
Program 0:
t1 = x * 0x7
t2 = x << x
t3 = y MIN b
I = t3 / 0x7

Fastest checker: explicit
Fails for (0, 0, 0, 7, 1, 7)

[]
Fastest checker: genetic
Evars: 12, 0, 8, 14, 10, 12
Program 0:
t1 = x * 0x6
t2 = x << x
t3 = y MIN b
I = t3 / 0x6

Fastest checker: explicit
Fails for (0, 0, 0, 6, 1, 6)

[]
Fastest checker: genetic
Evars: 2, 7, 13, 2, 4, 15
Program 0:
t1 = nondet_0 != nondet_1
t2 = 0x5 | nondet_1
t3 = nondet_0 / t2
I = b MIN t3

Fastest checker: explicit
Fails for (0, 5, 0, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 4, 15, 3, 8, 12, 4
Program 0:
t1 = nondet_0 != nondet_1
t2 = 0xe | nondet_1
t3 = nondet_0 / t2
I = b MIN t3

Fastest checker: explicit
Fails for (0, 14, 0, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 7, 8, 11, 6, 13, 9
Program 0:
t1 = nondet_0 s<= 0xc
I = b MIN t1

Fastest checker: explicit
Fails for (0, 8, 0, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 3, 0, 8, 14, 10, 7
Program 0:
t1 = x = nondet_0
I = 0xe = y

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 14)

[]
Fastest checker: genetic
Evars: 8, 9, 10, 14, 0, 0
Program 0:
t1 = y - nondet_0
t2 = 0x4 ==> a
t3 = nondet_0 + a
t4 = t2 | nondet_1
t5 = t4 << 0x4
t6 = b | b
t7 = ~b
I = t7 < nondet_0

Fastest checker: explicit
Fails for (0, 15, 0, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 2, 7, 5, 10, 12, 10
Program 0:
t1 = b ==> b
I = 0xa = y

Fastest checker: explicit
Fails for (0, 0, 0, 0, 1, 10)

[]
Fastest checker: genetic
Evars: 9, 3, 7, 1, 3, 5
Program 0:
t1 = nondet_0 < x
I = 0x6 s< a

Fastest checker: explicit
Fails for (0, 0, 7, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 15, 11, 14, 10, 1, 7
Program 0:
t1 = 0xc + x
t2 = y MIN y
I = y = t1

Fastest checker: explicit
Fails for (0, 0, 0, 0, 5, 1)

[]
Fastest checker: genetic
Evars: 13, 11, 11, 14, 2, 2
Program 0:
t1 = b * a
t2 = -t1
t3 = a >>> nondet_0
I = t1 s< t2

Fastest checker: explicit
Fails for (0, 0, 9, 1, 1, 1)

[]
Fastest checker: genetic
Evars: 2, 15, 8, 3, 15, 11
Program 0:
t1 = x & nondet_0
t2 = 0x8 s< 0x8
I = t1 / 0x8

Fastest checker: explicit
Fails for (0, 8, 0, 0, 8, 1)

[]
Fastest checker: genetic
Evars: 1, 7, 13, 7, 0, 4
Program 0:
I = 0xd = a

Fastest checker: explicit
Fails for (0, 0, 13, 0, 1, 1)

[]
Fastest checker: genetic
Evars: 12, 2, 10, 14, 9, 10
Program 0:
t1 = a % y
t2 = nondet_0 + x
I = t1 >>> t2

Fastest checker: explicit
Fails for (0, 3, 1, 0, 1, 2)

[]
Fastest checker: genetic
Evars: 14, 4, 7, 5, 12, 5
Program 0:
t1 = x ==> a
t2 = y >> 0x2
t3 = y s<= x
I = t1 * t2

Fastest checker: explicit
Fails for (0, 0, 1, 0, 1, 4)

[]
Fastest checker: genetic
Evars: 5, 8, 10, 6, 14, 7
Program 0:
t1 = -b
t2 = 0x5 >> b
t3 = y + x
t4 = t1 + t3
t5 = 0x5 s<= b
I = a * t5

Fastest checker: explicit
Fails for (0, 0, 1, 5, 1, 1)

[]
Fastest checker: genetic
Evars: 1, 12, 5, 9, 10, 14
Program 0:
I = 0x9 = b

Fastest checker: explicit
Fails for (0, 0, 0, 9, 1, 1)

[]
Fastest checker: genetic
Evars: 0, 4, 15, 4, 13, 3
Program 0:
t1 = -y
t2 = nondet_0 >> t1
I = 0x4 <= t2

Fastest checker: explicit
Fails for (0, 8, 0, 0, 1, 3)

[]
Fastest checker: genetic
Evars: 8, 14, 4, 14, 6, 2
Program 0:
t1 = ~x
t2 = nondet_0 << t1
t3 = a & a
t4 = b MAX x
I = 0xe = b

Fastest checker: explicit
Fails for (0, 0, 0, 14, 1, 1)

[]
Fastest checker: genetic
Evars: 10, 14, 12, 5, 14, 4
Program 0:
t1 = ~0xd
t2 = a s< nondet_1
t3 = nondet_0 / 0xd
I = t3 >> x

Fastest checker: explicit
Fails for (0, 13, 0, 0, 4, 1)

[]
Fastest checker: genetic
Evars: 9, 8, 5, 4, 1, 3
Program 0:
t1 = nondet_0 - x
t2 = x MAX a
t3 = y = b
I = t3 >>> b








Timeout
Perf counters:
{'genetic': 156, 'cbmc': 2, 'explicit': 153, 'timeout': 1, 'iterations': 156}
Perf timers:
verify: 69.92s
checker: 117.47s
gcc: 0.53s
_: 120.00s
synth: 48.55s
