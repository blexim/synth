Using seed: 1337
[]
Fastest checker: genetic
Program 0:
I = nondet_2 <= nondet_1;
Program 1:
t1 = max(maxId, nondet_1);
t2 = min(nondet_0, nondet_2);
I = nondet_0 ==> t2;

Fastest checker: explicit
Fails for (1, 9, 5, 9, 2, 13)

[]
Fastest checker: genetic
Program 0:
t1 = tmp >> nondet_0;
I = nondet_0 < nondet_0;
Program 1:
t1 = nondet_1 ==> nondet_1;
I = tmp >> maxId;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 3, 13)

[]
Fastest checker: genetic
Program 0:
I = nondet_1 != 0x5;
Program 1:
t1 = nondet_1 s<= tmp;
I = nondet_0 >> tmp;

Fastest checker: explicit
Fails for (1, 0, 0, 0, 3, 13)

[]
Fastest checker: genetic
Program 0:
I = maxId & 0xb;
Program 1:
t1 = maxId - tmp;
I = maxId < 0x8;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 4, 13)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_1 - 0x3;
I = nondet_1 s<= maxId;
Program 1:
I = maxId >> tmp;

Fastest checker: explicit
Fails for (0, 5, 0, 0, 4, 13)

[]
Fastest checker: genetic
Program 0:
I = maxId + nondet_0;
Program 1:
t1 = id < nondet_1;
I = tmp << tmp;

Fastest checker: explicit
Fails for (0, 0, 12, 0, 4, 13)

[]
Fastest checker: genetic
Program 0:
t1 = maxId == 0xe;
t2 = t1 * nondet_1;
I = tmp != id;
Program 1:
t1 = nondet_0 * nondet_0;
t2 = id s<= nondet_1;
I = maxId - tmp;

Fastest checker: explicit
Fails for (1, 0, 0, 14, 4, 13)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_1 ==> tmp;
I = t1 <= maxId;
Program 1:
t1 = -maxId;
I = 0x7 - tmp;

Fastest checker: cbmc
Fails for (2, 0, 0, 2, 6, 7)

[]
Fastest checker: genetic
Program 0:
t1 = 0x4 << nondet_1;
t2 = ~maxId;
I = 0x4 s<= 0x4;
Program 1:
t1 = id + tmp;
I = maxId - tmp;

Fastest checker: explicit
Fails for (1, 0, 0, 0, 7, 7)

[]
Fastest checker: genetic
Program 0:
t1 = ~tmp;
t2 = max(nondet_0, t1);
I = nondet_1 | t1;
Program 1:
I = nondet_1 - tmp;

Fastest checker: explicit
Fails for (1, 7, 0, 0, 7, 7)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_2 & nondet_0;
t2 = nondet_0 ==> id;
I = maxId << t2;
Program 1:
t1 = id ==> tmp;
I = -tmp;

Fastest checker: explicit
Fails for (0, 0, 0, 0, 8, 7)

[]
Fastest checker: genetic
Program 0:
I = tmp s<= tmp;
Program 1:
t1 = tmp >>> nondet_0;
t2 = t1 * maxId;
I = -tmp;

Fastest checker: cbmc
Fails for (1, 0, 4, 2, 0, 0)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_1 | tmp;
t2 = maxId != nondet_0;
I = t2 << t2;
Program 1:
t1 = nondet_0 - tmp;
I = nondet_1 >> maxId;

Fastest checker: explicit
Fails for (0, 0, 1, 0, 1, 0)

[]
Fastest checker: genetic
Program 0:
t1 = nondet_2 < 0x9;
t2 = id >>> maxId;
I = tmp | 0x9;
Program 1:
t1 = tmp s<= maxId;
t2 = 0x0 <= nondet_0;
I = nondet_2 - tmp;

Fastest checker: explicit
Fails for (1, 0, 0, 1, 8, 0)

[]







Timeout
Perf counters:
{'genetic': 14, 'cbmc': 2, 'explicit': 12, 'timeout': 1, 'iterations': 15}
Perf timers:
verify: 5.46s
checker: 119.96s
gcc: 0.45s
_: 120.00s
synth: 114.53s
