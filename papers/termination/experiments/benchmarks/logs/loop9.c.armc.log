ARMC3: Abstraction Refinement Model Checker, v. 3.20.05 (May-21-2008)
rybal@mpi-sws.mpg.de
cmd line: [live,/users/matlew/synth/papers/termination/experiments/benchmarks/loop9.c.main.pl,-straight]
reading input from /users/matlew/synth/papers/termination/experiments/benchmarks/loop9.c.main.pl...done.
creating straight line code between cutpoints...done.

transition(p(pc(main-0-18),data(A)), p(pc(main-ret-0),data(B)), {1=1,A=0,1=1,1=1,1=1,B=A}, [1=1,A=0,1=1,1=1,1=1], [B=A], tid([10,9,11,4,1])).
transition(p(pc(main-0-18),data(A)), p(pc(main-0-18),data(B)), {1=1,A>=1+0,A>=0,1=1,B= -(A)+1}, [1=1,A>=1+0,A>=0,1=1], [B= -(A)+1], tid([8,7,3,1])).
transition(p(pc(main-0-18),data(A)), p(pc(main-0-18),data(B)), {1=1,A+1=<0,A+1=<0,1=1,B= -(A)-1}, [1=1,A+1=<0,A+1=<0,1=1], [B= -(A)-1], tid([6,5,2,1])).
transition(p(pc(main-0-18),data(A)), p(pc(main-ret-0),data(B)), {1=1,A=0,1=1,1=1,1=1,B=A}, [1=1,A=0,1=1,1=1,1=1], [B=A], tid([10,9,11,4,1])).
transition(p(pc(main-0-18),data(A)), p(pc(main-0-18),data(B)), {1=1,A>=1+0,A>=0,1=1,B= -(A)+1}, [1=1,A>=1+0,A>=0,1=1], [B= -(A)+1], tid([8,7,3,1])).
transition(p(pc(main-0-18),data(A)), p(pc(main-0-18),data(B)), {1=1,A+1=<0,A+1=<0,1=1,B= -(A)-1}, [1=1,A+1=<0,A+1=<0,1=1], [B= -(A)-1], tid([6,5,2,1])).




--------------------------------------------------
abstraction refinement iteration 0:
lfp iteration 0 
abstract counterexample: stem [0], loop [tid([8,7,3,1])]
trans preds: _9737->_9740:	#0:	
x=<0
x-x'=<0
refining loop
cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x-x'>=1

refining stem

cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x-x'>=1

refining loop
cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x>=1

refining stem

cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x>=1




--------------------------------------------------
abstraction refinement iteration 1:
lfp iteration 0 
abstract counterexample: stem [0], loop [tid([6,5,2,1])]
trans preds: _53675->_53678:	#2:	x>=1, x-x'>=1
x>=0
x-x'>=0
refining loop
cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x-x'=< -1

refining stem

cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x-x'=< -1

refining loop
cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x=< -1

refining stem

cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x=< -1




--------------------------------------------------
abstraction refinement iteration 2:
lfp iteration 0 1 
abstract counterexample: stem [0], loop [tid([8,7,3,1]),tid([6,5,2,1])]
trans preds: _95075->_95078:	#4:	x=< -1, x-x'=< -1, x>=1, x-x'>=1
x=<1
x'-x>= -1
refining loop
cutting step 2 at pc(main-0-18)
LI at pc(main-0-18): x'+x>=1
cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x'-x=< -2

refining stem

cutting step 2 at pc(main-0-18)
LI at pc(main-0-18): x'+x>=1
cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x'-x=< -2

refining loop
cutting step 2 at pc(main-0-18)
LI at pc(main-0-18): x'+x>=1
cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x>=2

refining stem

cutting step 2 at pc(main-0-18)
LI at pc(main-0-18): x'+x>=1
cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x>=2




--------------------------------------------------
abstraction refinement iteration 3:
lfp iteration 0 1 
abstract counterexample: stem [0], loop [tid([6,5,2,1]),tid([8,7,3,1])]
trans preds: _59014->_59017:	#7:	x>=2, x'-x=< -2, x'+x>=1, x=< -1, x-x'=< -1, x>=1, x-x'>=1
x>= -1
x'-x=<1
refining loop
cutting step 2 at pc(main-0-18)
LI at pc(main-0-18): x'+x=< -1
cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x'-x>=2

refining stem

cutting step 2 at pc(main-0-18)
LI at pc(main-0-18): x'+x=< -1
cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x'-x>=2

refining loop
cutting step 2 at pc(main-0-18)
LI at pc(main-0-18): x'+x=< -1
cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x=< -2

refining stem

cutting step 2 at pc(main-0-18)
LI at pc(main-0-18): x'+x=< -1
cutting step 1 at pc(main-0-18)
LI at pc(main-0-18): x=< -2




--------------------------------------------------
abstraction refinement iteration 4:
lfp iteration 0 1 2 


==================================================
ARMC-LIVE: program is correct

abstract trans fixpoint
abstract_trans_state(0, pc(main-0-18), pc(main-0-18), [], stem, 1, (0,0)).
abstract_trans_state(1, pc(main-0-18), pc(main-ret-0), [], stem, 2, (1,tid([10,9,11,4,1]))).
abstract_trans_state(1, pc(main-0-18), pc(main-ret-0), [], loop, 3, (1,tid([10,9,11,4,1]))).
abstract_trans_state(1, pc(main-0-18), pc(main-0-18), [6,9,10], loop, 4, (1,tid([8,7,3,1]))).
abstract_trans_state(1, pc(main-0-18), pc(main-0-18), [3,7,8], loop, 5, (1,tid([6,5,2,1]))).

frontier 0: stem 1 (pc(main-0-18)->pc(main-0-18)) from 0 by applying 0: 	T
frontier 1: stem 2 (pc(main-0-18)->pc(main-ret-0)) from 1 by applying tid([10,9,11,4,1]): 	T
frontier 1: loop 3 (pc(main-0-18)->pc(main-ret-0)) from 1 by applying tid([10,9,11,4,1]): 	T
frontier 1: loop 4 (pc(main-0-18)->pc(main-0-18)) from 1 by applying tid([8,7,3,1]): 	x'+x>=1, x>=1, x-x'>=1
frontier 1: loop 5 (pc(main-0-18)->pc(main-0-18)) from 1 by applying tid([6,5,2,1]): 	x'+x=< -1, x=< -1, x-x'=< -1

_36298->_36301:	#10:	x=< -2, x'-x>=2, x'+x=< -1, x>=2, x'-x=< -2, x'+x>=1, x=< -1, x-x'=< -1, x>=1, x-x'>=1
---------------------------------------------+----run(s)----+---wall(s)----+
Time on instantiating uf axioms              |     0.00     |     0.00     |
Time on cli constraint solving               |     0.03     |     0.02     |
Time on cli constraint preparation           |     0.00     |     0.01     |
Time on cli matrix parsing                   |     0.00     |     0.00     |
Time on cli preprocessing                    |     0.00     |     0.00     |
Time on concretizing trans rel               |     0.00     |     0.00     |
Time on concretizing from state              |     0.00     |     0.00     |
Time on computing the subsumer subtree       |     0.00     |     0.00     |
Time on finding the location of subsumer in queue|     0.00     |     0.00     |
Time on path invariant generation            |     0.00     |     0.00     |
Time on new predicate selection              |     0.00     |     0.00     |
Time on refinement preprocessing cut         |     0.00     |     0.00     |
Time on refinement cutting trace             |     0.04     |     0.03     |
Time on refinement finding unsat subtrace    |     0.00     |     0.00     |
Time on refinement                           |     0.05     |     0.04     |
Time on fixpoint abstraction                 |     0.00     |     0.00     |
Time on fixpoint test                        |     0.00     |     0.00     |
Time on abstract check                       |     0.00     |     0.00     |
Time on total including result checking      |     0.00     |     0.00     |
Time on check result                         |     0.00     |     0.00     |
Time on total                                |     0.00     |     0.00     |
---------------------------------------------+--------------+--------------+



==================================================
ARMC-LIVE: program is correct

TERMINATES
