Using seed: 1337
[]
Fastest checker: genetic
Program 0:
t1 = y < i;
t2 = 0x3 < x;
res1 = t2 < i;
Program 1:
t1 = z != y;
res1 = max(0x2, i);

Fastest checker: explicit
Fails for (0, 0, 0, 1)

[]
Fastest checker: genetic
Program 0:
res1 = max(y, x);
Program 1:
t1 = z << i;
t2 = z < z;
res1 = t2 >> t1;

Fastest checker: explicit
Fails for (1, 0, 0, 1)

[]
Fastest checker: genetic
Program 0:
res1 = x >> x;
Program 1:
t1 = z != 0x6;
t2 = x ^ z;
res1 = 0x6 * z;

Fastest checker: explicit
Fails for (3, 0, 0, 1)

[]
Fastest checker: genetic
Program 0:
t1 = y + 0x7;
res1 = ~y;
Program 1:
res1 = i << i;

Fastest checker: explicit
Fails for (0, 0, 0, 2)

[]
Fastest checker: genetic
Program 0:
t1 = z s<= 0x7;
res1 = -y;
Program 1:
t1 = 0x0 ^ i;
t2 = -x;
res1 = -x;

Fastest checker: explicit
Correct for wordlen=3
Fastest checker: cbmc
Also correct for wordlen=32!







Finished in 2.75s

Program 0:
t1 = z s<= 0x7;
res1 = -y;
Program 1:
t1 = 0x0 ^ i;
t2 = -x;
res1 = -x;


Perf counters:
{'genetic': 5, 'cbmc': 1, 'explicit': 5, 'iterations': 5}
Perf timers:
verify: 2.40s
checker: 2.74s
gcc: 0.68s
_: 2.75s
synth: 0.35s
