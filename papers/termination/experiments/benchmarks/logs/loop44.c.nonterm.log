Using seed: 1337
[]
Fastest checker: genetic
Evars: 9, 3
Program 0:
I = m < 0x7;

Fastest checker: explicit
Fails for (1, 0)

[]
Fastest checker: genetic
Evars: 11, 9
Program 0:
t1 = x s<= m;
t2 = min(0x5, x);
I = 0x5 & m;

Fastest checker: explicit
Fails for (0, 1)

[]
Fastest checker: genetic
Evars: 5, 6
Program 0:
I = 0x5 s< m;

Fastest checker: explicit
Fails for (5, 6)

[]
Fastest checker: genetic
Evars: 13, 14
Program 0:
t1 = 0xc & 0xc;
t2 = t1 < x;
I = m / t1;

Fastest checker: explicit
Fails for (11, 12)

[]
Fastest checker: genetic
Evars: 11, 13
Program 0:
t1 = m / 0xd;
t2 = min(0xd, 0xd);
I = t1 + t1;

Fastest checker: explicit
Fails for (12, 13)

[]
Fastest checker: genetic
Evars: 3, 1
Program 0:
t1 = m s<= x;
t2 = x ==> t1;
I = m == t1;

Fastest checker: explicit
Fails for (15, 0)

[]
Fastest checker: genetic
Evars: 7, 15
Program 0:
t1 = m < m;
t2 = t1 ^ x;
t3 = 0x1 + 0x1;
t4 = 0x1 + m;
I = t4 <= m;

Fastest checker: explicit
Fails for (14, 15)

[]
Fastest checker: genetic
Evars: 13, 8
Program 0:
I = 0x8 == m;

Fastest checker: explicit
Correct for wordlen=4
Fastest checker: cbmc
Trying to generalize...
Fastest checker: cbmc
Fastest checker: explicit
Fastest checker: explicit
Couldn't generalize :-(
Increasing wordlen to 8
[]
Fastest checker: genetic
Evars: 1, 11
Program 0:
I = x | m;

Fastest checker: explicit
Fails for (27, 28)

[]
Fastest checker: genetic
Evars: 13, 8
Program 0:
I = 0x8 == m;

Fastest checker: explicit
Fails for (7, 8)

[]
Fastest checker: genetic
Evars: 9, 6
Program 0:
t1 = x < x;
I = m s< 0x8;

Fastest checker: explicit
Fails for (128, 129)

[]
Fastest checker: genetic
Evars: 11, 6
Program 0:
I = 0x6 / m;

Fastest checker: explicit
Fails for (1, 0)

[]
Fastest checker: genetic
Evars: 3, 1
Program 0:
t1 = m s<= x;
t2 = x ==> t1;
I = m == t1;

Fastest checker: explicit
Fails for (255, 0)

[]
Fastest checker: genetic
Evars: 0, 14
Program 0:
t1 = x ==> x;
t2 = t1 ==> t1;
I = x < t1;

Fastest checker: explicit
Fails for (0, 1)

[]
Fastest checker: genetic
Evars: 243, 177
Program 0:
t1 = m << m;
t2 = max(0xaa, m);
I = t2 != 0xaa;

Fastest checker: explicit
Fails for (170, 171)

[]
Fastest checker: genetic
Evars: 8, 6
Program 0:
t1 = x s< x;
t2 = 0x3 + 0x3;
I = m == t2;

Fastest checker: explicit
Fails for (5, 6)

[]
Fastest checker: genetic
Evars: 109, 206
Program 0:
t1 = 0xac + 0xac;
I = m / 0xac;

Fastest checker: explicit
Fails for (171, 172)

[]
Fastest checker: genetic
Evars: 109, 206
Program 0:
t1 = m * 0xac;
t2 = m & x;
I = m s< t2;

Fastest checker: explicit
Correct for wordlen=8
Fastest checker: explicit
Trying to generalize...
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Couldn't generalize :-(
Increasing wordlen to 16
[]
Fastest checker: genetic
Evars: 236, 152
Program 0:
t1 = 0xbf ? m : m;
I = m % 0xbf;

Fastest checker: explicit
Fails for (43498, 43499)

[]
Fastest checker: genetic
Evars: 209, 127
Program 0:
t1 = x * x;
I = m s<= x;

Fastest checker: cbmc
Fails for (200, 1)

[]
Fastest checker: genetic
Evars: 178, 61
Program 0:
t1 = x != m;
t2 = t1 % 0x51;
I = t1 s< m;

Fastest checker: explicit
Fails for (1, 2)

[]
Fastest checker: genetic
Evars: 13, 8
Program 0:
I = 0x8 == m;

Fastest checker: explicit
Fails for (7, 8)

[]
Fastest checker: genetic
Evars: 0, 14
Program 0:
t1 = x ==> x;
t2 = t1 ==> t1;
I = x < t1;

Fastest checker: explicit
Fails for (0, 9)

[]
Fastest checker: genetic
Evars: 8, 6
Program 0:
t1 = x s< x;
t2 = 0x3 + 0x3;
I = m == t2;

Fastest checker: cbmc
Fails for (5, 6)

[]
Fastest checker: genetic
Evars: 54, 107
Program 0:
t1 = 0x4f ? 0x4f : x;
t2 = t1 + x;
I = 0x4f s< m;

Fastest checker: cbmc
Fails for (16448, 16449)

[]
Fastest checker: genetic
Evars: 14237, 35654
Program 0:
t1 = m s<= 0x9b64;
t2 = t1 / 0x9b64;
I = t1 * m;

Fastest checker: cbmc
Fails for (39779, 39780)

[]
Fastest checker: genetic
Evars: 52097, 49937
Program 0:
t1 = x - m;
I = m / 0xbd9b;

Fastest checker: cbmc
Fails for (48538, 48539)

[]
Fastest checker: genetic
Evars: 52097, 49937
Program 0:
t1 = x - m;
t2 = m + x;
t3 = 0xbd9b & 0xbd9b;
I = 0xbd9b <= x;

Fastest checker: explicit
Fails for (48540, 48539)

[]
Fastest checker: genetic
Evars: 52097, 49937
Program 0:
I = 0xbd9b < m;

Fastest checker: explicit
Fails for (48539, 48540)

[]
Fastest checker: genetic
Evars: 65291, 53454
Program 0:
t1 = m s<= m;
t2 = -x;
t3 = t2 != x;
t4 = 0x8277 + 0x8277;
t5 = x + m;
t6 = x + m;
I = 0x8277 <= t6;

Fastest checker: cbmc
Fails for (57471, 57472)

[]
Fastest checker: genetic
Evars: 65160, 28883
Program 0:
t1 = x == 0xefc2;
t2 = m + x;
t3 = t2 * x;
I = 0xefc2 <= x;

Fastest checker: explicit
Fails for (61378, 57472)

[]
Fastest checker: genetic
Evars: 60308, 10364
Program 0:
t1 = x ? 0x6381 : m;
t2 = min(x, m);
I = x s< t2;

Fastest checker: cbmc
Fails for (65535, 32759)

[]
Fastest checker: genetic
Evars: 20315, 23000
Program 0:
t1 = ~x;
I = 0x4e85 s< m;

Fastest checker: explicit
Fails for (32759, 32760)

[]
Fastest checker: genetic
Evars: 39264, 33495
Program 0:
t1 = 0x49c6 + 0x49c6;
I = m s<= t1;

Fastest checker: explicit
Fails for (32768, 32769)

[]
Fastest checker: genetic
Evars: 39264, 17125
Program 0:
t1 = ~x;
t2 = t1 + m;
I = x <= t2;

Fastest checker: cbmc
Fails for (1, 3)

[]
Fastest checker: genetic
Evars: 32089, 40753
Program 0:
t1 = m >>> m;
t2 = max(0x4c35, m);
I = t2 s< x;

Fastest checker: explicit
Fails for (19510, 3)

[]
Fastest checker: genetic
Evars: 3246, 61960
Program 0:
t1 = 0xae06 % m;
t2 = max(0xae06, x);
I = t2 <= t1;

Fastest checker: cbmc
Fails for (49151, 0)

[]
Fastest checker: genetic
Evars: 31853, 53454
Program 0:
t1 = m * 0xdcac;
t2 = m & x;
t3 = 0xdcac <= 0xdcac;
I = m s< t2;

Fastest checker: cbmc
Correct for wordlen=16
Fastest checker: explicit
Trying to generalize...
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Couldn't generalize :-(
Increasing wordlen to 32
[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;

Fastest checker: cbmc
Fails for (4294967294L, 4294967295L)

[]
Fastest checker: genetic
Evars: 63013, 62262
Program 0:
I = -m;








Timeout
Perf counters:
{'genetic': 83, 'cbmc': 56, 'explicit': 38, 'timeout': 1, 'iterations': 83}
Perf timers:
gcc: 1.79s
verify: 113.49s
checker: 119.79s
generalize: 2.01s
synth: 6.46s
_: 120.00s
