[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 1

Increasing sequence length to 1

[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 0

Increasing sequence length to 2

[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 1

Increasing sequence length to 2

[]
Fastest checker: cbmc
t1 = a2 | a1
t2 = a2 ^ t1
Fastest checker: explicit
Fails for (1, 1, 0)

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 2

Increasing sequence length to 2

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 0

Increasing sequence length to 3

[]
Fastest checker: cbmc
t1 = a1 >>> a1
t2 = t1 - a2
t3 = a1 & t2
Fastest checker: explicit
Fails for (1, 0, 0)

[]
Fastest checker: cbmc
t1 = a1 >>> a2
t2 = t1 - a2
t3 = a1 & t2
Fastest checker: explicit
Fails for (2, 1, 0)

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 1

Increasing sequence length to 3

[]
Fastest checker: cbmc
t1 = 0xd >>> a2
t2 = a2 ^ t1
t3 = t2 & a1
Fastest checker: explicit
Fails for (2, 0, 0)

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 2

Increasing sequence length to 3

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 3

Increasing sequence length to 3

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 0

Increasing sequence length to 4

[]
Fastest checker: cbmc
t1 = a1 + a2
t2 = t1 >>> a3
t3 = t2 - a2
t4 = a1 & t3
Fastest checker: explicit
Fails for (1, 0, 1)

[]
Fastest checker: cbmc
t1 = a1 <= a2
t2 = ~a2
t3 = t2 >>> t1
t4 = t3 & a1
Fastest checker: explicit
Fails for (3, 1, 0)

[]
Fastest checker: cbmc
t1 = a1 ^ a2
t2 = a1 >> a3
t3 = a1 & t1
t4 = t2 | t3
Fastest checker: explicit
Fails for (2, 0, 1)

[]
Fastest checker: cbmc
t1 = a2 * a1
t2 = a1 <= t1
t3 = t2 + a1
t4 = t3 - a2
Fastest checker: explicit
Fails for (0, 0, 0)

[]
Fastest checker: cbmc
t1 = a2 << a2
t2 = a2 << t1
t3 = a1 | t2
t4 = t3 - t2
Fastest checker: explicit
Fails for (4, 1, 0)

[]
Fastest checker: cbmc
t1 = a2 << a3
t2 = a2 & a1
t3 = t2 >> t1
t4 = a1 - t3
Fastest checker: explicit
Fails for (1, 1, 1)

[]
Fastest checker: cbmc
t1 = a2 << a3
t2 = t1 - a2
t3 = a1 | t2
t4 = t3 + t2
Fastest checker: explicit
Fails for (0, 1, 1)

[]
Fastest checker: cbmc
t1 = a2 & a1
t2 = t1 << a3
t3 = a1 - t1
t4 = t3 + t2
Fastest checker: explicit
Fails for (2, 1, 1)

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 1

Increasing sequence length to 4

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 2

Increasing sequence length to 4

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 3

Increasing sequence length to 4

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 4

Increasing sequence length to 4

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 0

Increasing sequence length to 5

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 1

Increasing sequence length to 5

[]







Timeout
Perf counters:
{'cbmc': 24, 'explicit': 15, 'timeout': 1, 'iterations': 28}
Perf timers:
verify: 2.20s
checker: 1799.36s
_: 1800.01s
synth: 1797.75s
