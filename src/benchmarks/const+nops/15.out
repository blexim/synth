Using seed: 1337
[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 1

Increasing sequence length to 1

[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 0

Increasing sequence length to 2

[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 1

Increasing sequence length to 2

[]
Fastest checker: explicit
No sequence possible!
Increasing constants to 2

Increasing sequence length to 2

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 0

Increasing sequence length to 3

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 1

Increasing sequence length to 3

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 2

Increasing sequence length to 3

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 3

Increasing sequence length to 3

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 0

Increasing sequence length to 4

[]
Fastest checker: cbmc
No sequence possible!
Increasing constants to 1

Increasing sequence length to 4

[]
Fastest checker: cbmc
t1 = a1 | a2
t2 = a2 ^ a1
t3 = t2 >> 0xd
t4 = t1 - t3
Fastest checker: explicit
Correct for wordlen=4
Fastest checker: explicit
Trying to generalize...
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Couldn't generalize :-(
Excluding current sequence
[]
Fastest checker: cbmc
t1 = a1 ^ a2
t2 = a2 | a1
t3 = t1 >> 0x1
t4 = t2 - t3
Fastest checker: explicit
Correct for wordlen=4
Fastest checker: cbmc
Also correct for wordlen=32!







Finished in 204.41s

t1 = a1 ^ a2
t2 = a2 | a1
t3 = t1 >> 0x1
t4 = t2 - t3

Perf counters:
{'cbmc': 9, 'explicit': 10, 'exclusions': 1, 'iterations': 12}
Perf timers:
verify: 2.49s
checker: 204.34s
generalize: 0.72s
_: 204.41s
synth: 201.91s
