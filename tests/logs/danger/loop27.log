Running with args: ['./kalashnikov.py', '/tmp/loop27.c', '../../tests/loops/danger.c', '-P3', '--evars', '2', '-a2', '--seed=1337', '--varnames', 'x', 'y', '-v', '--strategy=evolve']
Using seed: 1337
[]
Fastest checker: genetic
Evars: 3, 4
Program 0:
res1 = y + x;
Program 1:
t1 = y < y;
res1 = 0x0 ^ t1;
Program 2:
t1 = -(x);
res1 = 0x1 << 0x1;

Fastest checker: explicit
Fails for (0, 1)

[]
Fastest checker: genetic
Evars: 0, 7
Program 0:
res1 = x <= y;
Program 1:
t1 = 0x0 == 0x0;
res1 = ~(x);
Program 2:
res1 = ~(y);

Fastest checker: explicit
Fails for (1, 3)

[]
Fastest checker: genetic
Evars: 3, 6
Program 0:
res1 = y s< 0x0;
Program 1:
t1 = x s<= x;
res1 = ~(0x1);
Program 2:
res1 = x + x;

Fastest checker: explicit
Fails for (1, 4)

[]
Fastest checker: genetic
Evars: 2, 0
Program 0:
res1 = 0x0 == y;
Program 1:
t1 = 0x0 + y;
res1 = x >> x;
Program 2:
t1 = x % 0x0;
res1 = x % y;

Fastest checker: explicit
Fails for (0, 0)

[]
Fastest checker: genetic
Evars: 7, 4
Program 0:
t1 = max(0x1, 0x1);
t2 = ~(0x0);
res1 = t2 == x;
Program 1:
t1 = x ? 0x1 : 0x0;
t2 = x >>> 0x0;
res1 = max(x, x);
Program 2:
t1 = x ==> 0x0;
t2 = x >>> t1;
res1 = max(x, t1);

Fastest checker: explicit
Fails for (7, 0)

[]
Fastest checker: genetic
Evars: 6, 0
Program 0:
t1 = y + x;
t2 = y >> y;
res1 = 0x1 != x;
Program 1:
res1 = 0x1 % 0x1;
Program 2:
t1 = ~(y);
res1 = x & 0x0;

Fastest checker: explicit
Correct for wordlen=3
Fastest checker: cbmc
Also correct for wordlen=32!







Finished in 8.42s

Evars: 6, 0
Program 0:
t1 = y + x;
t2 = y >> y;
res1 = 0x1 != x;
Program 1:
res1 = 0x1 % 0x1;
Program 2:
t1 = ~(y);
res1 = x & 0x0;


Perf counters:
{'genetic': 6, 'cbmc': 1, 'explicit': 6, 'iterations': 6}
Perf timers:
verify: 3.84s
checker: 8.41s
gcc: 4.98s
_: 8.42s
synth: 4.58s
