Running with args: ['./kalashnikov.py', '--nondet=1', '/tmp/loop20.c', '../../tests/loops/danger.c', '-P3', '--evars', '3', '-a3', '--seed=1337', '--varnames', 'nondet0', 'x', 'y', '-v', '--strategy=evolve']
Using seed: 1337
[]
Fastest checker: genetic
Evars: 4, 7, 3
Program 0:
t1 = 0x1 <= y;
t2 = 0x0 ==> y;
res1 = 0x1 >> x;
Program 1:
t1 = max(y, 0x1);
t2 = nondet0 ? 0x0 : nondet0;
res1 = x >>> x;
Program 2:
res1 = ~(y);

Fastest checker: explicit
Fails for (0, 0, 0)

[]
Fastest checker: genetic
Evars: 2, 4, 7
Program 0:
res1 = y == 0x0;
Program 1:
t1 = y ^ nondet0;
t2 = nondet0 << y;
res1 = nondet0 < t1;
Program 2:
res1 = 0x1 - x;

Fastest checker: explicit
Fails for (0, 1, 0)

[]
Fastest checker: genetic
Evars: 7, 5, 7
Program 0:
res1 = x == y;
Program 1:
res1 = y ==> x;
Program 2:
res1 = nondet0 == y;

Fastest checker: explicit
Fails for (0, 1, 1)

[]
Fastest checker: genetic
Evars: 0, 6, 1
Program 0:
t1 = y < 0x1;
res1 = t1 ? 0x1 : 0x0;
Program 1:
res1 = nondet0 << nondet0;
Program 2:
res1 = ~(x);

Fastest checker: explicit
Fails for (0, 3, 0)

[]
Fastest checker: genetic
Evars: 2, 4, 1
Program 0:
t1 = x == y;
t2 = 0x0 + 0x0;
res1 = t1 << t2;
Program 1:
res1 = 0x1 << nondet0;
Program 2:
t1 = ~(x);
t2 = 0x0 <= 0x0;
res1 = nondet0 s< 0x1;

Fastest checker: explicit
Correct for wordlen=3
Fastest checker: cbmc
Also correct for wordlen=32!







Finished in 6.64s

Evars: 2, 4, 1
Program 0:
t1 = x == y;
t2 = 0x0 + 0x0;
res1 = t1 << t2;
Program 1:
res1 = 0x1 << nondet0;
Program 2:
t1 = ~(x);
t2 = 0x0 <= 0x0;
res1 = nondet0 s< 0x1;


Perf counters:
{'genetic': 5, 'cbmc': 1, 'explicit': 5, 'iterations': 5}
Perf timers:
verify: 4.29s
checker: 6.62s
gcc: 2.75s
_: 6.64s
synth: 2.34s
