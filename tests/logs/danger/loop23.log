Using seed: 1337
[]
Fastest checker: genetic
Evars: 4, 7, 3
Program 0:
t1 = 0x1 <= i;
t2 = 0x0 ==> i;
res1 = 0x1 >> len;
Program 1:
t1 = max(i, 0x1);
t2 = x ? 0x0 : x;
res1 = len >>> len;
Program 2:
res1 = ~(i);

Fastest checker: explicit
Fails for (0, 0, 0)

[]
Fastest checker: genetic
Evars: 6, 0, 4
Program 0:
t1 = min(x, 0x1);
t2 = i | 0x1;
res1 = t2 == t1;
Program 1:
t1 = len != 0x0;
t2 = min(t1, len);
res1 = 0x1 << 0x1;
Program 2:
res1 = 0x0 ==> len;

Fastest checker: explicit
Fails for (1, 1, 0)

[]
Fastest checker: genetic
Evars: 2, 3, 2
Program 0:
t1 = len - 0x0;
res1 = len ? 0x0 : x;
Program 1:
t1 = i / 0x0;
res1 = len & len;
Program 2:
t1 = min(0x0, i);
res1 = 0x0 s<= x;

Fastest checker: explicit
Fails for (1, 0, 1)

[]
Fastest checker: genetic
Evars: 6, 7, 0
Program 0:
t1 = i ? x : 0x1;
t2 = max(0x0, 0x1);
res1 = t1 < x;
Program 1:
t1 = i - 0x1;
t2 = len s< i;
res1 = x < t2;
Program 2:
t1 = 0x0 < 0x1;
res1 = 0x0 * 0x0;

Fastest checker: explicit
Fails for (2, 1, 0)

[]
Fastest checker: genetic
Evars: 5, 1, 5
Program 0:
t1 = len s< i;
res1 = t1 >> i;
Program 1:
t1 = max(len, 0x1);
t2 = i != i;
res1 = t1 != t1;
Program 2:
t1 = i s<= len;
t2 = 0x0 + 0x0;
res1 = 0x0 + 0x0;

Fastest checker: explicit
Fails for (0, 4, 0)

[]
Fastest checker: genetic
Evars: 7, 1, 7
Program 0:
t1 = x ==> x;
t2 = ~(x);
res1 = t2 <= t1;
Program 1:
t1 = len + i;
t2 = x | len;
res1 = 0x0 + 0x0;
Program 2:
res1 = x != x;

Fastest checker: explicit
Fails for (6, 1, 0)

[]
Fastest checker: genetic
Evars: 6, 3, 0
Program 0:
t1 = x <= 0x1;
res1 = len == t1;
Program 1:
t1 = len ? x : 0x1;
t2 = 0x0 + 0x0;
res1 = t2 + 0x1;
Program 2:
res1 = ~(i);

Fastest checker: explicit
Fails for (0, 1, 0)

[]
Fastest checker: genetic
Evars: 7, 4, 0
Program 0:
t1 = -(x);
t2 = 0x0 ==> 0x1;
res1 = t2 s<= t1;
Program 1:
res1 = 0x0 <= 0x0;
Program 2:
t1 = max(0x0, i);
res1 = ~(i);

Fastest checker: explicit
Fails for (5, 0, 5)

[]
Fastest checker: genetic
Evars: 6, 2, 4
Program 0:
t1 = i < x;
t2 = max(len, i);
res1 = len ? 0x0 : t1;
Program 1:
t1 = len s< i;
t2 = 0x0 + 0x0;
res1 = 0x0 + 0x0;
Program 2:
t1 = i s< len;
res1 = 0x0 + 0x0;

Fastest checker: explicit
Correct for wordlen=3
Fastest checker: explicit
Trying to generalize...
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: explicit
Fastest checker: cbmc







Finished in 8.82s

Evars: 3221225472, 1227133513, 2454267026
Program 0:
t1 = i < x;
t2 = max(len, i);
res1 = len ? 0x0 : t1;
Program 1:
t1 = len s< i;
t2 = 0x0 + 0x0;
res1 = 0x0 + 0x0;
Program 2:
t1 = i s< len;
res1 = 0x0 + 0x0;


Perf counters:
{'genetic': 9, 'cbmc': 1, 'explicit': 26, 'iterations': 9}
Perf timers:
gcc: 4.32s
verify: 4.85s
checker: 8.63s
generalize: 4.20s
synth: 3.96s
_: 8.82s
