Running with args: ['./kalashnikov.py', '--seed=1337', '--strategy=evolve', '-v', '--nondet=1', '-P3', '--evars', '3', '-a3', '../../tests/loops/danger.c', '../frontends/loop40.c', '--varnames', 'x', 'y', 'nondet0']
Using seed: 1337
[]
Fastest checker: genetic
Evars: 4, 7, 3
Program 0:
t1 = 0x1 <= nondet0;
t2 = 0x0 ==> nondet0;
res1 = 0x1 >> y;
Program 1:
t1 = max(nondet0, 0x1);
t2 = x ? 0x0 : x;
res1 = y >>> y;
Program 2:
res1 = ~(nondet0);

Fastest checker: explicit
Fails for (0, 0, 0)

[]
Fastest checker: genetic
Evars: 2, 2, 1
Program 0:
t1 = x ==> y;
t2 = nondet0 != nondet0;
res1 = y <= y;
Program 1:
res1 = nondet0 << 0x0;
Program 2:
t1 = x << 0x1;
t2 = t1 * x;
res1 = ~(y);

Fastest checker: explicit
Fails for (0, 3, 3)

[]
Fastest checker: genetic
Evars: 5, 1, 5
Program 0:
res1 = y s< nondet0;
Program 1:
t1 = y != nondet0;
res1 = nondet0 / y;
Program 2:
t1 = x >> y;
t2 = t1 / x;
res1 = t2 < x;

Fastest checker: explicit
Fails for (0, 0, 1)

[]
Fastest checker: genetic
Evars: 2, 5, 5
Program 0:
t1 = y >> x;
res1 = t1 s<= 0x1;
Program 1:
t1 = max(nondet0, 0x1);
t2 = 0x0 / 0x1;
res1 = t1 ^ x;
Program 2:
t1 = x s<= 0x1;
res1 = ~(y);

Fastest checker: explicit
Fails for (0, 1, 0)

[]
Fastest checker: genetic
Evars: 1, 3, 0
Program 0:
t1 = x <= 0x0;
t2 = t1 / 0x1;
res1 = nondet0 <= t2;
Program 1:
res1 = y == 0x1;
Program 2:
t1 = x >>> y;
res1 = ~(y);

Fastest checker: explicit
Fails for (0, 1, 1)

[]
Fastest checker: genetic
Evars: 1, 6, 3
Program 0:
res1 = y < nondet0;
Program 1:
res1 = nondet0 | x;
Program 2:
res1 = -(nondet0);

Fastest checker: explicit
Fails for (0, 0, 7)

[]
Fastest checker: genetic
Evars: 7, 0, 0
Program 0:
t1 = 0x0 >> x;
res1 = 0x1 == nondet0;
Program 1:
t1 = ~(x);
res1 = 0x0 + 0x0;
Program 2:
t1 = min(nondet0, 0x1);
t2 = 0x1 ^ t1;
res1 = ~(y);

Fastest checker: explicit
Correct for wordlen=3
Fastest checker: cbmc
Also correct for wordlen=32!







Finished in 6.43s

Evars: 7, 0, 0
Program 0:
t1 = 0x0 >> x;
res1 = 0x1 == nondet0;
Program 1:
t1 = ~(x);
res1 = 0x0 + 0x0;
Program 2:
t1 = min(nondet0, 0x1);
t2 = 0x1 ^ t1;
res1 = ~(y);


Perf counters:
{'genetic': 7, 'cbmc': 1, 'explicit': 7, 'iterations': 7}
Perf timers:
verify: 4.89s
checker: 6.42s
gcc: 1.86s
_: 6.43s
synth: 1.54s
