Using seed: 1337
[]
Fastest checker: genetic
Program 0:
t1 = 0xf ? 0xf : 0x1;
t2 = a1 >>> 0xf;
res1 = t2 | 0x1;

Fastest checker: explicit
Fails for (0,)

[]
Fastest checker: anneal
Program 0:
t1 = a1 >>> 0x7;
t2 = ~(0x7);
t3 = t1 ==> 0x1;
t4 = t2 ==> a1;
res1 = t4 | t1;

Fastest checker: explicit
Correct for wordlen=4
Fastest checker: explicit
Trying to generalize...
Fastest checker: explicit
Couldn't generalize :-(
Increasing wordlen to 8
[]
Fastest checker: genetic
Program 0:
t1 = 0xf ? 0xf : 0x1;
t2 = a1 >>> 0xf;
res1 = t2 | 0x1;

Fastest checker: explicit
Fails for (0,)

[]
Fastest checker: anneal
Program 0:
t1 = a1 >>> 0x7;
t2 = ~(0x7);
t3 = t1 ==> 0x1;
t4 = t2 ==> a1;
res1 = t4 | t1;

Fastest checker: explicit
Correct for wordlen=8
Fastest checker: explicit
Trying to generalize...
Fastest checker: explicit
Couldn't generalize :-(
Increasing wordlen to 16
[]
Fastest checker: genetic
Program 0:
t1 = 0xf ? 0xf : 0x1;
t2 = a1 >>> 0xf;
res1 = t2 | 0x1;

Fastest checker: explicit
Fails for (0,)

[]
Fastest checker: genetic
Program 0:
t1 = a1 >>> 0xf;
t2 = t1 | 0x1;
t3 = a1 == t1;
res1 = a1 ? t2 : a1;

Fastest checker: explicit
Correct for wordlen=16
Fastest checker: explicit
Trying to generalize...
Fastest checker: explicit
Couldn't generalize :-(
Increasing wordlen to 32
[]
Fastest checker: genetic
Program 0:
t1 = a1 >>> 0xf;
t2 = t1 | 0x1;
res1 = min(0x1, a1);

Fastest checker: cbmc
Fails for (2147483648,)

[]
Fastest checker: genetic
Program 0:
t1 = a1 >>> 0xffff;
res1 = t1 | 0x1;

Fastest checker: explicit
Fails for (0,)

[]
Fastest checker: genetic
Program 0:
t1 = a1 >>> 0xffff;
t2 = t1 | 0x1;
t3 = 0x0 < a1;
t4 = 0x0 >>> a1;
res1 = t2 * t3;

Fastest checker: cbmc
Correct for wordlen=32







Finished in 8.07s

Program 0:
t1 = a1 >>> 0xffff;
t2 = t1 | 0x1;
t3 = 0x0 < a1;
t4 = 0x0 >>> a1;
res1 = t2 * t3;


Perf counters:
{'cbmc': 2, 'genetic': 7, 'anneal': 2, 'explicit': 13, 'iterations': 9}
Perf timers:
gcc: 3.42s
verify: 3.32s
checker: 8.01s
generalize: 0.01s
synth: 4.75s
_: 8.07s
