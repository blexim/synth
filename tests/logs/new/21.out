Using seed: 1337
[]
Fastest checker: genetic
Program 0:
t1 = min(0x7, a2);
t2 = a3 % a2;
t3 = max(a4, a2);
t4 = a1 s< 0x0;
t5 = a4 < a4;
t6 = a1 s< 0x0;
t7 = t6 ? t6 : a2;
res1 = t7 * a3;

Fastest checker: explicit
Fails for (0, 0, 0, 0)

[]
Fastest checker: genetic
Program 0:
t1 = a1 != a4;
t2 = a1 != a4;
t3 = t2 ? t2 : a2;
t4 = a2 >> a4;
res1 = t3 * a3;

Fastest checker: explicit
Fails for (1, 2, 1, 0)

[]
Fastest checker: genetic
Program 0:
t1 = a1 s<= 0x1;
t2 = t1 ? t1 : a2;
t3 = a3 != a4;
t4 = -(0x1);
t5 = a4 < a4;
t6 = a1 s< 0x0;
t7 = t6 ? t6 : a2;
t8 = a1 != a4;
t9 = t8 ? t6 : a2;
res1 = t9 * a3;

Fastest checker: explicit
Fails for (2, 2, 1, 0)

[]
Fastest checker: genetic
Program 0:
t1 = a1 != a4;
t2 = t1 ? a3 : a2;
t3 = a1 != a4;
t4 = a1 == 0x1;
t5 = t4 s<= t1;
res1 = t2 - t4;

Fastest checker: explicit
Fails for (1, 1, 2, 0)

[]
Fastest checker: anneal
Program 0:
t1 = a3 == a1;
t2 = 0x1 | 0x3;
t3 = a1 - t2;
t4 = 0x1 >> 0x1;
t5 = t4 ^ a2;
t6 = -(t1);
t7 = a3 s< a1;
t8 = a3 == a4;
t9 = t3 ? a3 : a2;
res1 = t9 >> t6;

Fastest checker: explicit
Fails for (0, 2, 1, 0)

[]
Fastest checker: anneal
Program 0:
t1 = a3 == a1;
t2 = 0x5 | a1;
t3 = a1 - a4;
t4 = 0x1 <= t1;
t5 = min(a1, 0x1);
t6 = -(t1);
t7 = a3 | a1;
t8 = a3 ==> a2;
t9 = t3 ? a3 : a2;
res1 = t9 >> t6;

Fastest checker: explicit
Fails for (2, 1, 2, 0)

[]
Fastest checker: anneal
Program 0:
t1 = a3 == a1;
t2 = 0x2 | a1;
t3 = a1 - a4;
t4 = 0x1 <= t1;
t5 = min(a1, 0x1);
t6 = t1 ? 0x0 : a2;
t7 = t1 * a1;
t8 = a3 ==> 0x0;
t9 = t3 ? a3 : a2;
res1 = t9 >> t7;

Fastest checker: explicit
Fails for (3, 1, 3, 0)

[]
Fastest checker: anneal
Program 0:
t1 = a3 == a1;
t2 = 0x2 / 0x1;
t3 = a1 - a4;
t4 = 0x0 != t1;
t5 = min(a1, 0x1);
t6 = t1 < a3;
t7 = t1 << 0x1;
t8 = t4 ==> t3;
t9 = t3 ? a3 : a2;
res1 = t9 >> t7;

Fastest checker: explicit
Fails for (4, 1, 4, 0)

[]
Fastest checker: anneal
Program 0:
t1 = a3 == a1;
t2 = 0x2 + 0x2;
t3 = a1 - a4;
t4 = t1 ^ t2;
t5 = min(a3, 0x1);
t6 = t1 < a3;
t7 = t1 ^ 0x1;
t8 = t5 >> a4;
t9 = t3 ? a3 : a2;
res1 = t9 * t7;

Fastest checker: explicit
Fails for (0, 2, 0, 1)

[]
Fastest checker: genetic
Program 0:
t1 = a1 != a4;
t2 = t1 ? a3 : a2;
t3 = a1 != t2;
res1 = t3 ? t2 : a4;

Fastest checker: explicit
Correct for wordlen=3
Fastest checker: cbmc
Also correct for wordlen=32!







Finished in 63.22s

Program 0:
t1 = a1 != a4;
t2 = t1 ? a3 : a2;
t3 = a1 != t2;
res1 = t3 ? t2 : a4;


Perf counters:
{'cbmc': 1, 'genetic': 5, 'anneal': 5, 'explicit': 10, 'iterations': 10}
Perf timers:
verify: 1.88s
checker: 63.15s
gcc: 2.54s
_: 63.22s
synth: 61.34s
