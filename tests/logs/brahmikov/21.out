Using seed: 1337
[]
Fastest checker: cbmc
[12, 9, 4, 11, 1, 8, 6, 3, 10, 7, 0, 2, 5]
[2, 3, 0, 4, 4, 1, 6, 6, 7, 3, 0, 7, 2, 4, 9, 1, 3, 11, 11, 5, 1, 7, 7, 8, 1, 7]
12
t0 = a3 <= a4
t1 = a1 == t0
t2 = -1 +  t0
t3 = t2 < t2
t4 = t3 | a4
t5 = a1 - t3
t6 = a3 >> t0
t7 = 1 + t5
t8 = a4 != t7
t9 = t7 + t1
t10 = a2 & t3
t11 = ~ t3
t12 = a2 ^ t3
return t12
Fastest checker: cbmc
Fails for (8, 13, 8, 9)

[]
Fastest checker: cbmc
[8, 5, 0, 2, 7, 4, 12, 10, 9, 1, 11, 3, 6]
[2, 3, 2, 3, 3, 1, 0, 2, 4, 0, 4, 1, 7, 1, 10, 0, 10, 3, 5, 9, 5, 7, 7, 3, 0, 8]
2
t0 = a3 - a4
t1 = a3 ^ a4
t2 = a4 & a2
t3 = ~ a1
t4 = t0 + a1
t5 = -1 +  t0
t6 = t3 <= a2
t7 = t6 != a1
t8 = t6 == a4
t9 = t1 | t5
t10 = t1 < t3
t11 = 1 + t3
t12 = a1 >> t4
return t2
Fastest checker: cbmc
Fails for (3, 1, 3, 11)

[]
Fastest checker: cbmc
[0, 3, 1, 9, 5, 7, 12, 2, 10, 4, 11, 8, 6]
[3, 3, 0, 4, 5, 3, 3, 6, 7, 0, 8, 1, 4, 3, 9, 3, 2, 1, 6, 10, 8, 13, 7, 7, 15, 0]
7
t0 = a4 & a4
t1 = 1 + a1
t2 = t1 | a4
t3 = a4 == t2
t4 = t3 ^ a1
t5 = t4 + a2
t6 = t0 <= a4
t7 = ~ t5
t8 = a3 != a2
t9 = -1 +  t2
t10 = t4 < t9
t11 = t3 - t3
t12 = t11 >> a1
return t7
Fastest checker: cbmc
Fails for (4, 11, 0, 4)

[]
Fastest checker: cbmc
[11, 4, 2, 5, 7, 8, 6, 12, 9, 10, 3, 0, 1]
[2, 0, 4, 2, 5, 4, 6, 3, 7, 0, 5, 7, 9, 8, 9, 4, 2, 0, 4, 6, 3, 1, 12, 12, 1, 8]
3
t0 = a3 < a1
t1 = -1 +  t0
t2 = ~ t1
t3 = t2 ^ a4
t4 = t3 + a1
t5 = t1 - t3
t6 = t5 >> t4
t7 = t5 <= t0
t8 = a3 == a1
t9 = t0 != t2
t10 = 1 + a4
t11 = t8 & t8
t12 = a2 | t4
return t3
Fastest checker: cbmc
Fails for (3, 1, 11, 3)

[]







Timeout
Perf counters:
{'cbmc': 8, 'timeout': 1, 'iterations': 5}
Perf timers:
verify: 3.73s
checker: 600.06s
_: 600.10s
synth: 596.34s
