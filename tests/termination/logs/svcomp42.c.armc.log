ARMC3: Abstraction Refinement Model Checker, v. 3.20.05 (May-21-2008)
rybal@mpi-sws.mpg.de
cmd line: [live,/users/matlew/synth/papers/termination/experiments/benchmarks/svcomp42.c.main.pl,-straight]
reading input from /users/matlew/synth/papers/termination/experiments/benchmarks/svcomp42.c.main.pl...done.
creating straight line code between cutpoints...done.

transition(p(pc(main-0-22),data(A,B,C,D)), p(pc(main-ret-0),data(E,F,G,H)), {1=1,B=0,1=1,1=1,1=1,H=D,G=C,F=B,E=A}, [1=1,B=0,1=1,1=1,1=1], [H=D,G=C,F=B,E=A], tid([24,23,25,6,1])).
transition(p(pc(main-0-22),data(A,B,C,D)), p(pc(main-ret-0),data(E,F,G,H)), {1=1,B>=1+0,A=<0,1=1,1=1,1=1,H=D,G=C,F=B,E=A}, [1=1,B>=1+0,A=<0,1=1,1=1,1=1], [H=D,G=C,F=B,E=A], tid([24,23,26,5,3,1])).
transition(p(pc(main-0-22),data(A,B,C,_)), p(pc(main-0-22),data(D,E,F,G)), {1=1,B>=1+0,A>=1+0,B>=1+0,1=1,H=0,1=1,G=H,F=C,E=B,D=A-1}, [1=1,B>=1+0,A>=1+0,B>=1+0,1=1,H=0,1=1], [G=H,F=C,E=B,D=A-1], tid([14,13,8,7,4,3,1])).
transition(p(pc(main-0-22),data(A,B,C,_)), p(pc(main-0-22),data(D,E,F,G)), {1=1,B>=1+0,A>=1+0,B>=1+0,1=1,H>=1+0,1=1,1=1,G=H,F=C,E=B-1,D=I}, [1=1,B>=1+0,A>=1+0,B>=1+0,1=1,H>=1+0,1=1,1=1], [G=H,F=C,E=B-1,D=I], tid([12,11,10,8,7,4,3,1])).
transition(p(pc(main-0-22),data(A,B,C,_)), p(pc(main-0-22),data(D,E,F,G)), {1=1,B>=1+0,A>=1+0,B>=1+0,1=1,H+1=<0,1=1,1=1,G=H,F=C,E=B-1,D=I}, [1=1,B>=1+0,A>=1+0,B>=1+0,1=1,H+1=<0,1=1,1=1], [G=H,F=C,E=B-1,D=I], tid([12,11,9,8,7,4,3,1])).
transition(p(pc(main-0-22),data(A,B,C,D)), p(pc(main-ret-0),data(E,F,G,H)), {1=1,B+1=<0,A=<0,1=1,1=1,1=1,H=D,G=C,F=B,E=A}, [1=1,B+1=<0,A=<0,1=1,1=1,1=1], [H=D,G=C,F=B,E=A], tid([24,23,26,5,2,1])).
transition(p(pc(main-0-22),data(A,B,_,C)), p(pc(main-0-22),data(D,E,F,G)), {1=1,B+1=<0,A>=1+0,B=<0,1=1,H=0,1=1,1=1,G=C,F=H,E=I,D=A-1}, [1=1,B+1=<0,A>=1+0,B=<0,1=1,H=0,1=1,1=1], [G=C,F=H,E=I,D=A-1], tid([22,21,20,16,15,4,2,1])).
transition(p(pc(main-0-22),data(A,B,_,C)), p(pc(main-0-22),data(D,E,F,G)), {1=1,B+1=<0,A>=1+0,B=<0,1=1,H>=1+0,1=1,G=C,F=H,E=B+1,D=A}, [1=1,B+1=<0,A>=1+0,B=<0,1=1,H>=1+0,1=1], [G=C,F=H,E=B+1,D=A], tid([19,18,16,15,4,2,1])).
transition(p(pc(main-0-22),data(A,B,_,C)), p(pc(main-0-22),data(D,E,F,G)), {1=1,B+1=<0,A>=1+0,B=<0,1=1,H+1=<0,1=1,G=C,F=H,E=B+1,D=A}, [1=1,B+1=<0,A>=1+0,B=<0,1=1,H+1=<0,1=1], [G=C,F=H,E=B+1,D=A], tid([19,17,16,15,4,2,1])).
transition(p(pc(main-0-22),data(A,B,C,D)), p(pc(main-ret-0),data(E,F,G,H)), {1=1,B=0,1=1,1=1,1=1,H=D,G=C,F=B,E=A}, [1=1,B=0,1=1,1=1,1=1], [H=D,G=C,F=B,E=A], tid([24,23,25,6,1])).
transition(p(pc(main-0-22),data(A,B,C,D)), p(pc(main-ret-0),data(E,F,G,H)), {1=1,B>=1+0,A=<0,1=1,1=1,1=1,H=D,G=C,F=B,E=A}, [1=1,B>=1+0,A=<0,1=1,1=1,1=1], [H=D,G=C,F=B,E=A], tid([24,23,26,5,3,1])).
transition(p(pc(main-0-22),data(A,B,C,_)), p(pc(main-0-22),data(D,E,F,G)), {1=1,B>=1+0,A>=1+0,B>=1+0,1=1,H=0,1=1,G=H,F=C,E=B,D=A-1}, [1=1,B>=1+0,A>=1+0,B>=1+0,1=1,H=0,1=1], [G=H,F=C,E=B,D=A-1], tid([14,13,8,7,4,3,1])).
transition(p(pc(main-0-22),data(A,B,C,_)), p(pc(main-0-22),data(D,E,F,G)), {1=1,B>=1+0,A>=1+0,B>=1+0,1=1,H>=1+0,1=1,1=1,G=H,F=C,E=B-1,D=I}, [1=1,B>=1+0,A>=1+0,B>=1+0,1=1,H>=1+0,1=1,1=1], [G=H,F=C,E=B-1,D=I], tid([12,11,10,8,7,4,3,1])).
transition(p(pc(main-0-22),data(A,B,C,_)), p(pc(main-0-22),data(D,E,F,G)), {1=1,B>=1+0,A>=1+0,B>=1+0,1=1,H+1=<0,1=1,1=1,G=H,F=C,E=B-1,D=I}, [1=1,B>=1+0,A>=1+0,B>=1+0,1=1,H+1=<0,1=1,1=1], [G=H,F=C,E=B-1,D=I], tid([12,11,9,8,7,4,3,1])).
transition(p(pc(main-0-22),data(A,B,C,D)), p(pc(main-ret-0),data(E,F,G,H)), {1=1,B+1=<0,A=<0,1=1,1=1,1=1,H=D,G=C,F=B,E=A}, [1=1,B+1=<0,A=<0,1=1,1=1,1=1], [H=D,G=C,F=B,E=A], tid([24,23,26,5,2,1])).
transition(p(pc(main-0-22),data(A,B,_,C)), p(pc(main-0-22),data(D,E,F,G)), {1=1,B+1=<0,A>=1+0,B=<0,1=1,H=0,1=1,1=1,G=C,F=H,E=I,D=A-1}, [1=1,B+1=<0,A>=1+0,B=<0,1=1,H=0,1=1,1=1], [G=C,F=H,E=I,D=A-1], tid([22,21,20,16,15,4,2,1])).
transition(p(pc(main-0-22),data(A,B,_,C)), p(pc(main-0-22),data(D,E,F,G)), {1=1,B+1=<0,A>=1+0,B=<0,1=1,H>=1+0,1=1,G=C,F=H,E=B+1,D=A}, [1=1,B+1=<0,A>=1+0,B=<0,1=1,H>=1+0,1=1], [G=C,F=H,E=B+1,D=A], tid([19,18,16,15,4,2,1])).
transition(p(pc(main-0-22),data(A,B,_,C)), p(pc(main-0-22),data(D,E,F,G)), {1=1,B+1=<0,A>=1+0,B=<0,1=1,H+1=<0,1=1,G=C,F=H,E=B+1,D=A}, [1=1,B+1=<0,A>=1+0,B=<0,1=1,H+1=<0,1=1], [G=C,F=H,E=B+1,D=A], tid([19,17,16,15,4,2,1])).




--------------------------------------------------
abstraction refinement iteration 0:
lfp iteration 0 
abstract counterexample: stem [0], loop [tid([14,13,8,7,4,3,1])]
trans preds: _22469->_22472:	#0:	
y=<0
y-y'=<0
refining loop
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): y-y'>=1

refining stem

cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): y-y'>=1

refining loop
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): y>=1

refining stem

cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): y>=1




--------------------------------------------------
abstraction refinement iteration 1:
lfp iteration 0 
abstract counterexample: stem [0], loop [tid([12,11,10,8,7,4,3,1])]
trans preds: _118887->_118890:	#2:	y>=1, y-y'>=1
x=<0
x-x'=<0
refining loop
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x-x'>=1

refining stem

cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x-x'>=1

refining loop
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x>=1

refining stem

cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x>=1




--------------------------------------------------
abstraction refinement iteration 2:
lfp iteration 0 
abstract counterexample: stem [0], loop [tid([19,18,16,15,4,2,1])]
trans preds: _81018->_81021:	#4:	x>=1, x-x'>=1, y>=1, y-y'>=1
x>=0
x-x'>=0
refining loop
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x-x'=< -1

refining stem

cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x-x'=< -1

refining loop
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x=< -1

refining stem

cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x=< -1




--------------------------------------------------
abstraction refinement iteration 3:
lfp iteration 0 1 
abstract counterexample: stem [0], loop [tid([14,13,8,7,4,3,1]),tid([12,11,10,8,7,4,3,1])]
trans preds: _55590->_55593:	#6:	x=< -1, x-x'=< -1, x>=1, x-x'>=1, y>=1, y-y'>=1
x=<0
x'-x>=0
refining loop
cutting step 2 at pc(main-0-22)
LI at pc(main-0-22): x'-x=<0
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x'-x=< -1

refining stem

cutting step 2 at pc(main-0-22)
LI at pc(main-0-22): x'-x=<0
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x'-x=< -1

refining loop
cutting step 2 at pc(main-0-22)
LI at pc(main-0-22): x'-x=<0
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x>=1

refining stem

cutting step 2 at pc(main-0-22)
LI at pc(main-0-22): x'-x=<0
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x>=1




--------------------------------------------------
abstraction refinement iteration 4:
lfp iteration 0 1 
abstract counterexample: stem [0], loop [tid([12,11,10,8,7,4,3,1]),tid([22,21,20,16,15,4,2,1])]
trans preds: _110726->_110729:	#7:	x'-x=<0, x=< -1, x-x'=< -1, x>=1, x-x'>=1, y>=1, y-y'>=1
loop infeasible:
1=1
1=1
refining loop
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x'>=0

refining stem

cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x'>=0

refining loop
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x'>=0

refining stem

cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): x'>=0




--------------------------------------------------
abstraction refinement iteration 5:
lfp iteration 0 1 
abstract counterexample: stem [0], loop [tid([19,18,16,15,4,2,1]),tid([22,21,20,16,15,4,2,1])]
trans preds: _54049->_54052:	#8:	x'>=0, x'-x=<0, x=< -1, x-x'=< -1, x>=1, x-x'>=1, y>=1, y-y'>=1
y=<0
y'-y>=0
refining loop
cutting step 2 at pc(main-0-22)
LI at pc(main-0-22): y'-y=<0
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): y'-y=< -1

refining stem

cutting step 2 at pc(main-0-22)
LI at pc(main-0-22): y'-y=<0
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): y'-y=< -1

refining loop
cutting step 2 at pc(main-0-22)
LI at pc(main-0-22): y'-y=<0
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): y>=1

refining stem

cutting step 2 at pc(main-0-22)
LI at pc(main-0-22): y'-y=<0
cutting step 1 at pc(main-0-22)
LI at pc(main-0-22): y>=1




--------------------------------------------------
abstraction refinement iteration 6:
lfp iteration 0 1 2 3 


==================================================
ARMC-LIVE: program is correct

abstract trans fixpoint
abstract_trans_state(0, pc(main-0-22), pc(main-0-22), [], stem, 1, (0,0)).
abstract_trans_state(1, pc(main-0-22), pc(main-ret-0), [2], stem, 2, (1,tid([24,23,25,6,1]))).
abstract_trans_state(1, pc(main-0-22), pc(main-ret-0), [1,2,3], loop, 3, (1,tid([24,23,25,6,1]))).
abstract_trans_state(1, pc(main-0-22), pc(main-0-22), [1,2,3,6,8,9], loop, 4, (1,tid([14,13,8,7,4,3,1]))).
abstract_trans_state(1, pc(main-0-22), pc(main-0-22), [2,3,6,7,8], loop, 5, (1,tid([12,11,10,8,7,4,3,1]))).
abstract_trans_state(1, pc(main-0-22), pc(main-ret-0), [], stem, 6, (1,tid([24,23,26,5,2,1]))).
abstract_trans_state(1, pc(main-0-22), pc(main-ret-0), [1,3,4], loop, 7, (1,tid([24,23,26,5,2,1]))).
abstract_trans_state(1, pc(main-0-22), pc(main-0-22), [1,4,8,9], loop, 8, (1,tid([22,21,20,16,15,4,2,1]))).
abstract_trans_state(1, pc(main-0-22), pc(main-0-22), [1,4,5,8], loop, 9, (1,tid([19,18,16,15,4,2,1]))).
abstract_trans_state(2, pc(main-0-22), pc(main-ret-0), [2,3,6,7,8], loop, 10, (5,tid([24,23,25,6,1]))).
abstract_trans_state(2, pc(main-0-22), pc(main-ret-0), [1,2,4,5,8,9], loop, 11, (8,tid([24,23,25,6,1]))).
abstract_trans_state(2, pc(main-0-22), pc(main-0-22), [2,4,5,8], loop, 12, (8,tid([12,11,10,8,7,4,3,1]))).
abstract_trans_state(2, pc(main-0-22), pc(main-ret-0), [1,4,8,9], loop, 13, (8,tid([24,23,26,5,2,1]))).
abstract_trans_state(2, pc(main-0-22), pc(main-ret-0), [1,2,4,5,8], loop, 14, (9,tid([24,23,25,6,1]))).
abstract_trans_state(3, pc(main-0-22), pc(main-ret-0), [2,4,5,8], loop, 15, (12,tid([24,23,25,6,1]))).

frontier 0: stem 1 (pc(main-0-22)->pc(main-0-22)) from 0 by applying 0: 	T
frontier 1: stem 2 (pc(main-0-22)->pc(main-ret-0)) from 1 by applying tid([24,23,25,6,1]): 	x'>=0
frontier 1: loop 3 (pc(main-0-22)->pc(main-ret-0)) from 1 by applying tid([24,23,25,6,1]): 	y'-y=<0, x'>=0, x'-x=<0
frontier 1: loop 4 (pc(main-0-22)->pc(main-0-22)) from 1 by applying tid([14,13,8,7,4,3,1]): 	y'-y=<0, x'>=0, x'-x=<0, x>=1, y>=1, y-y'>=1
frontier 1: loop 5 (pc(main-0-22)->pc(main-0-22)) from 1 by applying tid([12,11,10,8,7,4,3,1]): 	x'>=0, x'-x=<0, x>=1, x-x'>=1, y>=1
frontier 1: stem 6 (pc(main-0-22)->pc(main-ret-0)) from 1 by applying tid([24,23,26,5,2,1]): 	T
frontier 1: loop 7 (pc(main-0-22)->pc(main-ret-0)) from 1 by applying tid([24,23,26,5,2,1]): 	y'-y=<0, x'-x=<0, x=< -1
frontier 1: loop 8 (pc(main-0-22)->pc(main-0-22)) from 1 by applying tid([22,21,20,16,15,4,2,1]): 	y'-y=<0, x=< -1, y>=1, y-y'>=1
frontier 1: loop 9 (pc(main-0-22)->pc(main-0-22)) from 1 by applying tid([19,18,16,15,4,2,1]): 	y'-y=<0, x=< -1, x-x'=< -1, y>=1
frontier 2: loop 10 (pc(main-0-22)->pc(main-ret-0)) from 5 by applying tid([24,23,25,6,1]): 	x'>=0, x'-x=<0, x>=1, x-x'>=1, y>=1
frontier 2: loop 11 (pc(main-0-22)->pc(main-ret-0)) from 8 by applying tid([24,23,25,6,1]): 	y'-y=<0, x'>=0, x=< -1, x-x'=< -1, y>=1, y-y'>=1
frontier 2: loop 12 (pc(main-0-22)->pc(main-0-22)) from 8 by applying tid([12,11,10,8,7,4,3,1]): 	x'>=0, x=< -1, x-x'=< -1, y>=1
frontier 2: loop 13 (pc(main-0-22)->pc(main-ret-0)) from 8 by applying tid([24,23,26,5,2,1]): 	y'-y=<0, x=< -1, y>=1, y-y'>=1
frontier 2: loop 14 (pc(main-0-22)->pc(main-ret-0)) from 9 by applying tid([24,23,25,6,1]): 	y'-y=<0, x'>=0, x=< -1, x-x'=< -1, y>=1
frontier 3: loop 15 (pc(main-0-22)->pc(main-ret-0)) from 12 by applying tid([24,23,25,6,1]): 	x'>=0, x=< -1, x-x'=< -1, y>=1

_139661->_139664:	#9:	y'-y=<0, x'>=0, x'-x=<0, x=< -1, x-x'=< -1, x>=1, x-x'>=1, y>=1, y-y'>=1
---------------------------------------------+----run(s)----+---wall(s)----+
Time on instantiating uf axioms              |     0.00     |     0.00     |
Time on cli constraint solving               |     0.05     |     0.04     |
Time on cli constraint preparation           |     0.00     |     0.00     |
Time on cli matrix parsing                   |     0.00     |     0.00     |
Time on cli preprocessing                    |     0.00     |     0.00     |
Time on concretizing trans rel               |     0.00     |     0.00     |
Time on concretizing from state              |     0.00     |     0.00     |
Time on computing the subsumer subtree       |     0.00     |     0.00     |
Time on finding the location of subsumer in queue|     0.00     |     0.00     |
Time on path invariant generation            |     0.00     |     0.00     |
Time on new predicate selection              |     0.01     |     0.01     |
Time on refinement preprocessing cut         |     0.00     |     0.00     |
Time on refinement cutting trace             |     0.06     |     0.08     |
Time on refinement finding unsat subtrace    |     0.00     |     0.00     |
Time on refinement                           |     0.08     |     0.09     |
Time on fixpoint abstraction                 |     0.00     |     0.00     |
Time on fixpoint test                        |     0.00     |     0.00     |
Time on abstract check                       |     0.00     |     0.00     |
Time on total including result checking      |     0.00     |     0.00     |
Time on check result                         |     0.00     |     0.00     |
Time on total                                |     0.00     |     0.00     |
---------------------------------------------+--------------+--------------+



==================================================
ARMC-LIVE: program is correct

TERMINATES
