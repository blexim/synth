Using seed: 1337
[]
Fastest checker: genetic
Program 0:
t1 = x % 0xf;
t2 = t1 ? 0xf : x;
t3 = t1 ? x : y;
res1 = 0xf + x;
Program 1:
t1 = -x;
t2 = x + 0x8;
t3 = -t1;
res1 = t2 | t3;

Fastest checker: explicit
Fails for (1, 11)

[]
Fastest checker: genetic
Program 0:
res1 = 0x0 s<= y;
Program 1:
res1 = x & x;

Fastest checker: explicit
Fails for (1, 0)

[]
Fastest checker: genetic
Program 0:
t1 = 0xf - y;
t2 = t1 < t1;
t3 = t2 - y;
t4 = t3 != 0xf;
res1 = t4 s<= t2;
Program 1:
t1 = 0x7 % 0x7;
t2 = y s< 0x7;
t3 = 0x7 == y;
t4 = t1 >>> t3;
res1 = y <= x;

Fastest checker: explicit
Fails for (1, 1)

[]
Fastest checker: genetic
Program 0:
t1 = 0x7 ? 0x7 : x;
t2 = t1 * y;
t3 = t2 & x;
res1 = min(y, t2);
Program 1:
t1 = 0x7 - y;
t2 = t1 + 0x7;
t3 = x == x;
res1 = 0x7 + t1;

Fastest checker: explicit
Fails for (1, 14)

[]
Fastest checker: genetic
Program 0:
t1 = x & 0xf;
t2 = min(x, 0xf);
t3 = y s<= y;
t4 = 0xf <= t3;
res1 = ~t2;
Program 1:
t1 = x * x;
t2 = max(y, y);
t3 = x << t1;
t4 = -x;
res1 = ~y;

Fastest checker: explicit
Fails for (15, 14)

[]
Fastest checker: genetic
Program 0:
t1 = 0x8 | x;
res1 = 0x8 s<= y;
Program 1:
t1 = x ? y : 0xf;
t2 = max(x, 0xf);
t3 = 0xf - y;
t4 = t3 + t1;
res1 = y ==> 0xf;

Fastest checker: explicit
Fails for (1, 15)

[]
Fastest checker: genetic
Program 0:
t1 = y | x;
t2 = t1 << x;
t3 = 0x1 >> t2;
res1 = t1 <= t1;
Program 1:
t1 = 0xf << 0xf;
t2 = t1 + y;
t3 = ~t2;
res1 = 0xf != t1;

Fastest checker: explicit
Fails for (1, 7)

[]
Fastest checker: genetic
Program 0:
t1 = 0x0 << 0x0;
t2 = x + x;
t3 = x | x;
res1 = ~t2;
Program 1:
res1 = 0x8 - y;

Fastest checker: explicit
Fails for (1, 8)

[]
Fastest checker: genetic
Program 0:
t1 = ~0x8;
t2 = 0x8 ? x : 0x8;
t3 = y != x;
t4 = x <= t3;
res1 = x ^ t4;
Program 1:
t1 = 0x8 + 0x8;
t2 = 0x8 + 0x8;
t3 = t2 s< t2;
res1 = 0x8 ^ x;

Fastest checker: explicit
Fails for (2, 11)

[]
Fastest checker: genetic
Program 0:
t1 = x s< 0x8;
t2 = y + y;
t3 = 0x8 & 0x8;
res1 = t3 << t3;
Program 1:
t1 = -y;
t2 = t1 >> 0x1;
res1 = t2 <= y;

Fastest checker: explicit
Fails for (1, 4)

[]
Fastest checker: genetic
Program 0:
t1 = ~0x0;
t2 = 0x0 ? x : 0x0;
t3 = y != x;
t4 = x <= t3;
res1 = x ^ t4;
Program 1:
t1 = 0xf + 0xf;
t2 = t1 + x;
t3 = ~x;
res1 = ~y;

Fastest checker: explicit
Fails for (5, 4)

[]
Fastest checker: genetic
Program 0:
t1 = y s<= 0x1;
t2 = 0x1 != x;
t3 = 0x1 | 0x1;
t4 = 0x1 ^ y;
res1 = -0x1;
Program 1:
t1 = y - y;
t2 = t1 == t1;
t3 = 0x1 - y;
res1 = 0x1 <= x;

Fastest checker: explicit
Fails for (2, 1)

[]
Fastest checker: genetic
Program 0:
t1 = 0x8 <= 0x8;
t2 = 0x8 + t1;
res1 = x | y;
Program 1:
t1 = -x;
t2 = y == 0x7;
t3 = y >> x;
t4 = -y;
res1 = t4 < 0x7;

Fastest checker: explicit
Fails for (1, 9)

[]
Fastest checker: genetic
Program 0:
t1 = 0x1 s< x;
t2 = max(y, y);
t3 = x != 0x1;
t4 = t3 ^ t1;
res1 = max(t1, y);
Program 1:
t1 = x + y;
res1 = -y;

Fastest checker: explicit
Fails for (7, 15)

[]
Fastest checker: genetic
Program 0:
t1 = ~0xf;
t2 = -0xf;
t3 = x & y;
res1 = t3 s<= y;
Program 1:
res1 = ~y;

Fastest checker: explicit
Fails for (7, 7)

[]
Fastest checker: genetic
Program 0:
t1 = 0x7 - y;
t2 = 0x7 + 0x7;
t3 = 0x7 + 0x7;
t4 = 0x7 + 0x7;
res1 = 0x7 + 0x7;
Program 1:
t1 = y <= x;
t2 = ~y;
t3 = max(x, t2);
res1 = t2 + 0x7;

Fastest checker: explicit
Fails for (1, 6)

[]
Fastest checker: genetic
Program 0:
res1 = 0x8 == 0x8;
Program 1:
t1 = y | y;
t2 = 0x8 - t1;
res1 = x < 0x8;

Fastest checker: explicit
Correct for wordlen=4
Fastest checker: explicit
Trying to generalize...
Fastest checker: cbmc
Fastest checker: cbmc







Finished in 5.47s

Program 0:
res1 = 0x88888888 == 0x88888888;
Program 1:
t1 = y | y;
t2 = 0x80000000 - t1;
res1 = x < 0x80000000;


Perf counters:
{'genetic': 17, 'cbmc': 2, 'explicit': 18, 'iterations': 17}
Perf timers:
gcc: 0.53s
verify: 2.16s
checker: 5.44s
generalize: 1.76s
synth: 3.30s
_: 5.47s
