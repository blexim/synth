ARMC3: Abstraction Refinement Model Checker, v. 3.20.05 (May-21-2008)
rybal@mpi-sws.mpg.de
cmd line: [live,/users/matlew/synth/papers/termination/experiments/benchmarks/svcomp37.c.main.pl,-straight]
reading input from /users/matlew/synth/papers/termination/experiments/benchmarks/svcomp37.c.main.pl...done.
creating straight line code between cutpoints...done.

transition(p(pc(main-0-30),data(A,B,C)), p(pc(main-ret-0),data(D,E,F)), {1=1,B=<0,1=1,1=1,1=1,F=C,E=B,D=A}, [1=1,B=<0,1=1,1=1,1=1], [F=C,E=B,D=A], tid([21,20,22,5,1])).
transition(p(pc(main-0-30),data(A,B,C)), p(pc(main-ret-0),data(D,E,F)), {1=1,B>=1+0,A=<0,1=1,1=1,1=1,F=C,E=B,D=A}, [1=1,B>=1+0,A=<0,1=1,1=1,1=1], [F=C,E=B,D=A], tid([21,20,23,4,2,1])).
transition(p(pc(main-0-30),data(A,B,_)), p(pc(main-0-30),data(C,D,E)), {1=1,B>=1+0,A>=1+0,1=1,F=0,B>=A,1=1,1=1,E=F,D=A-1,C=G}, [1=1,B>=1+0,A>=1+0,1=1,F=0,B>=A,1=1,1=1], [E=F,D=A-1,C=G], tid([19,18,17,14,6,3,2,1])).
transition(p(pc(main-0-30),data(A,B,_)), p(pc(main-0-30),data(C,D,E)), {1=1,B>=1+0,A>=1+0,1=1,F=0,B+1=<A,1=1,1=1,E=F,D=B-1,C=G}, [1=1,B>=1+0,A>=1+0,1=1,F=0,B+1=<A,1=1,1=1], [E=F,D=B-1,C=G], tid([19,16,15,14,6,3,2,1])).
transition(p(pc(main-0-30),data(A,B,_)), p(pc(main-0-30),data(C,D,E)), {1=1,B>=1+0,A>=1+0,1=1,F>=1+0,B>=A,1=1,1=1,E=F,D=G,C=A-1}, [1=1,B>=1+0,A>=1+0,1=1,F>=1+0,B>=A,1=1,1=1], [E=F,D=G,C=A-1], tid([13,12,11,8,6,3,2,1])).
transition(p(pc(main-0-30),data(A,B,_)), p(pc(main-0-30),data(C,D,E)), {1=1,B>=1+0,A>=1+0,1=1,F>=1+0,B+1=<A,1=1,1=1,E=F,D=G,C=B-1}, [1=1,B>=1+0,A>=1+0,1=1,F>=1+0,B+1=<A,1=1,1=1], [E=F,D=G,C=B-1], tid([13,10,9,8,6,3,2,1])).
transition(p(pc(main-0-30),data(A,B,_)), p(pc(main-0-30),data(C,D,E)), {1=1,B>=1+0,A>=1+0,1=1,F+1=<0,B>=A,1=1,1=1,E=F,D=G,C=A-1}, [1=1,B>=1+0,A>=1+0,1=1,F+1=<0,B>=A,1=1,1=1], [E=F,D=G,C=A-1], tid([13,12,11,7,6,3,2,1])).
transition(p(pc(main-0-30),data(A,B,_)), p(pc(main-0-30),data(C,D,E)), {1=1,B>=1+0,A>=1+0,1=1,F+1=<0,B+1=<A,1=1,1=1,E=F,D=G,C=B-1}, [1=1,B>=1+0,A>=1+0,1=1,F+1=<0,B+1=<A,1=1,1=1], [E=F,D=G,C=B-1], tid([13,10,9,7,6,3,2,1])).
transition(p(pc(main-0-30),data(A,B,C)), p(pc(main-ret-0),data(D,E,F)), {1=1,B=<0,1=1,1=1,1=1,F=C,E=B,D=A}, [1=1,B=<0,1=1,1=1,1=1], [F=C,E=B,D=A], tid([21,20,22,5,1])).
transition(p(pc(main-0-30),data(A,B,C)), p(pc(main-ret-0),data(D,E,F)), {1=1,B>=1+0,A=<0,1=1,1=1,1=1,F=C,E=B,D=A}, [1=1,B>=1+0,A=<0,1=1,1=1,1=1], [F=C,E=B,D=A], tid([21,20,23,4,2,1])).
transition(p(pc(main-0-30),data(A,B,_)), p(pc(main-0-30),data(C,D,E)), {1=1,B>=1+0,A>=1+0,1=1,F=0,B>=A,1=1,1=1,E=F,D=A-1,C=G}, [1=1,B>=1+0,A>=1+0,1=1,F=0,B>=A,1=1,1=1], [E=F,D=A-1,C=G], tid([19,18,17,14,6,3,2,1])).
transition(p(pc(main-0-30),data(A,B,_)), p(pc(main-0-30),data(C,D,E)), {1=1,B>=1+0,A>=1+0,1=1,F=0,B+1=<A,1=1,1=1,E=F,D=B-1,C=G}, [1=1,B>=1+0,A>=1+0,1=1,F=0,B+1=<A,1=1,1=1], [E=F,D=B-1,C=G], tid([19,16,15,14,6,3,2,1])).
transition(p(pc(main-0-30),data(A,B,_)), p(pc(main-0-30),data(C,D,E)), {1=1,B>=1+0,A>=1+0,1=1,F>=1+0,B>=A,1=1,1=1,E=F,D=G,C=A-1}, [1=1,B>=1+0,A>=1+0,1=1,F>=1+0,B>=A,1=1,1=1], [E=F,D=G,C=A-1], tid([13,12,11,8,6,3,2,1])).
transition(p(pc(main-0-30),data(A,B,_)), p(pc(main-0-30),data(C,D,E)), {1=1,B>=1+0,A>=1+0,1=1,F>=1+0,B+1=<A,1=1,1=1,E=F,D=G,C=B-1}, [1=1,B>=1+0,A>=1+0,1=1,F>=1+0,B+1=<A,1=1,1=1], [E=F,D=G,C=B-1], tid([13,10,9,8,6,3,2,1])).
transition(p(pc(main-0-30),data(A,B,_)), p(pc(main-0-30),data(C,D,E)), {1=1,B>=1+0,A>=1+0,1=1,F+1=<0,B>=A,1=1,1=1,E=F,D=G,C=A-1}, [1=1,B>=1+0,A>=1+0,1=1,F+1=<0,B>=A,1=1,1=1], [E=F,D=G,C=A-1], tid([13,12,11,7,6,3,2,1])).
transition(p(pc(main-0-30),data(A,B,_)), p(pc(main-0-30),data(C,D,E)), {1=1,B>=1+0,A>=1+0,1=1,F+1=<0,B+1=<A,1=1,1=1,E=F,D=G,C=B-1}, [1=1,B>=1+0,A>=1+0,1=1,F+1=<0,B+1=<A,1=1,1=1], [E=F,D=G,C=B-1], tid([13,10,9,7,6,3,2,1])).




--------------------------------------------------
abstraction refinement iteration 0:
lfp iteration 0 
abstract counterexample: stem [0], loop [tid([19,18,17,14,6,3,2,1])]
trans preds: _15566->_15569:	#0:	
x=<0
x-x'=<0
refining loop
cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): x-x'>=1

refining stem

cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): x-x'>=1

refining loop
cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): x>=1

refining stem

cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): x>=1




--------------------------------------------------
abstraction refinement iteration 1:
lfp iteration 0 
abstract counterexample: stem [0], loop [tid([13,12,11,8,6,3,2,1])]
trans preds: _94587->_94590:	#2:	x>=1, x-x'>=1
y=<0
y-y'=<0
refining loop
cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): y-y'>=1

refining stem

cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): y-y'>=1

refining loop
cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): y>=1

refining stem

cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): y>=1




--------------------------------------------------
abstraction refinement iteration 2:
lfp iteration 0 1 
abstract counterexample: stem [0], loop [tid([19,18,17,14,6,3,2,1]),tid([13,12,11,8,6,3,2,1])]
trans preds: _42712->_42715:	#4:	y>=1, y-y'>=1, x>=1, x-x'>=1
y=<1
y'-y>= -1
refining loop
cutting step 2 at pc(main-0-30)
LI at pc(main-0-30): x'-y=< -1
cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): y'-y=< -2

refining stem

cutting step 2 at pc(main-0-30)
LI at pc(main-0-30): x'-y=< -1
cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): y'-y=< -2

refining loop
cutting step 2 at pc(main-0-30)
LI at pc(main-0-30): x'-y=< -1
cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): y>=2

refining stem

cutting step 2 at pc(main-0-30)
LI at pc(main-0-30): x'-y=< -1
cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): y>=2




--------------------------------------------------
abstraction refinement iteration 3:
lfp iteration 0 1 
abstract counterexample: stem [0], loop [tid([13,12,11,8,6,3,2,1]),tid([19,18,17,14,6,3,2,1])]
trans preds: _144635->_144638:	#7:	y>=2, y'-y=< -2, x'-y=< -1, y>=1, y-y'>=1, x>=1, x-x'>=1
x=<1
x'-x>= -1
refining loop
cutting step 2 at pc(main-0-30)
LI at pc(main-0-30): y'-x=< -1
cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): x'-x=< -2

refining stem

cutting step 2 at pc(main-0-30)
LI at pc(main-0-30): y'-x=< -1
cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): x'-x=< -2

refining loop
cutting step 2 at pc(main-0-30)
LI at pc(main-0-30): y'-x=< -1
cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): x>=2

refining stem

cutting step 2 at pc(main-0-30)
LI at pc(main-0-30): y'-x=< -1
cutting step 1 at pc(main-0-30)
LI at pc(main-0-30): x>=2




--------------------------------------------------
abstraction refinement iteration 4:
lfp iteration 0 1 2 


==================================================
ARMC-LIVE: program is correct

abstract trans fixpoint
abstract_trans_state(0, pc(main-0-30), pc(main-0-30), [], stem, 1, (0,0)).
abstract_trans_state(1, pc(main-0-30), pc(main-ret-0), [], stem, 2, (1,tid([21,20,22,5,1]))).
abstract_trans_state(1, pc(main-0-30), pc(main-ret-0), [], loop, 3, (1,tid([21,20,22,5,1]))).
abstract_trans_state(1, pc(main-0-30), pc(main-0-30), [6,7,9,10], loop, 4, (1,tid([19,18,17,14,6,3,2,1]))).
abstract_trans_state(1, pc(main-0-30), pc(main-0-30), [3,7,8,9], loop, 5, (1,tid([13,12,11,8,6,3,2,1]))).

frontier 0: stem 1 (pc(main-0-30)->pc(main-0-30)) from 0 by applying 0: 	T
frontier 1: stem 2 (pc(main-0-30)->pc(main-ret-0)) from 1 by applying tid([21,20,22,5,1]): 	T
frontier 1: loop 3 (pc(main-0-30)->pc(main-ret-0)) from 1 by applying tid([21,20,22,5,1]): 	T
frontier 1: loop 4 (pc(main-0-30)->pc(main-0-30)) from 1 by applying tid([19,18,17,14,6,3,2,1]): 	x'-y=< -1, y>=1, x>=1, x-x'>=1
frontier 1: loop 5 (pc(main-0-30)->pc(main-0-30)) from 1 by applying tid([13,12,11,8,6,3,2,1]): 	y'-x=< -1, y>=1, y-y'>=1, x>=1

_173985->_173988:	#10:	x>=2, x'-x=< -2, y'-x=< -1, y>=2, y'-y=< -2, x'-y=< -1, y>=1, y-y'>=1, x>=1, x-x'>=1
---------------------------------------------+----run(s)----+---wall(s)----+
Time on instantiating uf axioms              |     0.00     |     0.00     |
Time on cli constraint solving               |     0.01     |     0.06     |
Time on cli constraint preparation           |     0.01     |     0.00     |
Time on cli matrix parsing                   |     0.00     |     0.00     |
Time on cli preprocessing                    |     0.00     |     0.00     |
Time on concretizing trans rel               |     0.00     |     0.00     |
Time on concretizing from state              |     0.00     |     0.00     |
Time on computing the subsumer subtree       |     0.00     |     0.00     |
Time on finding the location of subsumer in queue|     0.00     |     0.00     |
Time on path invariant generation            |     0.00     |     0.00     |
Time on new predicate selection              |     0.01     |     0.00     |
Time on refinement preprocessing cut         |     0.00     |     0.00     |
Time on refinement cutting trace             |     0.04     |     0.06     |
Time on refinement finding unsat subtrace    |     0.00     |     0.00     |
Time on refinement                           |     0.05     |     0.08     |
Time on fixpoint abstraction                 |     0.00     |     0.00     |
Time on fixpoint test                        |     0.00     |     0.00     |
Time on abstract check                       |     0.00     |     0.00     |
Time on total including result checking      |     0.00     |     0.00     |
Time on check result                         |     0.00     |     0.00     |
Time on total                                |     0.00     |     0.00     |
---------------------------------------------+--------------+--------------+



==================================================
ARMC-LIVE: program is correct

TERMINATES
