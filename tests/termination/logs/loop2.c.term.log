Using seed: 1337
[]
Fastest checker: genetic
Program 0:
t1 = x s< N;
res1 = t1 | 0x7;
Program 1:
res1 = -x;

Fastest checker: explicit
Fails for (0, 11)

[]
Fastest checker: genetic
Program 0:
t1 = x / N;
res1 = N >>> 0x8;
Program 1:
t1 = 0x0 << N;
res1 = ~x;

Fastest checker: explicit
Fails for (0, 0)

[]
Fastest checker: genetic
Program 0:
res1 = 0x8 << 0x8;
Program 1:
t1 = x == 0x7;
t2 = ~x;
res1 = 0x7 == x;

Fastest checker: explicit
Fails for (6, 7)

[]
Fastest checker: genetic
Program 0:
t1 = max(x, N);
t2 = x & t1;
res1 = max(t2, 0x1);
Program 1:
res1 = N - x;

Fastest checker: explicit
Correct for wordlen=4
Fastest checker: cbmc
Also correct for wordlen=32!







Finished in 1.43s

Program 0:
t1 = max(x, N);
t2 = x & t1;
res1 = max(t2, 0x1);
Program 1:
res1 = N - x;


Perf counters:
{'genetic': 4, 'cbmc': 1, 'explicit': 4, 'iterations': 4}
Perf timers:
verify: 1.18s
checker: 1.42s
gcc: 0.53s
_: 1.43s
synth: 0.25s
