Using seed: 1337
[]
Fastest checker: genetic
Program 0:
t1 = -0x1;
t2 = t1 * t1;
res1 = t1 / 0x1;
Program 1:
t1 = debug ^ debug;
res1 = x >>> t1;

Fastest checker: explicit
Fails for (0, 11)

[]
Fastest checker: genetic
Program 0:
t1 = x * x;
t2 = x <= x;
t3 = debug s<= t2;
res1 = t2 >> debug;
Program 1:
t1 = x <= debug;
res1 = x << x;

Fastest checker: explicit
Fails for (0, 12)

[]
Fastest checker: genetic
Program 0:
res1 = 0x0 s<= debug;
Program 1:
res1 = x & x;

Fastest checker: explicit
Fails for (0, 0)

[]
Fastest checker: genetic
Program 0:
t1 = 0x0 s<= 0x0;
t2 = debug == x;
t3 = t1 == debug;
res1 = debug == 0x0;
Program 1:
t1 = 0x7 != x;
t2 = 0x7 + x;
t3 = t2 & t1;
res1 = t1 << t2;

Fastest checker: explicit
Fails for (1, 0)

[]
Fastest checker: genetic
Program 0:
res1 = 0x0 == debug;
Program 1:
t1 = debug s< x;
t2 = t1 == x;
t3 = 0x7 + 0x7;
res1 = 0x7 + 0x7;

Fastest checker: explicit
Fails for (2, 0)

[]
Fastest checker: genetic
Program 0:
t1 = x < 0x0;
t2 = t1 == debug;
res1 = 0x0 s< t2;
Program 1:
t1 = x == x;
t2 = t1 ^ x;
res1 = ~t2;

Fastest checker: explicit
Fails for (14, 0)

[]
Fastest checker: genetic
Program 0:
t1 = 0x0 == debug;
t2 = x >>> debug;
t3 = 0x0 ==> debug;
t4 = debug | x;
res1 = max(t1, t1);
Program 1:
t1 = -x;
t2 = x ==> x;
t3 = x s<= 0x1;
t4 = 0x1 + 0x1;
res1 = 0x1 + 0x1;

Fastest checker: explicit
Fails for (15, 0)

[]
Fastest checker: genetic
Program 0:
t1 = x << debug;
res1 = debug <= 0x8;
Program 1:
t1 = ~debug;
t2 = 0x8 - x;
t3 = 0x8 + 0x8;
t4 = 0x8 + 0x8;
res1 = x * 0x8;

Fastest checker: explicit
Fails for (0, 1)

[]
Fastest checker: genetic
Program 0:
t1 = 0x7 + 0x7;
t2 = 0x7 + 0x7;
t3 = 0x7 s<= t2;
res1 = debug ==> t3;
Program 1:
t1 = debug <= 0x7;
t2 = x ^ 0x7;
t3 = t1 & x;
res1 = 0x7 << debug;

Fastest checker: explicit
Fails for (6, 0)

[]
Fastest checker: genetic
Program 0:
t1 = debug < 0x1;
t2 = 0x1 + 0x1;
t3 = 0x1 + 0x1;
t4 = debug <= t2;
res1 = debug < 0x1;
Program 1:
t1 = x * x;
t2 = 0x8 - x;
t3 = x * 0x8;
res1 = ~debug;

Fastest checker: explicit
Fails for (8, 0)

[]







Timeout
Perf counters:
{'genetic': 10, 'explicit': 10, 'timeout': 1, 'iterations': 11}
Perf timers:
verify: 0.21s
checker: 179.98s
gcc: 0.37s
_: 180.00s
synth: 179.79s
